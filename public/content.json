[{"title":"nodejs 构建本地web测试服务器 以及 解决访问静态资源的问题！有完整源码！","date":"2017-07-13T09:44:00.000Z","path":"2017/07/13/7155399/","text":"直接打开html文件，是以file:///方式打开的，这种方式很多时候会遇到跨域的问题，因此我们一般会搭建一个简易的本地服务器，来运行测试页面。 一、构建静态服务器 1、使用express模块 建立个js文件，命名server，内容代码如下： 123456789101112131415161718192021222324 1 var express = require('express'); 2 var app = express(); 3 var path = require('path'); 4 5 //指定静态资源访问目录 6 app.use(express.static(require('path').join(__dirname, 'public'))); 7 // app.use(express.static(require('path').join(__dirname, 'views'))); 如果有文件夹存放资源，出现报错的话，那就多use几次就可以了 8 // 设定views变量，意为视图存放的目录 9 app.set('views', (__dirname + \"/public\"));10 // app.set('views', __dirname);11 // 修改模板文件的后缀名为html12 app.set( 'view engine', 'html' );13 // 运行ejs模块14 app.engine( '.html', require( 'ejs' ).__express );15 16 app.get(\"/\", function(req, res) &#123;17 res.render('index');18 &#125;);19 20 var server = app.listen(1336, \"127.0.0.1\",function()&#123;21 var host = server.address().address;22 var port = server.address().port;23 console.log(\"Server running at http://%s:%s\", host, port)24 &#125;); 文件结构如下： 运行的话只要执行：node server.js 就可以了 然后在浏览器输入 ``来访问项目文件夹内的文件了 2、使用connect模块 建立个js文件，命名 server2 ，内容代码如下： var connect = require(“connect”); var serveStatic = require(“serve-static”); var app = connect(); // app.use(serveStatic(“C:\\xxx\\xxx\\xxx\\项目文件夹”)); app.use(serveStatic(“public”)); app.listen(1337); console.log(‘Server running at http://127.0.0.1:1337/‘); 运行的话只要执行：node server2.js 就可以了， 然后在浏览器输入 ``来访问项目文件夹内的文件了。（如果是index.html文件可以省略不写，默认加载的就是这个文件）； 3、使用http模块 建立个js文件，命名 server3 ，内容代码如下： 1 var finalhandler = require(‘finalhandler’) 2 var http = require(‘http’) 3 var serveStatic = require(‘serve-static’) 4 5 // Serve up public/ftp folder 6 var serve = serveStatic(‘public’, {‘index’: [‘index.html’, ‘index.htm’]}) 7 8 // Create server 9 var server = http.createServer(function onRequest (req, res) {10 serve(req, res, finalhandler(req, res))11 })1213 // Listen14 server.listen(1338);15 console.log(‘Server running at http://127.0.0.1:1338/‘); 运行的话只要执行：node server3.js 就可以了， 然后在浏览器输入 ``来访问项目文件夹内的文件了。 注：总的文件目录如下： 源码下载地址：https://github.com/arvin0/nodejs-example/tree/master/web-static-server-example 二、解决访问静态资源 主要使用两个模块 1.通用的 serve-static 模块 详细文档：https://github.com/expressjs/serve-static 2.express专属的 app.use(express.static(require(‘path’).join(__dirname, ‘public’))); 方法 详细文档：http://expressjs.com/en/4x/api.html ，然后ctrl+F搜索 express.static ，就能找到对应的说明了。","tags":[]},{"title":"Animate CC导出spriteSheets给原生js使用！","date":"2017-06-08T09:09:00.000Z","path":"2017/06/08/6963820/","text":"一、准备工具 Adobe Animate CC 2017 jsMovieclip 类库 二、工作流程 使用Adobe Animate CC 导出sprite sheets 新建一个元件（影片剪辑MovieClip），在这个元件里添加 序列帧动画； 在库中选中这个元件，右击——生成Sprite 表——然后如图，进行设置 注意： ①这里算法要 选择 MaxRects ，默认算法会使生成的sprite表里的小图大小不一，虽然会节省空间，但是使用起来会麻烦一点； 选中 MaxRects ，生成的sprite表里的小图会统一按照最大的那张小图的大小进行计算规划。 ②数据格式 选择 JSON-Array ③这里的宽高，是指输出的 sprite表的大小，可以自己设置，也可以选择自动调整大小，但是不能 =＞2048*2048，不然游览器读取的时候会产生BUG，卡顿等现象；这是游览器的限制； 导出后有两个文件，一个UI.json，一个UI.png； 2.进行数据转换，把json里的数据转成jsMovieclip插件需要的格式 1.打开jsMovieclip文件夹里的——tools——convert——index.html 注意：index.html里的jq链接可能失效了，改成正确的路径 2.复制UI.json里的数据，然后贴到index.html里的文本框里，点击 OK按钮，输出jsMovieclip格式的数据； 3.然后具体使用，参照jsMovieclip里的example，如：jsMovieclip——samples——basic——index.html，等等；","tags":[]},{"title":"【转】MIME类型大全","date":"2017-06-05T06:35:00.000Z","path":"2017/06/05/6944815/","text":"NameMIME Type / Internet Media TypeFile ExtensionMore Details3D Crossword Pluginapplication/vnd.hzn-3d-crossword.x3dIANA: 3D Crossword Plugin3GPvideo/3gpp.3gpWikipedia: 3GP3GP2video/3gpp2.3g2Wikipedia: 3G23GPP MSEQ Fileapplication/vnd.mseq.mseqIANA: 3GPP MSEQ File3M Post It Notesapplication/vnd.3m.post-it-notes.pwnIANA: 3M Post It Notes3rd Generation Partnership Project - Pic Largeapplication/vnd.3gpp.pic-bw-large.plb3GPP3rd Generation Partnership Project - Pic Smallapplication/vnd.3gpp.pic-bw-small.psb3GPP3rd Generation Partnership Project - Pic Varapplication/vnd.3gpp.pic-bw-var.pvb3GPP3rd Generation Partnership Project - Transaction Capabilities Application Partapplication/vnd.3gpp2.tcap.tcap3GPP7-Zipapplication/x-7z-compressed.7zWikipedia: 7-ZipAbiWordapplication/x-abiword.abwWikipedia: AbiWordAce Archiveapplication/x-ace-compressed.aceWikipedia: ACEActive Content Compressionapplication/vnd.americandynamics.acc.accIANA: Active Content CompressionACU Cobolapplication/vnd.acucobol.acuIANA: ACU CobolACU Cobolapplication/vnd.acucorp.atcIANA: ACU CobolAdaptive differential pulse-code modulationaudio/adpcm.adpWikipedia: ADPCMAdobe (Macropedia) Authorware - Binary Fileapplication/x-authorware-bin.aabWikipedia: AuthorwareAdobe (Macropedia) Authorware - Mapapplication/x-authorware-map.aamWikipedia: AuthorwareAdobe (Macropedia) Authorware - Segment Fileapplication/x-authorware-seg.aasWikipedia: AuthorwareAdobe AIR Applicationapplication/vnd.adobe.air-application-installer-package+zip.airBuilding AIR ApplicationsAdobe Flashapplication/x-shockwave-flash.swfWikipedia: Adobe FlashAdobe Flex Projectapplication/vnd.adobe.fxp.fxpIANA: Adobe Flex ProjectAdobe Portable Document Formatapplication/pdf.pdfAdobe PDFAdobe PostScript Printer Description File Formatapplication/vnd.cups-ppd.ppdIANA: CupsAdobe Shockwave Playerapplication/x-director.dirWikipedia: Adobe Shockwave PlayerAdobe XML Data Packageapplication/vnd.adobe.xdp+xml.xdpWikipedia: XML Data PackageAdobe XML Forms Data Formatapplication/vnd.adobe.xfdf.xfdfWikipedia: XML Portable Document FormatAdvanced Audio Coding (AAC)audio/x-aac.aacWikipedia: AACAhead AIR Applicationapplication/vnd.ahead.space.aheadIANA: Ahead AIR ApplicationAirZip FileSECUREapplication/vnd.airzip.filesecure.azf.azfIANA: AirZipAirZip FileSECUREapplication/vnd.airzip.filesecure.azs.azsIANA: AirZipAmazon Kindle eBook formatapplication/vnd.amazon.ebook.azwKindle Direct PublishingAmigaDEapplication/vnd.amiga.ami.amiIANA: AmigaAndrew Toolkitapplication/andrew-insetN/AIANA - Andrew InsetAndroid Package Archiveapplication/vnd.android.package-archive.apkWikipedia: APK File FormatANSER-WEB Terminal Client - Certificate Issueapplication/vnd.anser-web-certificate-issue-initiation.ciiIANA: ANSWER-WEBANSER-WEB Terminal Client - Web Funds Transferapplication/vnd.anser-web-funds-transfer-initiation.ftiIANA: ANSWER-WEBAntix Game Playerapplication/vnd.antix.game-component.atxIANA: Antix Game ComponentApple Installer Packageapplication/vnd.apple.installer+xml.mpkgIANA: Apple InstallerApplixwareapplication/applixware.awVistasourceArchipelago Lesson Playerapplication/vnd.hhe.lesson-player.lesIANA: Archipelago Lesson PlayerArista Networks Software Imageapplication/vnd.aristanetworks.swi.swiIANA: Arista Networks Software ImageAssembler Source Filetext/x-asm.sWikipedia: AssemblyAtom Publishing Protocolapplication/atomcat+xml.atomcatRFC 5023Atom Publishing Protocol Service Documentapplication/atomsvc+xml.atomsvcRFC 5023Atom Syndication Formatapplication/atom+xml.atom, .xmlRFC 4287Attribute Certificateapplication/pkix-attr-cert.acRFC 5877Audio Interchange File Formataudio/x-aiff.aifWikipedia: Audio Interchange File FormatAudio Video Interleave (AVI)video/x-msvideo.aviWikipedia: AVIAudiographapplication/vnd.audiograph.aepIANA: AudiographAutoCAD DXFimage/vnd.dxf.dxfWikipedia: AutoCAD DXFAutodesk Design Web Format (DWF)model/vnd.dwf.dwfWikipedia: Design Web FormatBinary CPIO Archiveapplication/x-bcpio.bcpioWikipedia: cpioBinary Dataapplication/octet-stream.bin Bitmap Image Fileimage/bmp.bmpWikipedia: BMP File FormatBitTorrentapplication/x-bittorrent.torrentWikipedia: BitTorrentBlackberry COD Fileapplication/vnd.rim.cod.cod Blueice Research Multipassapplication/vnd.blueice.multipass.mpmIANA: MultipassBMI Drawing Data Interchangeapplication/vnd.bmi.bmiIANA: BMIBourne Shell Scriptapplication/x-sh.shWikipedia: Bourne ShellBTIFimage/prs.btif.btifIANA: BTIFBusinessObjectsapplication/vnd.businessobjects.repIANA: BusinessObjectsBzip Archiveapplication/x-bzip.bzWikipedia: BzipBzip2 Archiveapplication/x-bzip2.bz2Wikipedia: BzipC Shell Scriptapplication/x-csh.cshWikipedia: C ShellC Source Filetext/x-c.cWikipedia: C Programming LanguageCambridgeSoft Chem Drawapplication/vnd.chemdraw+xml.cdxmlIANA: Chem DrawCascading Style Sheets (CSS)text/css.cssWikipedia: CSSChemDraw eXchange filechemical/x-cdx.cdxChemDraw eXchange fileChemical Markup Languagechemical/x-cml.cmlWikipedia: Chemical Markup LanguageChemical Style Markup Languagechemical/x-csml.csmlWikipedia: Chemical Style Markup LanguageCIM Databaseapplication/vnd.contact.cmsg.cdbcmsgIANA: CIM DatabaseClaymore Data Filesapplication/vnd.claymore.claIANA: ClaymoreClonk Gameapplication/vnd.clonk.c4group.c4gIANA: ClonkClose Captioning - Subtitleimage/vnd.dvb.subtitle.subWikipedia: Closed CaptioningCloud Data Management Interface (CDMI) - Capabilityapplication/cdmi-capability.cdmiaRFC 6208Cloud Data Management Interface (CDMI) - Contaimerapplication/cdmi-container.cdmicRFC 6209Cloud Data Management Interface (CDMI) - Domainapplication/cdmi-domain.cdmidRFC 6210Cloud Data Management Interface (CDMI) - Objectapplication/cdmi-object.cdmioRFC 6211Cloud Data Management Interface (CDMI) - Queueapplication/cdmi-queue.cdmiqRFC 6212ClueTrust CartoMobile - Configapplication/vnd.cluetrust.cartomobile-config.c11amcIANA: CartoMobileClueTrust CartoMobile - Config Packageapplication/vnd.cluetrust.cartomobile-config-pkg.c11amzIANA: CartoMobileCMU Imageimage/x-cmu-raster.ras COLLADAmodel/vnd.collada+xml.daeIANA: COLLADAComma-Seperated Valuestext/csv.csvWikipedia: CSVCompact Proapplication/mac-compactpro.cptCompact ProCompiled Wireless Markup Language (WMLC)application/vnd.wap.wmlc.wmlcIANA: WMLCComputer Graphics Metafileimage/cgm.cgmWikipedia: Computer Graphics MetafileCoolTalkx-conference/x-cooltalk.iceWikipedia: CoolTalkCorel Metafile Exchange (CMX)image/x-cmx.cmxWikipedia: CorelDRAWCorelXARAapplication/vnd.xara.xarIANA: CorelXARACosmoCallerapplication/vnd.cosmocaller.cmcIANA: CosmoCallerCPIO Archiveapplication/x-cpio.cpioWikipedia: cpioCrickSoftware - Clickerapplication/vnd.crick.clicker.clkxIANA: ClickerCrickSoftware - Clicker - Keyboardapplication/vnd.crick.clicker.keyboard.clkkIANA: ClickerCrickSoftware - Clicker - Paletteapplication/vnd.crick.clicker.palette.clkpIANA: ClickerCrickSoftware - Clicker - Templateapplication/vnd.crick.clicker.template.clktIANA: ClickerCrickSoftware - Clicker - Wordbankapplication/vnd.crick.clicker.wordbank.clkwIANA: ClickerCritical Tools - PERT Chart EXPERTapplication/vnd.criticaltools.wbs+xml.wbsIANA: Critical ToolsCryptoNoteapplication/vnd.rig.cryptonote.cryptonoteIANA: CryptoNoteCrystallographic Interchange Formatchemical/x-cif.cifCrystallographic Interchange FormatCrystalMaker Data Formatchemical/x-cmdf.cmdfCrystalMaker Data FormatCU-SeeMeapplication/cu-seeme.cuWhite PineCU-Writerapplication/prs.cww.cww Curl - Applettext/vnd.curl.curlCurl AppletCurl - Detached Applettext/vnd.curl.dcurl.dcurlCurl Detached AppletCurl - Manifest Filetext/vnd.curl.mcurl.mcurlCurl Manifest FileCurl - Source Codetext/vnd.curl.scurl.scurlCurl Source CodeCURL Appletapplication/vnd.curl.car.carIANA: CURL AppletCURL Appletapplication/vnd.curl.pcurl.pcurlIANA: CURL AppletCustomMenuapplication/vnd.yellowriver-custom-menu.cmpIANA: CustomMenuData Structure for the Security Suitability of Cryptographic Algorithmsapplication/dssc+der.dsscRFC 5698Data Structure for the Security Suitability of Cryptographic Algorithmsapplication/dssc+xml.xdsscRFC 5698Debian Packageapplication/x-debian-package.debWikipedia: Debian PackageDECE Audioaudio/vnd.dece.audio.uvaIANA: Dece AudioDECE Graphicimage/vnd.dece.graphic.uviIANA: DECE GraphicDECE High Definition Videovideo/vnd.dece.hd.uvhIANA: DECE HD VideoDECE Mobile Videovideo/vnd.dece.mobile.uvmIANA: DECE Mobile VideoDECE MP4video/vnd.uvvu.mp4.uvuIANA: DECE MP4DECE PD Videovideo/vnd.dece.pd.uvpIANA: DECE PD VideoDECE SD Videovideo/vnd.dece.sd.uvsIANA: DECE SD VideoDECE Videovideo/vnd.dece.video.uvvIANA: DECE VideoDevice Independent File Format (DVI)application/x-dvi.dviWikipedia: DVIDigital Siesmograph Networks - SEED Datafilesapplication/vnd.fdsn.seed.seedIANA: SEEDDigital Talking Bookapplication/x-dtbook+xml.dtbWikipedia: EPUBDigital Talking Book - Resource Fileapplication/x-dtbresource+xml.resDigital Talking BookDigital Video Broadcastingapplication/vnd.dvb.ait.aitIANA: Digital Video BroadcastingDigital Video Broadcastingapplication/vnd.dvb.service.svcIANA: Digital Video BroadcastingDigital Winds Musicaudio/vnd.digital-winds.eolIANA: Digital WindsDjVuimage/vnd.djvu.djvuWikipedia: DjVuDocument Type Definitionapplication/xml-dtd.dtdW3C DTDDolby Meridian Lossless Packingapplication/vnd.dolby.mlp.mlpIANA: Dolby Meridian Lossless PackingDoom Video Gameapplication/x-doom.wadWikipedia: Doom WADDPGraphapplication/vnd.dpgraph.dpgIANA: DPGraphDRA Audioaudio/vnd.dra.draIANA: DRADreamFactoryapplication/vnd.dreamfactory.dfacIANA: DreamFactoryDTS Audioaudio/vnd.dts.dtsIANA: DTSDTS High Definition Audioaudio/vnd.dts.hd.dtshdIANA: DTS HDDWG Drawingimage/vnd.dwg.dwgWikipedia: DWGDynaGeoapplication/vnd.dynageo.geoIANA: DynaGeoECMAScriptapplication/ecmascript.esECMA-357EcoWin Chartapplication/vnd.ecowin.chart.magIANA: EcoWin ChartEDMICS 2000image/vnd.fujixerox.edmics-mmr.mmrIANA: EDMICS 2000EDMICS 2000image/vnd.fujixerox.edmics-rlc.rlcIANA: EDMICS 2000Efficient XML Interchangeapplication/exi.exiEfficient XML Interchange (EXI) Best PracticesEFI Proteusapplication/vnd.proteus.magazine.mgzIANA: EFI ProteusElectronic Publicationapplication/epub+zip.epubWikipedia: EPUBEmail Messagemessage/rfc822.emlRFC 2822Enliven Viewerapplication/vnd.enliven.nmlIANA: Enliven ViewerExpress by Infoseekapplication/vnd.is-xpr.xprIANA: Express by InfoseekeXtended Image File Format (XIFF)image/vnd.xiff.xifIANA: XIFFExtensible Forms Description Languageapplication/vnd.xfdl.xfdlIANA: Extensible Forms Description LanguageExtensible MultiModal Annotationapplication/emma+xml.emmaEMMA: Extensible MultiModal Annotation markup languageEZPix Secure Photo Albumapplication/vnd.ezpix-album.ez2IANA: EZPix Secure Photo AlbumEZPix Secure Photo Albumapplication/vnd.ezpix-package.ez3IANA: EZPix Secure Photo AlbumFAST Search &amp; Transfer ASAimage/vnd.fst.fstIANA: FAST Search &amp; Transfer ASAFAST Search &amp; Transfer ASAvideo/vnd.fvt.fvtIANA: FVTFastBid Sheetimage/vnd.fastbidsheet.fbsIANA: FastBid SheetFCS Express Layout Linkapplication/vnd.denovo.fcselayout-link.fe_launchIANA: FCS Express Layout LinkFlash Videovideo/x-f4v.f4vWikipedia: Flash VideoFlash Videovideo/x-flv.flvWikipedia: Flash VideoFlashPiximage/vnd.fpx.fpxIANA: FPXFlashPiximage/vnd.net-fpx.npxIANA: FPXFLEXSTORtext/vnd.fmi.flexstor.flxIANA: FLEXSTORFLI/FLC Animation Formatvideo/x-fli.fliFLI/FLC Animation FormatFluxTime Clipapplication/vnd.fluxtime.clip.ftcIANA: FluxTime ClipForms Data Formatapplication/vnd.fdf.fdfIANA: Forms Data FormatFortran Source Filetext/x-fortran.fWikipedia: FortranFrameMaker Interchange Formatapplication/vnd.mif.mifIANA: FrameMaker Interchange FormatFrameMaker Normal Formatapplication/vnd.framemaker.fmIANA: FrameMakerFreeHand MXimage/x-freehand.fhWikipedia: Macromedia FreehandFriendly Software Corporationapplication/vnd.fsc.weblaunch.fscIANA: Friendly Software CorporationFrogans Playerapplication/vnd.frogans.fnc.fncIANA: Frogans PlayerFrogans Playerapplication/vnd.frogans.ltf.ltfIANA: Frogans PlayerFujitsu - Xerox 2D CAD Dataapplication/vnd.fujixerox.ddd.dddIANA: Fujitsu DDDFujitsu - Xerox DocuWorksapplication/vnd.fujixerox.docuworks.xdwIANA: DocuworksFujitsu - Xerox DocuWorks Binderapplication/vnd.fujixerox.docuworks.binder.xbdIANA: Docuworks BinderFujitsu Oasysapplication/vnd.fujitsu.oasys.oasIANA: Fujitsu OasysFujitsu Oasysapplication/vnd.fujitsu.oasys2.oa2IANA: Fujitsu OasysFujitsu Oasysapplication/vnd.fujitsu.oasys3.oa3IANA: Fujitsu OasysFujitsu Oasysapplication/vnd.fujitsu.oasysgp.fg5IANA: Fujitsu OasysFujitsu Oasysapplication/vnd.fujitsu.oasysprs.bh2IANA: Fujitsu OasysFutureSplash Animatorapplication/x-futuresplash.splWikipedia: FutureSplash AnimatorFuzzySheetapplication/vnd.fuzzysheet.fzsIANA: FuzySheetG3 Fax Imageimage/g3fax.g3Wikipedia: G3 Fax ImageGameMaker ActiveXapplication/vnd.gmx.gmxIANA: GameMaker ActiveXGen-Trix Studiomodel/vnd.gtw.gtwIANA: GTWGenomatix Tuxedo Frameworkapplication/vnd.genomatix.tuxedo.txdIANA: Genomatix Tuxedo FrameworkGeoGebraapplication/vnd.geogebra.file.ggbIANA: GeoGebraGeoGebraapplication/vnd.geogebra.tool.ggtIANA: GeoGebraGeometric Description Language (GDL)model/vnd.gdl.gdlIANA: GDLGeoMetry Explorerapplication/vnd.geometry-explorer.gexIANA: GeoMetry ExplorerGEONExT and JSXGraphapplication/vnd.geonext.gxtIANA: GEONExT and JSXGraphGeoplanWapplication/vnd.geoplan.g2wIANA: GeoplanWGeospacWapplication/vnd.geospace.g3wIANA: GeospacWGhostscript Fontapplication/x-font-ghostscript.gsfWikipedia: GhostscriptGlyph Bitmap Distribution Formatapplication/x-font-bdf.bdfWikipedia: Glyph Bitmap Distribution FormatGNU Tar Filesapplication/x-gtar.gtarGNU TarGNU Texinfo Documentapplication/x-texinfo.texinfoWikipedia: TexinfoGnumericapplication/x-gnumeric.gnumericWikipedia: GnumericGoogle Earth - KMLapplication/vnd.google-earth.kml+xml.kmlIANA: Google EarthGoogle Earth - Zipped KMLapplication/vnd.google-earth.kmz.kmzIANA: Google EarthGrafEqapplication/vnd.grafeq.gqfIANA: GrafEqGraphics Interchange Formatimage/gif.gifWikipedia: Graphics Interchange FormatGraphviztext/vnd.graphviz.gvIANA: GraphvizGroove - Accountapplication/vnd.groove-account.gacIANA: GrooveGroove - Helpapplication/vnd.groove-help.ghfIANA: GrooveGroove - Identity Messageapplication/vnd.groove-identity-message.gimIANA: GrooveGroove - Injectorapplication/vnd.groove-injector.grvIANA: GrooveGroove - Tool Messageapplication/vnd.groove-tool-message.gtmIANA: GrooveGroove - Tool Templateapplication/vnd.groove-tool-template.tplIANA: GrooveGroove - Vcardapplication/vnd.groove-vcard.vcgIANA: GrooveH.261video/h261.h261Wikipedia: H.261H.263video/h263.h263Wikipedia: H.263H.264video/h264.h264Wikipedia: H.264Hewlett Packard Instant Deliveryapplication/vnd.hp-hpid.hpidIANA: Hewlett Packard Instant DeliveryHewlett-Packard’s WebPrintSmartapplication/vnd.hp-hps.hpsIANA: Hewlett-Packard’s WebPrintSmartHierarchical Data Formatapplication/x-hdf.hdfWikipedia: Hierarchical Data FormatHit’n’Mixaudio/vnd.rip.ripIANA: Hit’n’MixHomebanking Computer Interface (HBCI)application/vnd.hbci.hbciIANA: HBCIHP Indigo Digital Press - Job Layout Languateapplication/vnd.hp-jlyt.jltIANA: HP Job Layout LanguageHP Printer Command Languageapplication/vnd.hp-pcl.pclIANA: HP Printer Command LanguageHP-GL/2 and HP RTLapplication/vnd.hp-hpgl.hpglIANA: HP-GL/2 and HP RTLHV Scriptapplication/vnd.yamaha.hv-script.hvsIANA: HV ScriptHV Voice Dictionaryapplication/vnd.yamaha.hv-dic.hvdIANA: HV Voice DictionaryHV Voice Parameterapplication/vnd.yamaha.hv-voice.hvpIANA: HV Voice ParameterHydrostatix Master Suiteapplication/vnd.hydrostatix.sof-data.sfd-hdstxIANA: Hydrostatix Master SuiteHyperstudioapplication/hyperstudio.stkIANA - HyperstudioHypertext Application Languageapplication/vnd.hal+xml.halIANA: HALHyperText Markup Language (HTML)text/html.htmlWikipedia: HTMLIBM DB2 Rights Managerapplication/vnd.ibm.rights-management.irmIANA: IBM DB2 Rights ManagerIBM Electronic Media Management System - Secure Containerapplication/vnd.ibm.secure-container.scIANA: EMMSiCalendartext/calendar.icsWikipedia: iCalendarICC profileapplication/vnd.iccprofile.iccIANA: ICC profileIcon Imageimage/x-icon.icoWikipedia: ICO File FormatigLoaderapplication/vnd.igloader.iglIANA: igLoaderImage Exchange Formatimage/ief.iefRFC 1314ImmerVision PURE Playersapplication/vnd.immervision-ivp.ivpIANA: ImmerVision PURE PlayersImmerVision PURE Playersapplication/vnd.immervision-ivu.ivuIANA: ImmerVision PURE PlayersIMS Networksapplication/reginfo+xml.rif In3D - 3DMLtext/vnd.in3d.3dml.3dmlIANA: In3DIn3D - 3DMLtext/vnd.in3d.spot.spotIANA: In3DInitial Graphics Exchange Specification (IGES)model/iges.igsWikipedia: IGESInteractive Geometry Softwareapplication/vnd.intergeo.i2gIANA: Interactive Geometry SoftwareInteractive Geometry Software Cinderellaapplication/vnd.cinderella.cdyIANA: CinderellaIntercon FormNetapplication/vnd.intercon.formnet.xpwIANA: Intercon FormNetInternational Society for Advancement of Cytometryapplication/vnd.isac.fcs.fcsIANA: International Society for Advancement of CytometryInternet Protocol Flow Information Exportapplication/ipfix.ipfixRFC 3917Internet Public Key Infrastructure - Certificateapplication/pkix-cert.cerRFC 2585Internet Public Key Infrastructure - Certificate Management Protocoleapplication/pkixcmp.pkiRFC 2585Internet Public Key Infrastructure - Certificate Revocation Listsapplication/pkix-crl.crlRFC 2585Internet Public Key Infrastructure - Certification Pathapplication/pkix-pkipath.pkipathRFC 2585IOCOM Visimeetapplication/vnd.insors.igm.igmIANA: IOCOM VisimeetIP Unplugged Roaming Clientapplication/vnd.ipunplugged.rcprofile.rcprofileIANA: IP Unplugged Roaming ClientiRepository / Lucidoc Editorapplication/vnd.irepository.package+xml.irpIANA: iRepository / Lucidoc EditorJ2ME App Descriptortext/vnd.sun.j2me.app-descriptor.jadIANA: J2ME App DescriptorJava Archiveapplication/java-archive.jarWikipedia: JAR file formatJava Bytecode Fileapplication/java-vm.classWikipedia: Java BytecodeJava Network Launching Protocolapplication/x-java-jnlp-file.jnlpWikipedia: Java Web StartJava Serialized Objectapplication/java-serialized-object.serJava Serialization APIJava Source Filetext/x-java-source,java.javaWikipedia: JavaJavaScriptapplication/javascript.jsJavaScriptJavaScript Object Notation (JSON)application/json.jsonWikipedia: JSONJoda Archiveapplication/vnd.joost.joda-archive.jodaIANA: Joda ArchiveJPEG 2000 Compound Image File Formatvideo/jpm.jpmIANA: JPMJPEG Imageimage/jpeg.jpeg, .jpgRFC 1314JPGVideovideo/jpeg.jpgvRFC 3555Kahootzapplication/vnd.kahootz.ktzIANA: KahootzKaraoke on Chipnuts Chipsetsapplication/vnd.chipnuts.karaoke-mmd.mmdIANA: Chipnuts KaraokeKDE KOffice Office Suite - Karbonapplication/vnd.kde.karbon.karbonIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - KChartapplication/vnd.kde.kchart.chrtIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - Kformulaapplication/vnd.kde.kformula.kfoIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - Kivioapplication/vnd.kde.kivio.flwIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - Kontourapplication/vnd.kde.kontour.konIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - Kpresenterapplication/vnd.kde.kpresenter.kprIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - Kspreadapplication/vnd.kde.kspread.kspIANA: KDE KOffice Office SuiteKDE KOffice Office Suite - Kwordapplication/vnd.kde.kword.kwdIANA: KDE KOffice Office SuiteKenamea Appapplication/vnd.kenameaapp.htkeIANA: Kenamea AppKidspirationapplication/vnd.kidspiration.kiaIANA: KidspirationKinar Applicationsapplication/vnd.kinar.kneIANA: Kina ApplicationsKodak Storyshareapplication/vnd.kodak-descriptor.sseIANA: Kodak StoryshareLaser App Enterpriseapplication/vnd.las.las+xml.lasxmlIANA: Laser App EnterpriseLaTeXapplication/x-latex.latexWikipedia: LaTeXLife Balance - Desktop Editionapplication/vnd.llamagraphics.life-balance.desktop.lbdIANA: Life BalanceLife Balance - Exchange Formatapplication/vnd.llamagraphics.life-balance.exchange+xml.lbeIANA: Life BalanceLightspeed Audio Labapplication/vnd.jam.jamIANA: Lightspeed Audio LabLotus 1-2-3application/vnd.lotus-1-2-3.123IANA: Lotus 1-2-3Lotus Approachapplication/vnd.lotus-approach.aprIANA: Lotus ApproachLotus Freelanceapplication/vnd.lotus-freelance.preIANA: Lotus FreelanceLotus Notesapplication/vnd.lotus-notes.nsfIANA: Lotus NotesLotus Organizerapplication/vnd.lotus-organizer.orgIANA: Lotus OrganizerLotus Screencamapplication/vnd.lotus-screencam.scmIANA: Lotus ScreencamLotus Wordproapplication/vnd.lotus-wordpro.lwpIANA: Lotus WordproLucent Voiceaudio/vnd.lucent.voice.lvpIANA: Lucent VoiceM3U (Multimedia Playlist)audio/x-mpegurl.m3uWikipedia: M3UM4vvideo/x-m4v.m4vWikipedia: M4vMacintosh BinHex 4.0application/mac-binhex40.hqxMacMIMEMacPorts Port Systemapplication/vnd.macports.portpkg.portpkgIANA: MacPorts Port SystemMapGuide DBXMLapplication/vnd.osgeo.mapguide.package.mgpIANA: MapGuide DBXMLMARC Formatsapplication/marc.mrcRFC 2220MARC21 XML Schemaapplication/marcxml+xml.mrcxRFC 6207Material Exchange Formatapplication/mxf.mxfRFC 4539Mathematica Notebook Playerapplication/vnd.wolfram.player.nbpIANA: Mathematica Notebook PlayerMathematica Notebooksapplication/mathematica.maIANA - MathematicaMathematical Markup Languageapplication/mathml+xml.mathmlW3C Math HomeMbox database filesapplication/mbox.mboxRFC 4155MedCalcapplication/vnd.medcalcdata.mc1IANA: MedCalcMedia Server Control Markup Languageapplication/mediaservercontrol+xml.mscmlRFC 5022MediaRemoteapplication/vnd.mediastation.cdkey.cdkeyIANA: MediaRemoteMedical Waveform Encoding Formatapplication/vnd.mfer.mwfIANA: Medical Waveform Encoding FormatMelody Format for Mobile Platformapplication/vnd.mfmp.mfmIANA: Melody Format for Mobile PlatformMesh Data Typemodel/mesh.mshRFC 2077Metadata Authority Description Schemaapplication/mads+xml.madsRFC 6207Metadata Encoding and Transmission Standardapplication/mets+xml.metsRFC 6207Metadata Object Description Schemaapplication/mods+xml.modsRFC 6207Metalinkapplication/metalink4+xml.meta4Wikipedia: MetalinkMicosoft PowerPoint - Macro-Enabled Template Fileapplication/vnd.ms-powerpoint.template.macroenabled.12.potmIANA: MS PowerPointMicosoft Word - Macro-Enabled Documentapplication/vnd.ms-word.document.macroenabled.12.docmIANA: MS WordMicosoft Word - Macro-Enabled Templateapplication/vnd.ms-word.template.macroenabled.12.dotmIANA: MS WordMicro CADAM Helix D&amp;Dapplication/vnd.mcd.mcdIANA: Micro CADAM Helix D&amp;DMicrografxapplication/vnd.micrografx.flo.floIANA: MicrografxMicrografx iGrafx Professionalapplication/vnd.micrografx.igx.igxIANA: MicrografxMICROSEC e-Szign¢application/vnd.eszigno3+xml.es3IANA: MICROSEC e-Szign¢Microsoft Accessapplication/x-msaccess.mdbWikipedia: Microsoft AccessMicrosoft Advanced Systems Format (ASF)video/x-ms-asf.asfWikipedia: Advanced Systems Format (ASF)Microsoft Applicationapplication/x-msdownload.exeWikipedia: EXEMicrosoft Artgalryapplication/vnd.ms-artgalry.cilIANA: MS ArtgalryMicrosoft Cabinet Fileapplication/vnd.ms-cab-compressed.cabIANA: MS Cabinet FileMicrosoft Class Serverapplication/vnd.ms-ims.imsIANA: MS Class ServerMicrosoft ClickOnceapplication/x-ms-application.applicationWikipedia: ClickOnceMicrosoft Clipboard Clipapplication/x-msclip.clpWikipedia: ClipboardMicrosoft Document Imaging Formatimage/vnd.ms-modi.mdiWikipedia: Microsoft Document Image FormatMicrosoft Embedded OpenTypeapplication/vnd.ms-fontobject.eotIANA: MS Embedded OpenTypeMicrosoft Excelapplication/vnd.ms-excel.xlsIANA: MS ExcelMicrosoft Excel - Add-In Fileapplication/vnd.ms-excel.addin.macroenabled.12.xlamIANA: MS ExcelMicrosoft Excel - Binary Workbookapplication/vnd.ms-excel.sheet.binary.macroenabled.12.xlsbIANA: MS ExcelMicrosoft Excel - Macro-Enabled Template Fileapplication/vnd.ms-excel.template.macroenabled.12.xltmIANA: MS ExcelMicrosoft Excel - Macro-Enabled Workbookapplication/vnd.ms-excel.sheet.macroenabled.12.xlsmIANA: MS ExcelMicrosoft Html Help Fileapplication/vnd.ms-htmlhelp.chmIANA:MS Html Help FileMicrosoft Information Cardapplication/x-mscardfile.crdWikipedia: Information CardMicrosoft Learning Resource Moduleapplication/vnd.ms-lrm.lrmIANA: MS Learning Resource ModuleMicrosoft MediaViewapplication/x-msmediaview.mvbWindows HelpMicrosoft Moneyapplication/x-msmoney.mnyWikipedia: Microsoft MoneyMicrosoft Office - OOXML - Presentationapplication/vnd.openxmlformats-officedocument.presentationml.presentation.pptxIANA: OOXML - PresentationMicrosoft Office - OOXML - Presentation (Slide)application/vnd.openxmlformats-officedocument.presentationml.slide.sldxIANA: OOXML - PresentationMicrosoft Office - OOXML - Presentation (Slideshow)application/vnd.openxmlformats-officedocument.presentationml.slideshow.ppsxIANA: OOXML - PresentationMicrosoft Office - OOXML - Presentation Templateapplication/vnd.openxmlformats-officedocument.presentationml.template.potxIANA: OOXML - Presentation TemplateMicrosoft Office - OOXML - Spreadsheetapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet.xlsxIANA: OOXML - SpreadsheetMicrosoft Office - OOXML - Spreadsheet Teplateapplication/vnd.openxmlformats-officedocument.spreadsheetml.template.xltxIANA: OOXML - Spreadsheet TemplateMicrosoft Office - OOXML - Word Documentapplication/vnd.openxmlformats-officedocument.wordprocessingml.document.docxIANA: OOXML - Word DocumentMicrosoft Office - OOXML - Word Document Templateapplication/vnd.openxmlformats-officedocument.wordprocessingml.template.dotxIANA: OOXML - Word Document TemplateMicrosoft Office Binderapplication/x-msbinder.obdWikipedia: Microsoft Shared ToolsMicrosoft Office System Release Themeapplication/vnd.ms-officetheme.thmxIANA: MS Office System Release ThemeMicrosoft OneNoteapplication/onenote.onetocMS OneNote 2010Microsoft PlayReady Ecosystemaudio/vnd.ms-playready.media.pya.pyaIANA: Microsoft PlayReady EcosystemMicrosoft PlayReady Ecosystem Videovideo/vnd.ms-playready.media.pyv.pyvIANA: Microsoft PlayReady EcosystemMicrosoft PowerPointapplication/vnd.ms-powerpoint.pptIANA: MS PowerPointMicrosoft PowerPoint - Add-in fileapplication/vnd.ms-powerpoint.addin.macroenabled.12.ppamIANA: MS PowerPointMicrosoft PowerPoint - Macro-Enabled Open XML Slideapplication/vnd.ms-powerpoint.slide.macroenabled.12.sldmIANA: MS PowerPointMicrosoft PowerPoint - Macro-Enabled Presentation Fileapplication/vnd.ms-powerpoint.presentation.macroenabled.12.pptmIANA: MS PowerPointMicrosoft PowerPoint - Macro-Enabled Slide Show Fileapplication/vnd.ms-powerpoint.slideshow.macroenabled.12.ppsmIANA: MS PowerPointMicrosoft Projectapplication/vnd.ms-project.mppIANA: MS PowerPointMicrosoft Publisherapplication/x-mspublisher.pubWikipedia: Microsoft PublisherMicrosoft Schedule+application/x-msschedule.scdWikipedia: Microsoft Schedule PlusMicrosoft Silverlightapplication/x-silverlight-app.xapWikipedia: SilverlightMicrosoft Trust UI Provider - Certificate Trust Linkapplication/vnd.ms-pki.stl.stlIANA: MS Trust UI ProviderMicrosoft Trust UI Provider - Security Catalogapplication/vnd.ms-pki.seccat.catIANA: MS Trust UI ProviderMicrosoft Visioapplication/vnd.visio.vsdIANA: VisioMicrosoft Windows Mediavideo/x-ms-wm.wmWikipedia: Advanced Systems Format (ASF)Microsoft Windows Media Audioaudio/x-ms-wma.wmaWikipedia: Windows Media AudioMicrosoft Windows Media Audio Redirectoraudio/x-ms-wax.waxWindows Media MetafilesMicrosoft Windows Media Audio/Video Playlistvideo/x-ms-wmx.wmxWikipedia: Advanced Systems Format (ASF)Microsoft Windows Media Player Download Packageapplication/x-ms-wmd.wmdWikipedia: Windows Media PlayerMicrosoft Windows Media Player Playlistapplication/vnd.ms-wpl.wplIANA: MS Windows Media Player PlaylistMicrosoft Windows Media Player Skin Packageapplication/x-ms-wmz.wmzWikipedia: Windows Media PlayerMicrosoft Windows Media Videovideo/x-ms-wmv.wmvWikipedia: Advanced Systems Format (ASF)Microsoft Windows Media Video Playlistvideo/x-ms-wvx.wvxWikipedia: Advanced Systems Format (ASF)Microsoft Windows Metafileapplication/x-msmetafile.wmfWikipedia: Windows MetafileMicrosoft Windows Terminal Servicesapplication/x-msterminal.trmWikipedia: Terminal ServerMicrosoft Wordapplication/msword.docWikipedia: Microsoft WordMicrosoft Wordpadapplication/x-mswrite.wriWikipedia: WordpadMicrosoft Worksapplication/vnd.ms-works.wpsIANA: MS WorksMicrosoft XAML Browser Applicationapplication/x-ms-xbap.xbapWikipedia: XAML BrowserMicrosoft XML Paper Specificationapplication/vnd.ms-xpsdocument.xpsIANA: MS XML Paper SpecificationMIDI - Musical Instrument Digital Interfaceaudio/midi.midWikipedia: MIDIMiniPayapplication/vnd.ibm.minipay.mpyIANA: MiniPayMO:DCA-Papplication/vnd.ibm.modcap.afpIANA: MO:DCA-PMobile Information Device Profileapplication/vnd.jcp.javame.midlet-rms.rmsIANA: Mobile Information Device ProfileMobileTVapplication/vnd.tmobile-livetv.tmoIANA: MobileTVMobipocketapplication/x-mobipocket-ebook.prcWikipedia: MobipocketMobius Management Systems - Basket fileapplication/vnd.mobius.mbk.mbkIANA: Mobius Management SystemsMobius Management Systems - Distribution Databaseapplication/vnd.mobius.dis.disIANA: Mobius Management SystemsMobius Management Systems - Policy Definition Language Fileapplication/vnd.mobius.plc.plcIANA: Mobius Management SystemsMobius Management Systems - Query Fileapplication/vnd.mobius.mqy.mqyIANA: Mobius Management SystemsMobius Management Systems - Script Languageapplication/vnd.mobius.msl.mslIANA: Mobius Management SystemsMobius Management Systems - Topic Index Fileapplication/vnd.mobius.txf.txfIANA: Mobius Management SystemsMobius Management Systems - UniversalArchiveapplication/vnd.mobius.daf.dafIANA: Mobius Management Systemsmod_fly / fly.cgitext/vnd.fly.flyIANA: FlyMophun Certificateapplication/vnd.mophun.certificate.mpcIANA: Mophun CertificateMophun VMapplication/vnd.mophun.application.mpnIANA: Mophun VMMotion JPEG 2000video/mj2.mj2IANA: MJ2MPEG Audioaudio/mpeg.mpgaWikipedia: MPGAMPEG Urlvideo/vnd.mpegurl.mxuIANA: MPEG UrlMPEG Videovideo/mpeg.mpegWikipedia: MPEGMPEG-21application/mp21.m21Wikipedia: MPEG-21MPEG-4 Audioaudio/mp4.mp4aWikipedia: MP4AMPEG-4 Videovideo/mp4.mp4Wikipedia: MP4MPEG4application/mp4.mp4RFC 4337Multimedia Playlist Unicodeapplication/vnd.apple.mpegurl.m3u8Wikipedia: M3UMUsical Score Interpreted Code Invented for the ASCII designation of Notationapplication/vnd.musician.musIANA: MUSICIANMuvee Automatic Video Editingapplication/vnd.muvee.style.mstyIANA: MuveeMXMLapplication/xv+xml.mxmlWikipedia: MXMLN-Gage Game Dataapplication/vnd.nokia.n-gage.data.ngdatIANA: N-Gage Game DataN-Gage Game Installerapplication/vnd.nokia.n-gage.symbian.install.n-gageIANA: N-Gage Game InstallerNavigation Control file for XML (for ePub)application/x-dtbncx+xml.ncxWikipedia: EPUBNetwork Common Data Form (NetCDF)application/x-netcdf.ncWikipedia: NetCDFneuroLanguageapplication/vnd.neurolanguage.nlu.nluIANA: neuroLanguageNew Moon Liftoff/DNAapplication/vnd.dna.dnaIANA: New Moon Liftoff/DNANobleNet Directoryapplication/vnd.noblenet-directory.nndIANA: NobleNet DirectoryNobleNet Sealerapplication/vnd.noblenet-sealer.nnsIANA: NobleNet SealerNobleNet Webapplication/vnd.noblenet-web.nnwIANA: NobleNet WebNokia Radio Application - Presetapplication/vnd.nokia.radio-preset.rpstIANA: Nokia Radio ApplicationNokia Radio Application - Presetapplication/vnd.nokia.radio-presets.rpssIANA: Nokia Radio ApplicationNotation3text/n3.n3Wikipedia: Notation3Novadigm’s RADIA and EDM productsapplication/vnd.novadigm.edm.edmIANA: Novadigm’s RADIA and EDM productsNovadigm’s RADIA and EDM productsapplication/vnd.novadigm.edx.edxIANA: Novadigm’s RADIA and EDM productsNovadigm’s RADIA and EDM productsapplication/vnd.novadigm.ext.extIANA: Novadigm’s RADIA and EDM productsNpGraphItapplication/vnd.flographit.gphIANA: FloGraphItNuera ECELP 4800audio/vnd.nuera.ecelp4800.ecelp4800IANA: ECELP 4800Nuera ECELP 7470audio/vnd.nuera.ecelp7470.ecelp7470IANA: ECELP 7470Nuera ECELP 9600audio/vnd.nuera.ecelp9600.ecelp9600IANA: ECELP 9600Office Document Architectureapplication/oda.odaRFC 2161Oggapplication/ogg.ogxWikipedia: OggOgg Audioaudio/ogg.ogaWikipedia: OggOgg Videovideo/ogg.ogvWikipedia: OggOMA Download Agentsapplication/vnd.oma.dd2+xml.dd2IANA: OMA Download AgentsOpen Document Text Webapplication/vnd.oasis.opendocument.text-web.othIANA: OpenDocument Text WebOpen eBook Publication Structureapplication/oebps-package+xml.opfWikipedia: Open eBookOpen Financial Exchangeapplication/vnd.intu.qbo.qboIANA: Open Financial ExchangeOpen Office Extensionapplication/vnd.openofficeorg.extension.oxtIANA: Open Office ExtensionOpen Score Formatapplication/vnd.yamaha.openscoreformat.osfIANA: Open Score FormatOpen Web Media Project - Audioaudio/webm.webaWebM ProjectOpen Web Media Project - Videovideo/webm.webmWebM ProjectOpenDocument Chartapplication/vnd.oasis.opendocument.chart.odcIANA: OpenDocument ChartOpenDocument Chart Templateapplication/vnd.oasis.opendocument.chart-template.otcIANA: OpenDocument Chart TemplateOpenDocument Databaseapplication/vnd.oasis.opendocument.database.odbIANA: OpenDocument DatabaseOpenDocument Formulaapplication/vnd.oasis.opendocument.formula.odfIANA: OpenDocument FormulaOpenDocument Formula Templateapplication/vnd.oasis.opendocument.formula-template.odftIANA: OpenDocument Formula TemplateOpenDocument Graphicsapplication/vnd.oasis.opendocument.graphics.odgIANA: OpenDocument GraphicsOpenDocument Graphics Templateapplication/vnd.oasis.opendocument.graphics-template.otgIANA: OpenDocument Graphics TemplateOpenDocument Imageapplication/vnd.oasis.opendocument.image.odiIANA: OpenDocument ImageOpenDocument Image Templateapplication/vnd.oasis.opendocument.image-template.otiIANA: OpenDocument Image TemplateOpenDocument Presentationapplication/vnd.oasis.opendocument.presentation.odpIANA: OpenDocument PresentationOpenDocument Presentation Templateapplication/vnd.oasis.opendocument.presentation-template.otpIANA: OpenDocument Presentation TemplateOpenDocument Spreadsheetapplication/vnd.oasis.opendocument.spreadsheet.odsIANA: OpenDocument SpreadsheetOpenDocument Spreadsheet Templateapplication/vnd.oasis.opendocument.spreadsheet-template.otsIANA: OpenDocument Spreadsheet TemplateOpenDocument Textapplication/vnd.oasis.opendocument.text.odtIANA: OpenDocument TextOpenDocument Text Masterapplication/vnd.oasis.opendocument.text-master.odmIANA: OpenDocument Text MasterOpenDocument Text Templateapplication/vnd.oasis.opendocument.text-template.ottIANA: OpenDocument Text TemplateOpenGL Textures (KTX)image/ktx.ktxKTX File FormatOpenOffice - Calc (Spreadsheet)application/vnd.sun.xml.calc.sxcWikipedia: OpenOfficeOpenOffice - Calc Template (Spreadsheet)application/vnd.sun.xml.calc.template.stcWikipedia: OpenOfficeOpenOffice - Draw (Graphics)application/vnd.sun.xml.draw.sxdWikipedia: OpenOfficeOpenOffice - Draw Template (Graphics)application/vnd.sun.xml.draw.template.stdWikipedia: OpenOfficeOpenOffice - Impress (Presentation)application/vnd.sun.xml.impress.sxiWikipedia: OpenOfficeOpenOffice - Impress Template (Presentation)application/vnd.sun.xml.impress.template.stiWikipedia: OpenOfficeOpenOffice - Math (Formula)application/vnd.sun.xml.math.sxmWikipedia: OpenOfficeOpenOffice - Writer (Text - HTML)application/vnd.sun.xml.writer.sxwWikipedia: OpenOfficeOpenOffice - Writer (Text - HTML)application/vnd.sun.xml.writer.global.sxgWikipedia: OpenOfficeOpenOffice - Writer Template (Text - HTML)application/vnd.sun.xml.writer.template.stwWikipedia: OpenOfficeOpenType Font Fileapplication/x-font-otf.otfOpenType Font FileOSFPVGapplication/vnd.yamaha.openscoreformat.osfpvg+xml.osfpvgIANA: OSFPVGOSGi Deployment Packageapplication/vnd.osgi.dp.dpIANA: OSGi Deployment PackagePalmOS Dataapplication/vnd.palm.pdbIANA: PalmOS DataPascal Source Filetext/x-pascal.pWikipedia: PascalPawaaFILEapplication/vnd.pawaafile.pawIANA: PawaaFILEPCL 6 Enhanced (Formely PCL XL)application/vnd.hp-pclxl.pclxlIANA: HP PCL XLPcsel eFIF Fileapplication/vnd.picsel.efifIANA: Picsel eFIF FilePCX Imageimage/x-pcx.pcxWikipedia: PCXPhotoshop Documentimage/vnd.adobe.photoshop.psdWikipedia: Photoshop DocumentPICSRulesapplication/pics-rules.prfW3C PICSRulesPICT Imageimage/x-pict.picWikipedia: PICTpIRChapplication/x-chat.chatWikipedia: pIRChPKCS #10 - Certification Request Standardapplication/pkcs10.p10RFC 2986PKCS #12 - Personal Information Exchange Syntax Standardapplication/x-pkcs12.p12RFC 2986PKCS #7 - Cryptographic Message Syntax Standardapplication/pkcs7-mime.p7mRFC 2315PKCS #7 - Cryptographic Message Syntax Standardapplication/pkcs7-signature.p7sRFC 2315PKCS #7 - Cryptographic Message Syntax Standard (Certificate Request Response)application/x-pkcs7-certreqresp.p7rRFC 2986PKCS #7 - Cryptographic Message Syntax Standard (Certificates)application/x-pkcs7-certificates.p7bRFC 2986PKCS #8 - Private-Key Information Syntax Standardapplication/pkcs8.p8RFC 5208PocketLearn Viewersapplication/vnd.pocketlearn.plfIANA: PocketLearn ViewersPortable Anymap Imageimage/x-portable-anymap.pnmWikipedia: Netpbm FormatPortable Bitmap Formatimage/x-portable-bitmap.pbmWikipedia: Netpbm FormatPortable Compiled Formatapplication/x-font-pcf.pcfWikipedia: Portable Compiled FormatPortable Font Resourceapplication/font-tdpfr.pfrRFC 3073Portable Game Notation (Chess Games)application/x-chess-pgn.pgnWikipedia: Portable Game NotationbPortable Graymap Formatimage/x-portable-graymap.pgmWikipedia: Netpbm FormatPortable Network Graphics (PNG)image/png.pngRFC 2083Portable Pixmap Formatimage/x-portable-pixmap.ppmWikipedia: Netpbm FormatPortable Symmetric Key Containerapplication/pskc+xml.pskcxmlRFC 6030PosMLapplication/vnd.ctc-posml.pmlIANA: PosMLPostScriptapplication/postscript.aiWikipedia: PostScriptPostScript Fontsapplication/x-font-type1.pfaWikipedia: PostScript FontsPowerBuilderapplication/vnd.powerbuilder6.pbdIANA: PowerBuilderPretty Good Privacyapplication/pgp-encrypted RFC 2015Pretty Good Privacy - Signatureapplication/pgp-signature.pgpRFC 2015Preview Systems ZipLock/VBoxapplication/vnd.previewsystems.box.boxIANA: Preview Systems ZipLock/VboxPrinceton Video Imageapplication/vnd.pvi.ptid1.ptidIANA: Princeton Video ImagePronunciation Lexicon Specificationapplication/pls+xml.plsRFC 4267Proprietary P&amp;G Standard Reporting Systemapplication/vnd.pg.format.strIANA: Proprietary P&amp;G Standard Reporting SystemProprietary P&amp;G Standard Reporting Systemapplication/vnd.pg.osasli.ei6IANA: Proprietary P&amp;G Standard Reporting SystemPRS Lines Tagtext/prs.lines.tag.dscIANA: PRS Lines TagPSF Fontsapplication/x-font-linux-psf.psfPSF FontsPubliShare Objectsapplication/vnd.publishare-delta-tree.qpsIANA: PubliShare ObjectsQualcomm’s Plaza Mobile Internetapplication/vnd.pmi.widget.wgIANA: Qualcomm’s Plaza Mobile InternetQuarkXpressapplication/vnd.quark.quarkxpress.qxdIANA: QuarkXPressQUASS Stream Playerapplication/vnd.epson.esf.esfIANA: QUASS Stream PlayerQUASS Stream Playerapplication/vnd.epson.msf.msfIANA: QUASS Stream PlayerQUASS Stream Playerapplication/vnd.epson.ssf.ssfIANA: QUASS Stream PlayerQuickAnime Playerapplication/vnd.epson.quickanime.qamIANA: QuickAnime PlayerQuickenapplication/vnd.intu.qfx.qfxIANA: QuickenQuicktime Videovideo/quicktime.qtWikipedia: QuicktimeRAR Archiveapplication/x-rar-compressed.rarWikipedia: RARReal Audio Soundaudio/x-pn-realaudio.ramWikipedia: RealPlayerReal Audio Soundaudio/x-pn-realaudio-plugin.rmpWikipedia: RealPlayerReally Simple Discoveryapplication/rsd+xml.rsdWikipedia: Really Simple DiscoveryRealMediaapplication/vnd.rn-realmedia.rm RealVNCapplication/vnd.realvnc.bed.bedIANA: RealVNCRecordare Applicationsapplication/vnd.recordare.musicxml.mxlIANA: Recordare AppsRecordare Applicationsapplication/vnd.recordare.musicxml+xml.musicxmlIANA: Recordare AppsRelax NG Compact Syntaxapplication/relax-ng-compact-syntax.rncRelax NGRemoteDocs R-Viewerapplication/vnd.data-vision.rdz.rdzIANA: Data-VisionResource Description Frameworkapplication/rdf+xml.rdfRFC 3870RetroPlatform Playerapplication/vnd.cloanto.rp9.rp9IANA: RetroPlatform PlayerRhymBoxapplication/vnd.jisp.jispIANA: RhymBoxRich Text Formatapplication/rtf.rtfWikipedia: Rich Text FormatRich Text Format (RTF)text/richtext.rtxWikipedia: Rich Text FormatROUTE 66 Location Based Servicesapplication/vnd.route66.link66+xml.link66IANA: ROUTE 66RSS - Really Simple Syndicationapplication/rss+xml.rss, .xmlWikipedia: RSSS Hexdump Formatapplication/shf+xml.shfRFC 4194SailingTrackerapplication/vnd.sailingtracker.track.stIANA: SailingTrackerScalable Vector Graphics (SVG)image/svg+xml.svgWikipedia: SVGScheduleUsapplication/vnd.sus-calendar.susIANA: ScheduleUsSearch/Retrieve via URL Response Formatapplication/sru+xml.sruRFC 6207Secure Electronic Transaction - Paymentapplication/set-payment-initiation.setpayIANA: SET PaymentSecure Electronic Transaction - Registrationapplication/set-registration-initiation.setregIANA: SET RegistrationSecured eMailapplication/vnd.sema.semaIANA: Secured eMailSecured eMailapplication/vnd.semd.semdIANA: Secured eMailSecured eMailapplication/vnd.semf.semfIANA: Secured eMailSeeMailapplication/vnd.seemail.seeIANA: SeeMailServer Normal Formatapplication/x-font-snf.snfWikipedia: Server Normal FormatServer-Based Certificate Validation Protocol - Validation Policies - Requestapplication/scvp-vp-request.spqRFC 5055Server-Based Certificate Validation Protocol - Validation Policies - Responseapplication/scvp-vp-response.sppRFC 5055Server-Based Certificate Validation Protocol - Validation Requestapplication/scvp-cv-request.scqRFC 5055Server-Based Certificate Validation Protocol - Validation Responseapplication/scvp-cv-response.scsRFC 5055Session Description Protocolapplication/sdp.sdpRFC 2327Setexttext/x-setext.etxWikipedia: SetextSGI Movievideo/x-sgi-movie.movieSGI FactsShana Informed Fillerapplication/vnd.shana.informed.formdata.ifmIANA: Shana Informed FillerShana Informed Fillerapplication/vnd.shana.informed.formtemplate.itpIANA: Shana Informed FillerShana Informed Fillerapplication/vnd.shana.informed.interchange.iifIANA: Shana Informed FillerShana Informed Fillerapplication/vnd.shana.informed.package.ipkIANA: Shana Informed FillerSharing Transaction Fraud Dataapplication/thraud+xml.tfiRFC 5941Shell Archiveapplication/x-shar.sharWikipedia: Shell ArchieSilicon Graphics RGB Bitmapimage/x-rgb.rgbRGB Image FormatSimpleAnimeLite Playerapplication/vnd.epson.salt.sltIANA: SimpleAnimeLite PlayerSimply Accountingapplication/vnd.accpac.simply.aso.asoIANA: Simply AccountingSimply Accounting - Data Importapplication/vnd.accpac.simply.imp.impIANA: Simply AccountingSimTech MindMapperapplication/vnd.simtech-mindmapper.twdIANA: SimTech MindMapperSixth Floor Media - CommonSpaceapplication/vnd.commonspace.cspIANA: CommonSpaceSMAF Audioapplication/vnd.yamaha.smaf-audio.safIANA: SMAF AudioSMAF Fileapplication/vnd.smaf.mmfIANA: SMAF FileSMAF Phraseapplication/vnd.yamaha.smaf-phrase.spfIANA: SMAF PhraseSMART Technologies Appsapplication/vnd.smart.teacher.teacherIANA: SMART Technologies AppsSourceView Documentapplication/vnd.svd.svdIANA: SourceView DocumentSPARQL - Queryapplication/sparql-query.rqW3C SPARQLSPARQL - Resultsapplication/sparql-results+xml.srxW3C SPARQLSpeech Recognition Grammar Specificationapplication/srgs.gramW3C Speech GrammarSpeech Recognition Grammar Specification - XMLapplication/srgs+xml.grxmlW3C Speech GrammarSpeech Synthesis Markup Languageapplication/ssml+xml.ssmlW3C Speech SynthesisSSEYO Koan Play Fileapplication/vnd.koan.skpIANA: SSEYO Koan Play FileStandard Generalized Markup Language (SGML)text/sgml.sgmlWikipedia: SGMLStarOffice - Calcapplication/vnd.stardivision.calc.sdc StarOffice - Drawapplication/vnd.stardivision.draw.sda StarOffice - Impressapplication/vnd.stardivision.impress.sdd StarOffice - Mathapplication/vnd.stardivision.math.smf StarOffice - Writerapplication/vnd.stardivision.writer.sdw StarOffice - Writer (Global)application/vnd.stardivision.writer-global.sgl StepManiaapplication/vnd.stepmania.stepchart.smIANA: StepManiaStuffit Archiveapplication/x-stuffit.sitWikipedia: StuffitStuffit Archiveapplication/x-stuffitx.sitxWikipedia: StuffitSudokuMagicapplication/vnd.solent.sdkm+xml.sdkmIANA: SudokuMagicSugar Linux Application Bundleapplication/vnd.olpc-sugar.xoIANA: Sugar Linux App BundleSun Audio - Au file formataudio/basic.auWikipedia: Sun audioSundaHus WQapplication/vnd.wqd.wqdIANA: SundaHus WQSymbian Install Packageapplication/vnd.symbian.install.sisIANA: Symbian InstallSynchronized Multimedia Integration Languageapplication/smil+xml.smiRFC 4536SyncMLapplication/vnd.syncml+xml.xsmIANA: SyncMLSyncML - Device Managementapplication/vnd.syncml.dm+wbxml.bdmIANA: SyncMLSyncML - Device Managementapplication/vnd.syncml.dm+xml.xdmIANA: SyncMLSystem V Release 4 CPIO Archiveapplication/x-sv4cpio.sv4cpioWikipedia: paxSystem V Release 4 CPIO Checksum Dataapplication/x-sv4crc.sv4crcWikipedia: paxSystems Biology Markup Languageapplication/sbml+xml.sbmlRFC 3823Tab Seperated Valuestext/tab-separated-values.tsvWikipedia: TSVTagged Image File Formatimage/tiff.tiffWikipedia: TIFFTao Intentapplication/vnd.tao.intent-module-archive.taoIANA: Tao IntentTar File (Tape Archive)application/x-tar.tarWikipedia: TarTcl Scriptapplication/x-tcl.tclWikipedia: TclTeXapplication/x-tex.texWikipedia: TeXTeX Font Metricapplication/x-tex-tfm.tfmWikipedia: TeX Font MetricText Encoding and Interchangeapplication/tei+xml.teiRFC 6129Text Filetext/plain.txtWikipedia: Text FileTIBCO Spotfireapplication/vnd.spotfire.dxp.dxpIANA: TIBCO SpotfireTIBCO Spotfireapplication/vnd.spotfire.sfs.sfsIANA: TIBCO SpotfireTime Stamped Data Envelopeapplication/timestamped-data.tsdRFC 5955TRI Systems Configapplication/vnd.trid.tpt.tptIANA: TRI SystemsTriscape Map Explorerapplication/vnd.triscape.mxs.mxsIANA: Triscape Map Explorertrofftext/troff.tWikipedia: troffTrue BASICapplication/vnd.trueapp.traIANA: True BASICTrueType Fontapplication/x-font-ttf.ttfWikipedia: TrueTypeTurtle (Terse RDF Triple Language)text/turtle.ttlWikipedia: TurtleUMAJINapplication/vnd.umajin.umjIANA: UMAJINUnique Object Markup Languageapplication/vnd.uoml+xml.uomlIANA: UOMLUnity 3dapplication/vnd.unity.unitywebIANA: Unity 3dUniversal Forms Description Languageapplication/vnd.ufdl.ufdIANA: Universal Forms Description LanguageURI Resolution Servicestext/uri-list.uriRFC 2483User Interface Quartz - Theme (Symbian)application/vnd.uiq.theme.utzIANA: User Interface QuartzUstar (Uniform Standard Tape Archive)application/x-ustar.ustarWikipedia: UstarUUEncodetext/x-uuencode.uuWikipedia: UUEncodevCalendartext/x-vcalendar.vcsWikipedia: vCalendarvCardtext/x-vcard.vcfWikipedia: vCardVideo CDapplication/x-cdlink.vcdWikipedia: Video CDViewport+application/vnd.vsf.vsfIANA: Viewport+Virtual Reality Modeling Languagemodel/vrml.wrlWikipedia: VRMLVirtualCatalogapplication/vnd.vcx.vcxIANA: VirtualCatalogVirtue MTSmodel/vnd.mts.mtsIANA: MTSVirtue VTUmodel/vnd.vtu.vtuIANA: VTUVisionaryapplication/vnd.visionary.visIANA: VisionaryVivovideo/vnd.vivo.vivIANA: VivoVoice Browser Call Controlapplication/ccxml+xml,.ccxmlVoice Browser Call Control: CCXML Version 1.0VoiceXMLapplication/voicexml+xml.vxmlRFC 4267WAIS Sourceapplication/x-wais-source.srcYoLinuxWAP Binary XML (WBXML)application/vnd.wap.wbxml.wbxmlIANA: WBXMLWAP Bitamp (WBMP)image/vnd.wap.wbmp.wbmpIANA: WBMPWaveform Audio File Format (WAV)audio/x-wav.wavWikipedia: WAVWeb Distributed Authoring and Versioningapplication/davmount+xml.davmountRFC 4918Web Open Font Formatapplication/x-font-woff.woffWikipedia: Web Open Font FormatWeb Services Policyapplication/wspolicy+xml.wspolicyW3C Web Services PolicyWebP Imageimage/webp.webpWikipedia: WebPWebTurboapplication/vnd.webturbo.wtbIANA: WebTurboWidget Packaging and XML Configurationapplication/widget.wgtW3C Widget Packaging and XML ConfigurationWinHelpapplication/winhlp.hlpWikipedia: WinHelpWireless Markup Language (WML)text/vnd.wap.wml.wmlWikipedia: WMLWireless Markup Language Script (WMLScript)text/vnd.wap.wmlscript.wmlsWikipedia: WMLScriptWMLScriptapplication/vnd.wap.wmlscriptc.wmlscIANA: WMLScriptWordperfectapplication/vnd.wordperfect.wpdIANA: WordperfectWorldtalkapplication/vnd.wt.stf.stfIANA: WorldtalkWSDL - Web Services Description Languageapplication/wsdl+xml.wsdlW3C Web Service Description LanguageX BitMapimage/x-xbitmap.xbmWikipedia: X BitMapX PixMapimage/x-xpixmap.xpmWikipedia: X PixMapX Window Dumpimage/x-xwindowdump.xwdWikipedia: X Window DumpX.509 Certificateapplication/x-x509-ca-cert.derWikipedia: X.509Xfigapplication/x-xfig.figWikipedia: XfigXHTML - The Extensible HyperText Markup Languageapplication/xhtml+xml.xhtmlW3C XHTMLXML - Extensible Markup Languageapplication/xml.xmlW3C XMLXML Configuration Access Protocol - XCAP Diffapplication/xcap-diff+xml.xdfWikipedia: XCAPXML Encryption Syntax and Processingapplication/xenc+xml.xencW3C XML Encryption Syntax and ProcessingXML Patch Frameworkapplication/patch-ops-error+xml.xerRFC 5261XML Resource Listsapplication/resource-lists+xml.rlRFC 4826XML Resource Listsapplication/rls-services+xml.rsRFC 4826XML Resource Lists Diffapplication/resource-lists-diff+xml.rldRFC 4826XML Transformationsapplication/xslt+xml.xsltW3C XSLTXML-Binary Optimized Packagingapplication/xop+xml.xopW3C XOPXPInstall - Mozillaapplication/x-xpinstall.xpiWikipedia: XPIXSPF - XML Shareable Playlist Formatapplication/xspf+xml.xspfXML Shareable Playlist FormatXUL - XML User Interface Languageapplication/vnd.mozilla.xul+xml.xulIANA: XULXYZ File Formatchemical/x-xyz.xyzWikipedia: XYZ File FormatYANG Data Modeling Languageapplication/yang.yangWikipedia: YANGYIN (YANG - XML)application/yin+xml.yinWikipedia: YANGZ.U.L. Geometryapplication/vnd.zul.zirIANA: Z.U.L.Zip Archiveapplication/zip.zipWikipedia: ZipZVUE Media Managerapplication/vnd.handheld-entertainment+xml.zmmIANA: ZVUE Media ManagerZzazz Deckapplication/vnd.zzazz.deck+xml.zaz","tags":[]},{"title":"JS和C#通信，Html和.net （winform）通信","date":"2017-04-13T06:19:00.000Z","path":"2017/04/13/6703718/","text":"一、js调用C#方法，js传参给C# html里js代码： 123456 commitDataToC(\"js传数据给C#\");//把数据传给C# function commitDataToC(str) &#123;// alert(str); window.external.SaveProgress(str); &#125; winform里C#代码： //为了使网页能够与winform交互 将com的可访问性设置为真 [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = “FullTrust“)] [System.Runtime.InteropServices.ComVisibleAttribute(true)] public void SaveProgress(string str) { MessageBox.Show(“html在调用C#中的方法。SaveProgressstr=“ + str); } 二、C#调用js方法，C#传参给js winform里C#代码： //为了使网页能够与winform交互 将com的可访问性设置为真 [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = “FullTrust“)] [System.Runtime.InteropServices.ComVisibleAttribute(true)] if (Wbr.Document != null) Wbr.Document.InvokeScript(“WfToHtml“, objArray); html里js代码： //C#传数据给js function WfToHtml() { alert(“wf调用html里面的js函数”); } 注意：js里不能添加console代码，不然在winform里C#会接收不到js传过来的参数，js调用C#代码也会失效。 参考： http://www.cnblogs.com/zeroLove/p/3912460.html","tags":[{"name":"C#","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"}]},{"title":"AS和C#通信，Flash和.net （winform）通信","date":"2017-04-13T06:03:00.000Z","path":"2017/04/13/6703636/","text":"一、使用 ExternalInterface api1.as调用C#，as给C#发送参数数据as代码：12345// as向C#发出 方法名+参数 ExternalInterface.call（functionName:String, ...parameters：*） 方法名是字符串，参数可以是任何数据类型 if(ExternalInterface.available) &#123; ExternalInterface.call(\"onSetDataToC\", “as通过ExternalInterface.call方法向C#传递参数”); &#125;C#代码：无2.C#调用as代码，C#给as发送参数数据C#代码：无as代码：// as监听C#发来的 方法名，然后通过回调函数接收参数 ExternalInterface.addCallback（functionName:String, closure:Function） 方法名是字符串，回调一个函数if(ExternalInterface.available){ ExternalInterface.addCallback(“onCToAs”,onCToAs);}function onCToAs(str：*){ trace(str);} 二、使用 fscommand api1.as调用C#，as给C#发送参数数据as代码：// as向C#发出 方法名+参数 fscommand（command:String, args:String=””) 命令是字符串，参数也只能是字符串fscommand(“onSetDataToC”, “as通过fscommand方法向C#传递参数”); C#代码：无","tags":[{"name":"C#","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"ActionScript","slug":"ActionScript","permalink":"http://yoursite.com/tags/ActionScript/"}]},{"title":"AS和JS通信，Flash和Html通信","date":"2017-04-13T05:53:00.000Z","path":"2017/04/13/6703576/","text":"一、使用 ExternalInterface api1.as调用js，as给js发送参数数据 as代码： 12345// as向js发出 方法名+参数 ExternalInterface.call（functionName:String, ...parameters：*） 方法名是字符串，参数可以是任何数据类型 if(ExternalInterface.available) &#123; ExternalInterface.call(\"onSetDataToJs\", “as通过ExternalInterface.call方法向js传递参数”); &#125; js代码： function onSetDataToJs(value){ console.log(“此方法被as调用：”+value)；} 2.js调用as代码，js给as发送参数数据 js代码： setDataToAs();function setDataToAs(){ var flash = getMovieName(“sco_flash”) // sco_flash是嵌入在html里的flash的id flash.onJsToAs(“js传参给as”);} //获取此页面加载FLASH对象名称function getMovieName(movieName) { if (window.document[movieName]) { return window.document[movieName]; }else if (navigator.appName.indexOf(“Microsoft”)==-1) { if (document.embeds &amp;&amp; document.embeds[movieName]) return document.embeds[movieName]; }else{ return document.getElementById(movieName); } }; as代码： // as监听js发来的 方法名，然后通过回调函数接收参数 ExternalInterface.addCallback（functionName:String, closure:Function） 方法名是字符串，回调一个函数if(ExternalInterface.available){ ExternalInterface.addCallback(“onJsToAs”,onJsToAs);}function onJsToAs(str：*){ trace(str);} 二、使用 fscommand api 1.as调用js，as给js发送参数数据 as代码： // as向js发出 方法名+参数 fscommand（command:String, args:String=””) 命令是字符串，参数也只能是字符串fscommand(“onSetDataToJs”, “as通过fscommand方法向js传递参数”); js代码： function onSetDataToJs(value){ console.log(“此方法被as调用：”+value)；}","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"ActionScript","slug":"ActionScript","permalink":"http://yoursite.com/tags/ActionScript/"}]},{"title":"【Hexo】Hexo+Github构建个人博客入门","date":"2017-04-04T09:48:00.000Z","path":"2017/04/04/6665630/","text":"1、【Hexo】Hexo+Github构建个人博客 （一）：环境配置 2、【Hexo】Hexo+Github构建个人博客 （二）：创建Hello World 3、【Hexo】Hexo+Github构建个人博客 （三）：添加皮肤主题 4、【Hexo】Hexo+Github构建个人博客 （四）：添加讨论等功能 5、【Hexo】Hexo+Github构建个人博客 （五）：错误集 PS：参考资料1.Hexo官方文档2.Git配置SSH,并Push到GitHub上的相关流程3.HEXO搭建个人博客","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"【Hexo】Hexo+Github构建个人博客 （四）：添加讨论等功能","date":"2017-04-04T09:43:00.000Z","path":"2017/04/04/6665610/","text":"待续 一、github page和域名绑定 参考教程： github pages+阿里云域名绑定搭建个人博客 github怎么绑定自己的域名？ 二、添加rss 安装 RSS插件，在项目目录下输入命令 npm install hexo-generator-feed 参考： http://blog.fens.me/hexo-blog-github/ Github 搭建 hexo （四）——更换主题，disqus，RSS 解決 Hexo Comment ! ：http://morris821028.github.io/2014/04/12/web/hexo-comment/ http://moxfive.xyz/2016/01/02/hexo-comments/?utm_source=tuicool&amp;utm_medium=referral","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"【Hexo】Hexo+Github构建个人博客 （五）：错误集","date":"2017-04-04T09:42:00.000Z","path":"2017/04/04/6664239/","text":"一、报错： ERROR Plugin load failed: hexo-deployer-git 解决方案：执行命令 npm install hexo-deployer-git –save 二、报错： ERROR Plugin load failed: hexo-generator-json-content 解决方案： 1.把node升级到6.0版本及以上； 2.然后执行命令 npm i hexo-generator-json-content –save 3.就OK了。 三、报错：出现 OpenSSH 提示框 解决方案： 1.yes——ok，不可以的话，就删掉github里的源码，然后重新走一遍流程 2. 确保配置没错：deploy: type: git repository: https://github.com/leopardpan/leopardpan.github.io.git branch: masternpm i hexo-generator-json-content –savenpm install hexo-deployer-git –savehexo deploy","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"【Hexo】Hexo+Github构建个人博客 （二）：创建Hello World","date":"2017-04-04T09:35:00.000Z","path":"2017/04/04/6665584/","text":"一、生成项目，初始化在项目目录下创建好Blog目录，比如我的是 D:\\projects\\web\\arvin0-blog ，然后执行命令 hexo init如图：创建完成之后的结果，如图：二、生成静态页面执行命令 hexo generate （hexo g 也可以） 如图：三、启动本地服务启动本地服务，进行文章预览调试，执行命令 hexo server 如图：打开浏览器，输入http://localhost:4000效果如图：四、把本地hexo文件部署到Github上1.建立Repository建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法 然后建立关联。2.然后打开上面建立的hexo项目，找到 _config.yml 文件，打开，翻到最下面，如图：红框部分，改成这样1234deploy: type: git repository: https://github.com/arvin0/arvin0.github.io.git branch: master注意： repository: 后面要加空格，还有注意要修改名字，arvin0 改成你自己的，我建议你copy这段话，然后直接改名字；3.然后使用Git Bash，执行命令 npm install hexo-deployer-git –save ，执行这句命令才能使用git部署4.执行命令 hexo deploy 或者 hexo d 如图：5.然后再浏览器中输入https://arvin0.github.io/就行了 ,记得把名字改成你 github 的账户名。五、更新GitHub每次修改过本地文件后，要更新到GitHub上，都要执行三句命令hexo cleanhexo generatehexo deploy更多命令，请参考 Hexo官方文档","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"【Hexo】Hexo+Github构建个人博客 （三）：添加皮肤主题","date":"2017-04-04T09:25:00.000Z","path":"2017/04/04/6664178/","text":"一、选择主题 选择你自己喜欢的主题 参考： 1.Hexo官网主题 2.知乎：有哪些好看的 Hexo 主题？ 二、配置主题 1.我选择了hexo-theme-yilia这个主题，简洁大方，功能齐全； 这是他的地址：https://github.com/litten/hexo-theme-yilia 2.具体添加方法： 12345678910**安装**git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia**配置**修改hexo根目录下的 _config.yml ： theme: yilia **更新**cd themes/yiliagit pull 三、可能会出现的问题 1.如图： 解决方法：如图所示，在git里执行命令 npm i hexo-generator-json-content –save 并且添加jsonContent这段配置信息； 2.执行命令 npm i hexo-generator-json-content –save 后，还是上面的错误，或者如图这样子的 解决方案： 1.升级Node到6.X以及以上版本； 2.再执行一遍 npm i hexo-generator-json-content –save 就OK了。 3.如果有更多问题请参考 https://github.com/litten/hexo-theme-yilia/issues 四、换好主题后，创建新文章，进行预览 执行命令 hexo new “My New Post“ ，关于更多创建，写作的命令信息，请阅读 https://hexo.io/zh-cn/docs/writing.html 执行命令 hexo server （或 hexo s） 再点击网址 http://0.0.0.0:4000 五、更新到GitHub上 执行三句命令 hexo cleanhexo generatehexo deploy 然后刷新一下GitHub 博客项目页面，看是否更新好了，等更新好之后，再打开 https://arvin0.github.io/ 链接，就可以了，记得把用户名换成你的。","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"【Hexo】Hexo+Github构建个人博客 （一）：环境配置","date":"2017-04-03T15:08:00.000Z","path":"2017/04/03/6662943/","text":"一、安装 Node下载地址：Node.js二、安装 Git（win环境下） 下载地址：Git Git 绑定 GitHub账户：1.打开Git Bash，然后输入两句命令12git config --global user.name \"Your Name\"git config --global user.email \"email@example.com\"如图：2.配置SSHPS：可以先打开 C:\\Users\\Administrator 目录下，有没有 .ssh 目录，如果有，再看看这个目录下有没有 id_rsa 和 id_rsa.pub 这两个文件，如果已经有了，可直接跳过这步。如果没有，则开始创建 SSH Key，首先，输入命令 ssh-keygen -t rsa -C “youremail@example.com“ ，你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。如图：3.登陆GitHub，打开 Settings —— SSH and GPG keys 页面，然后点击 New SSH Key 按钮，结果如图：然后 title随便填，key填写 id_rsa.pub 文件里的所以内容，然后保存，这步就OK了。三、正式安装hexo打开cmd，输入命令 npm install -g hexo-cli安装完成之后，可以输入命令 hexo -v ，来验证版本如图：PS：参考资料1.Hexo官方文档2.Git配置SSH,并Push到GitHub上的相关流程3.HEXO搭建个人博客","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"html中引入调用另一个html的方法","date":"2017-02-24T05:45:00.000Z","path":"2017/02/24/6522011/","text":"html中引入调用另一个html的方法，尝试了好几种，都列出来：其中第一种是最好的，其他的方法，可以尝试看看，是不是适合你当前项目一、div+$(“#page1”).load(“b.html”)参考代码：12345678&lt;body&gt; &lt;div id=\"page1\"&gt;&lt;/div&gt; &lt;div id=\"page2\"&gt;&lt;/div&gt; &lt;script&gt; $(\"#page1\").load(\"page/Page_1.html\"); $(\"#page2\").load(\"page/Page_2.html\"); &lt;/script&gt;&lt;/body&gt;二、iframe参考代码：&lt;head&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=”page1”&gt; &lt;iframe align=”center” width=”100%” height=”170” src=”page/Page_1.html” frameborder=”no” border=”0” marginwidth=”0” marginheight=”0” scrolling=”no”&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;div id=”page2”&gt; &lt;iframe align=”center” width=”100%” height=”170” src=”page/Page_2.html” frameborder=”no” border=”0” marginwidth=”0” marginheight=”0” scrolling=”no”&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;/body&gt;三、object引入参考代码：&lt;head&gt; &lt;object style=”border:0px” type=”text/x-scriptlet” data=”page/Page_1.html” width=100% height=150&gt; &lt;/object&gt;&lt;/head&gt;四、import引入参考代码：&lt;head&gt; &lt;link rel=”import” href=”page/Page_1.html” id=”page1”&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; console.log(page1.import.body.innerHTML); &lt;/script&gt;&lt;/body&gt;参考文章：https://www.web-tinker.com/article/20637.html五、bootstrap的panel组件，或者easyui的window组件，有点类似这个效果；","tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}]},{"title":"WebStorm里使用注意点","date":"2017-02-23T01:55:00.000Z","path":"2017/02/23/6522012/","text":"归纳一些我在使用webstorm里遇到的问题；1.问题：文件出现红线，如图解决方案：可能是由于语言版本的问题，改一下版本试试2.快捷键：http://www.cnblogs.com/yeminglong/p/5995421.html","tags":[{"name":"webstorm","slug":"webstorm","permalink":"http://yoursite.com/tags/webstorm/"}]},{"title":"【Electron】Electron开发入门（六）：项目生成setup安装程序","date":"2017-02-23T01:14:00.000Z","path":"2017/02/23/6522013/","text":"把electron发布的exe打包成setup安装程序，需要使用nsis软件，nsis打包的详细教程，可以参考我的这篇文章：win7下nsis打包exe安装程序教程","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"打包","slug":"打包","permalink":"http://yoursite.com/tags/打包/"},{"name":"安装程序","slug":"安装程序","permalink":"http://yoursite.com/tags/安装程序/"}]},{"title":"win7下nsis打包exe安装程序教程","date":"2017-02-23T01:09:00.000Z","path":"2017/02/23/6522014/","text":"下载软件包：NSIS中文版 ：https://pan.baidu.com/s/1mitSQU0装好之后会出现两个软件：Nullsoft Install System 和 VNISEdit 编译环境其中Nullsoft Install System：是使用教程手册集合VNISEdit 编译环境： 才是打包exe安装程序的软件教程：1.打开VNISEdit 编译环境 软件，然后打开“文件—新建脚本：（向导）”2.3.4.5.6.7.8.9.10.11.12.13.14.15.16.生成的exe安装文件17.18.19.20.21.22.23.生成的桌面快捷方式24.源码页面25.注意点①ico图标要规范，不能随便拿张png，jpg图片改一下后缀名就行了，需要用专业ico工具制作或者导出26.教程所有资源分享链接：http://pan.baidu.com/s/1pKQoNR9 密码：ijkh","tags":[{"name":"win7","slug":"win7","permalink":"http://yoursite.com/tags/win7/"},{"name":"nisi教程","slug":"nisi教程","permalink":"http://yoursite.com/tags/nisi教程/"},{"name":"exe安装程序","slug":"exe安装程序","permalink":"http://yoursite.com/tags/exe安装程序/"}]},{"title":"WebStorm里启动electron项目","date":"2017-02-20T07:53:00.000Z","path":"2017/02/20/6522015/","text":"WebStorm里启动electron项目，其实很简单一、第一步打开下面的窗口二、然后输入electron .，然后敲下 回车键，然后等会项目界面就会出现了。PS：electron 和 点之间有个空格。","tags":[{"name":"webstorm","slug":"webstorm","permalink":"http://yoursite.com/tags/webstorm/"},{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"}]},{"title":"VSCode里的一些有用的插件","date":"2017-01-04T02:33:00.000Z","path":"2017/01/04/6522016/","text":"1.EaseServer作用：开启本地 http server，然后在browser里打开html；在调试页面的时候，打开页面比较方便，不需要先开启server，再打开html2.Debugger for Chrome作用：在editor进行断点调试的插件，类似于游览器F12调试3.EgretCode作用：用vscode写egret代码专用插件4.View In Browser作用：在editor里直接打开html页面","tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://yoursite.com/tags/VSCode/"},{"name":"插件","slug":"插件","permalink":"http://yoursite.com/tags/插件/"}]},{"title":"使用VSCode  断点调试 js项目，html页面","date":"2016-12-15T09:33:00.000Z","path":"2016/12/15/6522017/","text":"一、效果目的1.在VSCode里，直接F5打开html页面，并且可以在编辑器里，进行断点调试js代码；二、工具准备1.VSCode 软件2.一个js项目3.VSCode 上装一个插件：Debugger for Chrome如图三、配置文件更改1.用VSCode装载项目2.然后按F5，出现这个框选择 Chrome3.然后出现个配置的提示，和打开了launch.json这个文件在 这个文件里添加一段配置信息, { “name”: “使用本机 Chrome 调试”, “type”: “chrome”, “request”: “launch”, “file”: “${workspaceRoot}/index.html”, // “url”: “http://mysite.com/index.html“, //使用外部服务器时,请注释掉 file, 改用 url, 并将 useBuildInServer 设置为 false “http://mysite.com/index.html “runtimeExecutable“: “C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe“, // 改成您的 Chrome 安装路径 “sourceMaps“: true, “webRoot“: “${workspaceRoot}“, // “preLaunchTask“:”build“, “userDataDir“:”${tmpdir}“, “port“:5433 }结果如图4.然后，更改调试方式如图，选择左边的圆形按钮，然后出来这个调试配置管理界面，选择“使用本机 Chrome 调试”。5.然后在项目的 js 处设置好断点，按 F5，就可以进行断点调试了。6.接着就 Enjoy!PS：这种方法只适合普通页面，要是你的js项目里，包含json等游览器不支持本地游览的资源，那么就需要开启服务器，配合这个插件，才能进行断点调试。","tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://yoursite.com/tags/VSCode/"},{"name":"断点调试js项目","slug":"断点调试js项目","permalink":"http://yoursite.com/tags/断点调试js项目/"}]},{"title":"【Egret】使用VSCode 编译，断点调试Egret项目","date":"2016-12-15T07:22:00.000Z","path":"2016/12/15/6522018/","text":"经过我日积月累的摸索，还是一直模模糊糊的，搞不懂，今天经晨哥点拨两下，一下子就恍然大悟，搞定了怎么弄这个东西，现将经验分享如下。一、效果目的1.在VSCode里，直接F5打开Egret页面，并且可以在编辑器里，进行断点调试Egret代码，和在Wing里进行代码调试相似；二、工具准备1.VSCode 软件2.一个Egret 项目3.VSCode 上装两个插件：Debugger for Chrome，EgretCode如图：三、配置文件更改1.用VSCode装载Egret项目2.然后按F5，出现这个框选择 Chrome3.然后出现个配置的提示，和打开了launch.json这个文件在 这个文件里添加一段配置信息, { “name”: “使用本机 Chrome 调试”, “type”: “chrome”, “request”: “launch”, // “file”: “index.html”, “url”: “http://10.10.20.120:3000/index.html“, //使用外部服务器时,请注释掉 file, 改用 url, 并将 useBuildInServer 设置为 false “http://mysite.com/index.html “runtimeExecutable“: “C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe“, // 改成您的 Chrome 安装路径 “sourceMaps“: true, “webRoot“: “${workspaceRoot}“, “preLaunchTask“:”build“, “userDataDir“:”${tmpdir}“, “port“:5433 }如图4.然后更改tasks.json文件里的配置tasks.json初始化，如图把下面的代码复制替换{ “version“: “0.1.0”, “command“: “egret”, “isShellCommand“: true, “tasks“: [ { “taskName“: “build”, “showOutput“: “always”, “args“: [ “build”, “-sourcemap” ], “problemMatcher“: “$tsc” }, { “taskName“: “clean”, “showOutput“: “always”, “args“: [ “build”, “-e” ], “problemMatcher“: “$tsc” }, { “taskName“: “publish”, “showOutput“: “always”, “args“: [ “publish” ], “problemMatcher“: “$tsc” } ]}结果如图：5.接着按快捷键： ctrl shift p ，会出现一个搜索框，在里面输入 Egret StartServer然后 按 Enter 键，结果如图PS：每次启动 Egret Server的时候，都会同时启动项目页面，但是这个页面不支持在VSCode的断点调试功能，所以把这个页面关闭掉。6.然后在Egret项目里设置好断点，按 F5，就可以进行断点调试了，并且每次F5的时候支持自动编译。7.如果想在写代码的过程中，清理，编译项目，那么使用 EgretCode 插件里提供的命令使用方法，参考第5步。8.接着就 Enjoy!","tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://yoursite.com/tags/VSCode/"},{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"},{"name":"断点调试","slug":"断点调试","permalink":"http://yoursite.com/tags/断点调试/"}]},{"title":"【Flex】编辑器的缩放功能（绝对定位和相对定位）","date":"2016-11-29T03:38:00.000Z","path":"2016/11/29/6522019/","text":"一、横向的ide拖动缩放效果&lt;?xml version=”1.0” encoding=”utf-8”?&gt;&lt;s:WindowedApplication xmlns:fx=“http://ns.adobe.com/mxml/2009“ xmlns:s=“library://ns.adobe.com/flex/spark” xmlns:mx=“library://ns.adobe.com/flex/mx”&gt; &lt;fx:Declarations&gt; &lt;/fx:Declarations&gt; &lt;mx:HDividedBox width=“100%” height=“100%” visible=“true”&gt; &lt;s:Panel title=“左边” height=“100%” textAlign=“left” cornerRadius=“0”&gt; &lt;/s:Panel&gt; &lt;s:TitleWindow title=“中间” height=“100%”&gt; &lt;/s:TitleWindow&gt; &lt;s:Panel title=“右边” height=“100%” textAlign=“left” cornerRadius=“0”&gt; &lt;/s:Panel&gt; &lt;/mx:HDividedBox&gt;&lt;/s:WindowedApplication&gt;二、垂直的ide拖动缩放效果&lt;?xml version=”1.0” encoding=”utf-8”?&gt;&lt;s:WindowedApplication xmlns:fx=“http://ns.adobe.com/mxml/2009“ xmlns:s=“library://ns.adobe.com/flex/spark” xmlns:mx=“library://ns.adobe.com/flex/mx”&gt; &lt;fx:Declarations&gt; &lt;/fx:Declarations&gt; &lt;mx:VDividedBox width=“100%” height=“100%” visible=“true”&gt; &lt;s:Panel title=“左边” width=“100%” height=“100%” textAlign=“left” cornerRadius=“0”&gt; &lt;/s:Panel&gt; &lt;s:TitleWindow title=“中间” width=“100%” height=“100%”&gt; &lt;/s:TitleWindow&gt; &lt;s:Panel title=“右边” width=“100%” height=“100%” textAlign=“left” cornerRadius=“0”&gt; &lt;/s:Panel&gt; &lt;/mx:VDividedBox&gt;&lt;/s:WindowedApplication&gt;","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"编辑器","slug":"编辑器","permalink":"http://yoursite.com/tags/编辑器/"},{"name":"缩放","slug":"缩放","permalink":"http://yoursite.com/tags/缩放/"},{"name":"定位","slug":"定位","permalink":"http://yoursite.com/tags/定位/"}]},{"title":"【Flex】读取本地JSON，然后JSON数据转成XML数据","date":"2016-11-29T03:34:00.000Z","path":"2016/11/29/6522020/","text":"package utils{ import flash.xml.XMLDocument; import flash.xml.XMLNode; import mx.rpc.xml.SimpleXMLEncoder; / 模块功能：把json格式的数据 转换成 xml格式的数据 创建时间：2016-11-26 下午3:33:20 @author pengxiang */ public final class ConverJSONToXML { public function ConverJSONToXML() { } / 函数功能：把Object格式数据 转换成 XML格式数据；(方法1 可以用，完全灵活，但是对于本项目有BUG，作为下面优化的参考) @param obj Object格式数据 @param rootNodeName XML根节点名称 @return XML / public static function converObjectToXML1(obj:Object,rootNodeName:String):XML { var qName:QName = new QName(rootNodeName); var xmlDocument:XMLDocument = new XMLDocument(); var simpleXMLEncoder:SimpleXMLEncoder = new SimpleXMLEncoder(xmlDocument); var xmlNode:XMLNode = simpleXMLEncoder.encodeValue(obj, qName, xmlDocument); var xml:XML = new XML(xmlDocument.toString()); // trace(xml.toXMLString()); return xml; } / 函数功能：把Object格式数据 转换成 XML格式数据；(方法2 不可以用，半灵活，有BUG，作为下面优化的参考) @param obj Object格式数据 @param nodeParentName XML根节点名称 @return XML / public static function converObjectToXML2(obj:Object,nodeParentName:String):XML { var nodeParent:XML = &lt;{nodeParentName}/&gt;; for(var item:Object in obj){ var node:XML = new XML(&lt;{item}&gt;&lt;/{item}&gt;); if (item == “arr”){ var arr :Array = String(obj[item]).split(“,”); for (var i:int=0;i","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"JSON","slug":"JSON","permalink":"http://yoursite.com/tags/JSON/"},{"name":"XML","slug":"XML","permalink":"http://yoursite.com/tags/XML/"},{"name":"数据互转","slug":"数据互转","permalink":"http://yoursite.com/tags/数据互转/"}]},{"title":"【Flex】读取本地XML，然后XML数据转成JSON数据","date":"2016-11-29T03:32:00.000Z","path":"2016/11/29/6522021/","text":"干了一年H5，最近被要求写编辑器，Electron等级还不够，写不了，只有重新拿起as3，用flex，最近写到数据表编辑模块，有这部分功能，基本完成 。package utils{ / 模块功能：把xml格式的数据 转换成 json格式的数据 创建时间：2016-11-26 下午3:33:20 @author pengxiang */ public final class ConverXMLToJSON { public function ConverXMLToJSON() { } / 函数功能：直接 把XML格式数据 转换成 JSON格式的字符串数据（不添加任何特殊处理，直接输出）； @param $str @return / private static function converXMLToJSON(xml:XML):String { //整理xml字符串为json // $str = removeXMLNameSpace($str); //移除xml中的命名空间 // var xml:XML = XML($str); var obj:Object = converXMLToObject(xml); var str:String = JSON.stringify(obj); return str; } /** 函数功能：把Object格式数据 转换成 JSON格式的字符串数据； @param xmlObj @return String（JSON格式的String） / public static function converObjectToJSON(xmlObj:Object):String { //stringify(value:Object, replacer: = null, space: = null):String //[静态] 返回 JSON 格式的字符串，用于表示 ActionScript 值。 var str:String = JSON.stringify(xmlObj); return str; } / 函数功能：把XML格式数据 转换成 Object格式数据； @param xml @return Object */ public static function converXMLToObject(xml:XML):Object { var obj:Object = new Object(); var ls:XMLList = xml.children(); var atts:XMLList = xml.attributes(); for each (var att:XML in atts){ obj[att.name().toString()]= att.toString(); } if(ls.length() &gt; 0){ for each(var node:XML in ls){ var objsub:Object = converXMLToObject(node); var tmp:Object = obj[node.name()]; if(tmp==null){ obj[node.name()]=objsub; }else if(tmp is Array){ (tmp as Array).push(objsub); } else{ obj[node.name()]=new Array(tmp,objsub); } } } return obj; } / 函数功能：去除XML中的命名空间 @param $str @return String / public static function removeXMLNameSpace($str:String):String { var a:Array = findXMLNameSpace($str); //去除空间声明 var r:RegExp = /xmlns[^“]+”[^“]+”/g; $str = $str.replace(r , “”); //去除空间名使用 for (var i:int = 0; i &lt; a.length; i++){ var s:String = a[i] + “:” r = new RegExp(s , “g”); $str = $str.replace(r , “”); } return $str; } /** 函数功能：查找XML中的命名空间 @param $str @return Array / public static function findXMLNameSpace($str:String):Array { var arr:Array = new Array(); var r:RegExp = /xmlns[^“]+”[^“]+”/g; var a:Array = $str.match(r); r = /xmlns:[^=]+=/g; for each (var s:String in a){ var a1:Array = s.match(r); if(a1 &amp;&amp; a1.length){ s = a1[0]; s = s.replace(“xmlns:” ,“”) s = s.replace(“=”,“”); arr.push(s); } } return arr; } }}","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"JSON","slug":"JSON","permalink":"http://yoursite.com/tags/JSON/"},{"name":"XML","slug":"XML","permalink":"http://yoursite.com/tags/XML/"},{"name":"数据互转","slug":"数据互转","permalink":"http://yoursite.com/tags/数据互转/"}]},{"title":"【Flex】去除外边框，底背景透明，改变exe的icon","date":"2016-11-11T05:58:00.000Z","path":"2016/11/11/6522022/","text":"一、去除程序外边框1.在 xx-app.xml文件里，找到 这句话，然后删掉注释，改成 &lt;systemChrome&gt;none&lt;/systemChrome&gt; 就可以了。2..然后在主程序 xx.mxml里的 &lt;s:WindowedApplication/&gt; 标签里添加属性 showStatusBar=”false” 就行了。二、让程序底背景可以透明，并且设置透明度1.在 xx-app.xml文件里，找到 这句话，然后删掉注释，改成 &lt;transparent&gt;true&lt;/transparent&gt; 2.然后在主程序 xx.mxml里的 &lt;s:WindowedApplication/&gt; 标签里添加属性 backgroundAlpha=”0.6” ，改变alpha值就行了。三、flex导出发行版exe，改变exe的图标icon1.在 xx-app.xml文件里，找到12345678910&lt;!-- &lt;icon&gt; &lt;image16x16&gt;&lt;/image16x16&gt; &lt;image32x32&gt;&lt;/image32x32&gt; &lt;image36x36&gt;&lt;/image36x36&gt; &lt;image48x48&gt;&lt;/image48x48&gt; &lt;image57x57&gt;&lt;/image57x57&gt; &lt;image72x72&gt;&lt;/image72x72&gt; &lt;image114x114&gt;&lt;/image114x114&gt; &lt;image128x128&gt;&lt;/image128x128&gt; &lt;/icon&gt; --&gt;如图：删掉注册，2.填写icon图片路径，此路径是默认src下面的PS：用后缀.con的格式，有时候会报错，用.png格式没问题3.成功如图","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"}]},{"title":"github上预览Demo网页最简单的方法","date":"2016-10-31T03:06:00.000Z","path":"2016/10/31/6522023/","text":"github上预览Demo网页最简单的方法：1.打开你github上demo网页index.html，效果如图 2.复制上面的页面地址，然后在该地址前加上 htmlpreview.github.com/? 然后就可以访问预览了，效果如图： PS：参考教程：如何在github上做一个demo演示Github 中展示demo","tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"预览","slug":"预览","permalink":"http://yoursite.com/tags/预览/"}]},{"title":".net做的exe和electron做的exe之间的通信问题","date":"2016-10-31T02:11:00.000Z","path":"2016/10/31/6522024/","text":"目前工作遇到个问题：.net做的exe和electron做的exe，之间进行数据通信目前找到两个相对方便的方法：1.命名管道①.net命名管道资料：进程间通信 - 命名管道实现②electron 之 nodejs 命名管道资料：使用nodejs，用法跟tcp一样，不过就是监听的时候，tcp是端口号，而命名管道是”\\.\\pipe\\” + PIPE_NAME;这种形式；客户端连接也是用管道名称去连接，而不是tcp的那种端口号；在windows平台下，命名管道和tcp方法一模一样的，所以很多人忽视了net模块其实可以做命名管道的2.TCP①.net方面的资料：②electron方面的资料：","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":".net","slug":"net","permalink":"http://yoursite.com/tags/net/"},{"name":"exe通信","slug":"exe通信","permalink":"http://yoursite.com/tags/exe通信/"}]},{"title":"淘宝 造物节,双11宇宙 技术分析","date":"2016-10-28T06:33:00.000Z","path":"2016/10/28/6522025/","text":"淘宝 造物节技术分析：https://aotu.io/notes/2016/08/24/2016-8-24-css-3d-panorama/所用3D引擎：https://github.com/shrekshrek/css3d-engine淘宝 双11宇宙技术分析：http://www.digitaling.com/articles/31448.html所用3D引擎：three.js","tags":[]},{"title":"【Electron】Electron开发入门（八）：自定义electron框架外壳（shell）的菜单（Menu）","date":"2016-10-27T03:58:00.000Z","path":"2016/10/27/6522026/","text":"1.自定义electron框架外壳（shell）的菜单（Menu）electron的main.js里代码：const Menu = require(‘electron’).Menu;var template = [ { label: ‘关闭’, click: function () { win.close();console.log(“关闭”)}, // submenu: [ // { // label: ‘Undo’, // accelerator: ‘CmdOrCtrl+Z’, // role: ‘undo’ // } // ] }]var menu = Menu.buildFromTemplate(template)Menu.setApplicationMenu(menu);效果如图：2.更多菜单样式，鼠标事件关联，请参考Electron Menu API 简体中文版3.在webview的html添加electron shell 的菜单的教程","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"【Electron】Electron开发入门（七）：打开本地文件或者网页链接 and webview里操纵electron api","date":"2016-10-24T08:11:00.000Z","path":"2016/10/24/6522027/","text":"1.打开本地文件或者网页链接// 打开系统本地文件 const {shell} = require(‘electron’); // Open a local file in the default app var path1 = “d:\\ProjectsSpace\\ElectronProjects\\ElectronTest2\\app\\html\\config\\record.txt”; shell.openItem(path1);//打开网页链接 // Open a URL in the default way shell.openExternal(‘https://github.com‘);2.electron+web view（html+js） html，js里获取electron的api，使用webview上的div元素，监听点击事件等，操作electron api PS:下面示例的api可能与现在electron 新版本有区别，最好查一下api，不过方法是这样子的；&lt;html&gt;&lt;head&gt;&lt;title&gt;test&lt;/title&gt; &lt;meta charset=“utf-8” /&gt;&lt;/head&gt;&lt;body &gt;&lt;button id=“btn_fullScreen”&gt;全屏&lt;/button&gt;&lt;button id=“btn_exitFullScreen”&gt;退出全屏&lt;/button&gt;&lt;div&gt; &lt;/div&gt; &lt;script&gt; var gui = require(‘nw.gui’); var win = gui.Window.get(); var btn_fullScreen = document.querySelector(‘#btn_fullScreen’); btn_fullScreen.addEventListener(“click”, function (evt) { win.enterFullscreen(); }, false); var btn_exitFullScreen = document.querySelector(‘#btn_exitFullScreen’); btn_exitFullScreen.addEventListener(“click”, function (evt) { win.leaveFullscreen(); }, false); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"adobe edge animate 和 adobe animate cc 有啥区别？","date":"2016-10-24T01:41:00.000Z","path":"2016/10/24/6522028/","text":"经常有人问这两款软件的区别，每次都要打字好烦，特此总结发帖如下： 一、首先各自软件介绍 ①adobe edge animate 是adobe公司早期推出的一款网页互动工具。通过HTML+CSS+JavaScript，制作网页动画和交互，支持PC端和移动端（iOS+Android等）。 其实edge animate是adobe的一个试水作品，他的宗旨在强化HTML动画制作规范。 2015年的时候，adobe发布公告停止此款软件的更新，通俗意义上来讲，就是停产了。 ②adobe animate cc 此款软件的前身是adobe flash cc，adobe公司在此款软件里，添加了 HTML5动画制作以及交互设计功能，强化HTML5动画制作规范，技术手段为（Canvas+CreateJS），因此此软件分为两个主要动画模式（Flash动画+H5动画）； adobe公司为了软件的命名，更符合软件的实际用途，并且为了规避各种非专业人员对于flash软件的众口铄金，积毁销骨，因此在2015年年底的时候，把软件更名为animate，并且目前持续更新。 二、区别 上面讲的比较清楚了 adobe edge animate这个软件，目前adobe公司本身放弃继续开发了，并且技术手段是原生dom，只是添加了多平台兼容，并不是H5（canvas）技术。 adobe animate cc这个软件，目前是adobe公司在H5动画软件方面主要推的工具，在持续更新，并且技术手段是H5（canvas） 的技术；","tags":[{"name":"Adobe Animate CC","slug":"Adobe-Animate-CC","permalink":"http://yoursite.com/tags/Adobe-Animate-CC/"},{"name":"Adobe Animate Edge","slug":"Adobe-Animate-Edge","permalink":"http://yoursite.com/tags/Adobe-Animate-Edge/"}]},{"title":"HTML5 的WebSocket","date":"2016-10-11T05:40:00.000Z","path":"2016/10/11/6522029/","text":"认识HTML5的WebSocket","tags":[{"name":"HTML5","slug":"HTML5","permalink":"http://yoursite.com/tags/HTML5/"},{"name":"WebSocket","slug":"WebSocket","permalink":"http://yoursite.com/tags/WebSocket/"}]},{"title":"Visual Studio 2015 Professional 破解","date":"2016-10-11T05:35:00.000Z","path":"2016/10/11/6522030/","text":"Visual Studio 2015 Professional 版本 破解序列号：HMGNV-WCYXV-X7G9W-YCX63-B98R2","tags":[{"name":"Visual Studio","slug":"Visual-Studio","permalink":"http://yoursite.com/tags/Visual-Studio/"},{"name":"破解","slug":"破解","permalink":"http://yoursite.com/tags/破解/"}]},{"title":"【Electron】Electron开发入门","date":"2016-09-30T03:05:00.000Z","path":"2016/09/30/6522031/","text":"Electron简介：Electron提供了丰富的本地（操作系统）的API，使你能够使用纯JavaScript来创建桌面应用程序，并且跨平台（win，mac，linux等各种PC端平台）。与其它各种的Node.js运行时不同的是Electron专注于桌面应用程序而不是Web服务器。有时候面对需求，开发出的web page既要能Online又要Offline（Offline是针对一些特殊网络环境或者page资源很大的情况下，企业或者其他机构要求的）web page offline的时候，甚至有时候还会有操作PC端本地文件系统的需求，这时候出于游览器的安全限制，web page要么部分资源格式读取不了（json等），要么不能操作本地文件；你不熟练C#，php，java等能PC文件系统的技术时，可以用Electron开发，这个相对js程序员来说上手容易很多，甚至是js全栈上的一步；我这段时间就面对这种情况，然后在摸索Electron，下面把我找到的资料和自己的经验归纳到下面，希望对有所需求的同学有所帮助：1、Electron开发入门（一）：开发环境搭建2、Electron开发入门（二）：创建项目Hello Word3、Electron开发入门（三）：main process和web page 通信4、Electron开发入门（四）：操作PC端文件系统5、Electron开发入门（五）：项目打包6、Electron开发入门（六）：项目生成setup安装程序7、Electron开发入门（七）：打开本地文件或者网页链接 and webview里操纵electron api8、Electron开发入门（八）：自定义electron框架外壳（shell）的菜单（Menu）PS：1.官方API：http://electron.atom.io/docs/api/2.社区翻译简体中文版文档：https://github.com/electron/electron/tree/master/docs-translations/zh-CN","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"【Electron】Electron开发入门（五）：项目打包","date":"2016-09-28T06:06:00.000Z","path":"2016/09/28/6522032/","text":"一、安装 electron-packagerPS：安装之前，先复制一份package.json文件到./app目录下，然后改下./app目录下package.json里 “main”: “app/main.js”的路径（去掉app/），不这样子的话，下面打包的时候会报错，有的版本识别不了应用路径。1、使用命令 npm install --save-dev electron-packager将electron-package包安装到在项目下面，安装完成之后，项目根目录下面的package.json文件里，会多出一条electron-package的版本号配置信息二、正式打包有两种方法：1、直接使用命令打包，electron-packager的打包基本命令是：electron-packager &lt;location of project&gt; &lt;name of project&gt; &lt;platform&gt; &lt;architecture&gt; &lt;electron version&gt; &lt;optional options&gt;命令说明： location of project：项目所在路径 name of project：打包的项目名字 platform：确定了你要构建哪个平台的应用（Windows、Mac 还是 Linux） architecture：决定了使用 x86 还是 x64 还是两个架构都用 electron version：electron 的版本 optional options：可选选项命令比较长，每次要是都用这个命令来打包会很烦，可以使用第二种方法；2、首先在项目根目录下面的 package.json 里添加代码，&quot;packager&quot;: &quot;electron-packager ./app HelloWorld --all --out ./OutApp --version 1.4.0 --overwrite --icon=./app/img/icon/icon.ico&quot;PS：这里要注意，字段里的 项目名字，version，icon路径要改成自己的； all表示打包全部的版本，你要只打包win版本的话，设置win32具体添加位置如图，然后，在使用命令 npm run-script packager最后，打包完成之后如图运行对应包下的.exe文件，就可以看到我们的应用了。","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"【Electron】Electron开发入门（四）：操作PC端文件系统","date":"2016-09-28T06:03:00.000Z","path":"2016/09/28/6522033/","text":"一、调用PC端默认方式打开本地文件在main.js里 // 打开系统本地文件或者网页链接 const {shell} = require(‘electron’); // Open a local file in the default app var path1 = “d:\\ProjectsSpace\\ElectronProjects\\ElectronTest2\\app\\html\\config\\record.txt”; shell.openItem(path1); // Open a URL in the default way shell.openExternal(‘https://github.com‘);这个使用的是electron里shell模块的方法，只能打开和删除，不能通过代码更改文件内容，具体请看shell的api http://electron.atom.io/docs/api/shell/二、通过代码读取、写入、更名、删除、遍历目录、链接等 POSIX 文件系统操作这个使用的是node.js里的fs 模块，在electron中使用，案例代码如下：在main.js里//本地文件写入 var path = require(‘path’); var _path = path.join(__dirname, ‘..’, ‘\\app\\html\\config\\record.txt’); var path1 = “d:\\ProjectsSpace\\ElectronProjects\\ElectronTest2\\app\\html\\config\\record.txt”; console.log(_path, path1);//测试路径对不对的 var fs = require(‘fs’); fs.readFile(_path, ‘utf8’, function (err, data) { if (err) return console.log(err); }); fs.writeFile(_path, “electron + Javascript”, function (err) { if (!err) console.log(“写入成功！”) })关于fs更详细的使用方法，请看相关api，或者下图","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"【Electron】Electron开发入门（三）：main process和web page 通信","date":"2016-09-27T08:24:00.000Z","path":"2016/09/27/6522034/","text":"一、main process 和 web page 通信electron框架主进程（Main Process）与嵌入的网页（web page，也就是renderer process）之间的通信Main.js里添加代码//通信模块，mian process与renderer process（web page）const {ipcMain} = require(‘electron’)//监听web page里发出的messageipcMain.on(‘asynchronous-message’, (event, arg) =&gt; { console.log(“mian1” + arg) // prints “ping” event.sender.send(‘asynchronous-reply’, ‘pong’)//在main process里向web page发出message})ipcMain.on(‘synchronous-message’, (event, arg) =&gt; { console.log(“mian2” + arg) // prints “ping” event.returnValue = ‘pong’web page里添加代码const {ipcRenderer} = require(‘electron’)//监听mian process里发出的messageipcRenderer.on(‘asynchronous-reply’, (event, arg) =&gt; { // alert(“web2” + arg);// prints “pong” 在electron中web page里的console方法不起作用，因此使用alert作为测试方法 }) //在web page里向main process发出message ipcRenderer.send(‘asynchronous-message’, ‘ping’) // prints “pong“ // ipcRenderer.sendSync(‘synchronous-message’, ‘ping’) // prints “pong“ // alert(“web1” + ‘ping’);二、具体项目中代码，如下图：1、mian process 里 mian.js2、web page 里①、 html文件②、js文件3、最后成功界面","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"【Electron】Electron开发入门（二）：创建项目Hello Word","date":"2016-09-27T03:59:00.000Z","path":"2016/09/27/6522035/","text":"创建简单的Electron程序1、首先，切换到你的项目空间，我的在 D:\\ProjectsSpace\\ElectronProjects\\ElectronTest，ElectronTest是案例项目文件夹①、打开cmd，切换到自己的项目文件目录然后输入命令 npm init创建 package.json文件，然后按照步骤一步一步来，一直到最后最后成功的图：内容为：{ “name“: “package.json”, “version“: “1.0.0”, “description“: “hello word”, “main“: “app/main.js”, “dependencies“: { “electron-prebuilt“: “^1.4.0” }, “devDependencies“: { “electron-prebuilt“: “^1.4.0” }, “scripts“: { “test“: “start”, “start“: “electron .” }, “author“: “pengxiang”, “license“: “ISC”}②、然后执行一次 npm install --save-dev electron-prebuilt③、在根目录下创建app文件夹，在app/下创建main.js,内容如下：const electron = require(‘electron’);// 控制应用生命周期的模块const {app} = electron;// 创建本地浏览器窗口的模块const {BrowserWindow} = electron;// 指向窗口对象的一个全局引用，如果没有这个引用，那么当该javascript对象被垃圾回收的// 时候该窗口将会自动关闭let win;function createWindow() { // 创建一个新的浏览器窗口 win = new BrowserWindow({width: 1104, height: 620});//570+50 // 并且装载应用的index.html页面 win.loadURL(file:&lt;span class=&quot;hljs-comment&quot;&gt;//${__dirname}/html/index.html); // 打开开发工具页面// win.webContents.openDevTools(); // 当窗口关闭时调用的方法 win.on(‘closed’, () =&gt; { // 解除窗口对象的引用，通常而言如果应用支持多个窗口的话，你会在一个数组里 // 存放窗口对象，在窗口关闭的时候应当删除相应的元素。 win = null; });}// 当Electron完成初始化并且已经创建了浏览器窗口，则该方法将会被调用。// 有些API只能在该事件发生后才能被使用。app.on(‘ready’, createWindow);// 当所有的窗口被关闭后退出应用app.on(‘window-all-closed’, () =&gt; { // 对于OS X系统，应用和相应的菜单栏会一直激活直到用户通过Cmd + Q显式退出 if (process.platform !== ‘darwin’) { app.quit(); }});app.on(‘activate’, () =&gt; { // 对于OS X系统，当dock图标被点击后会重新创建一个app窗口，并且不会有其他 // 窗口打开 if (win === null) { createWindow(); }});// 在这个文件后面你可以直接包含你应用特定的由主进程运行的代码。// 也可以把这些代码放在另一个文件中然后在这里导入。④、然后在app/html下创建index.html文件，内容如下：&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=“utf-8” /&gt; &lt;title&gt;我的世界&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;Hello World&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;⑤、配置VS Code启动环境先装全局： glup：npm install gulp -g再装本地： npm install --save-dev gulp然后根目录下创建gulpfile.js配置文件,内容如下：// 获取依赖var gulp = require(‘gulp’), childProcess = require(‘child_process’), electron = require(‘electron-prebuilt’);// 创建 gulp 任务gulp.task(‘run’, function () { childProcess.spawn(electron, [‘–debug=5858’,‘.’], {stdio:‘inherit’});});⑥启动项目两种方法：1、使用cmd命令启动运行gulp任务：gulp run2、使用VS Code编辑器启动项目首先，用VSC打开项目文件夹，然后，按下快捷键ctrl+shift+b,第一次启动的时候会提示你配置生成任务，点击接着，选择如图，会自动配置task.json文件，修改此文件内容为；{ // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format “version”: “0.1.0”, “command”: “gulp”, “isShellCommand”: true, “args”: [ “–no-color” ], “tasks”: [ { “taskName”: “run”, “args”: [], “isBuildCommand”: true }]}保存，再使用ctrl+shift+b运行程序，基本就OK了，如图","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"【Electron】Electron开发入门（一）：开发环境搭建","date":"2016-09-18T09:41:00.000Z","path":"2016/09/18/6522036/","text":"刚接触Electron+js开发PC端桌面应用程序的时候，简直一头雾水，搜了网上很多教程，有的要么讲的零零碎碎，要么就是版本太低，很多API语法都不能用了；现在我把一些有用的教程归纳一下，并把目前最新Electron版本1.4.0的使用语法贴出来，目的是为了有个能正常运行的DEMO教程；一、配置安装1、安装node①、node.js下载链接http://nodejs.cn/download/选择适合自己电脑系统的安装包，比如win7 64位系统，那么选择下图红框中的②、安装完成以后在cmd里运行 node -v检测安装是否成功。如图，安装成功之后应该如图所示，其中v4.4.3，是你安装的node.js的版本号2、安装Electron①、打开cmd，在里面输入 npm install --g electron-prebuilt 如图 ②、安装完成后运行 electron -v 检查是否安装成功如图，安装成功之后应该如图所示，其中v1.4.0，是你安装的electron的版本号PS：如果你要安装特定版本的electron，这样子写： npm install --g electron-prebuilt@1.2.13、安装开发工具编辑器，vscodevscode下载","tags":[{"name":"electron","slug":"electron","permalink":"http://yoursite.com/tags/electron/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"TCP/IP、HTTP、Socke、UDP的区别","date":"2016-09-14T07:11:00.000Z","path":"2016/09/14/6522037/","text":"一、TCP/IP、Http、Socket的区别[http://jingyan.baidu.com/article/08b6a591e07ecc14a80922f1.html](http://jingyan.baidu.com/article/08b6a591e07ecc14a80922f1.html](http://jingyan.baidu.com/article/08b6a591e07ecc14a80922f1.html二、WebSocket原理及与http1.0/1.1 long poll和 ajax轮询的区别http://www.yidianzixun.com/home?page=article&amp;id=0BemrM2v","tags":[{"name":"TCP/IP","slug":"TCP-IP","permalink":"http://yoursite.com/tags/TCP-IP/"},{"name":"HTTP","slug":"HTTP","permalink":"http://yoursite.com/tags/HTTP/"},{"name":"Socke","slug":"Socke","permalink":"http://yoursite.com/tags/Socke/"},{"name":"UDP","slug":"UDP","permalink":"http://yoursite.com/tags/UDP/"}]},{"title":"ajax VS websocket","date":"2016-09-14T01:28:00.000Z","path":"2016/09/14/6522038/","text":"一、 ajax VS websocket总结http://blog.csdn.net/qiuhuanmin/article/details/50719114二、用Websocket代替Ajax来开发WEB应用可不可行？ 1、部分浏览器可能不支持websocket； 2、多种客户端访问技术，譬如移动端，自己开发的sdk；用http协议，会很通用而简单；websocket在技术上，不够通用；3、并发，http是短连接，而websocket会保持长连接，当交互并不频繁的时候，连接是被大量浪费的，因此服务器的连接容量会大大多于http；4、负载，http协议，可以很容易的进行web请求转发来扩容，在搭建lbs接入层的时候，很简单和稳定；而websocket协议，虽然nginx也可以转发，但是毕竟是新技术，稳定性未知；5、简单：在问题诊断的时候，可以直接面向http协议进行切片从而监视原始数据，工具也很多；而websocket，需要更多面向tcp协议的工具，复杂度和难度会增加不少；综上，建议只有当需要服务器push的模块，才采用websocket，而其他的交互采用http。","tags":[{"name":"WebSocket","slug":"WebSocket","permalink":"http://yoursite.com/tags/WebSocket/"},{"name":"ajax","slug":"ajax","permalink":"http://yoursite.com/tags/ajax/"}]},{"title":"HTML5 WebSocket和后端C#通信","date":"2016-09-08T08:41:00.000Z","path":"2016/09/08/6522039/","text":"1、使用 HTML5 开发离线应用http://www.ibm.com/developerworks/cn/web/1011_guozb_html5off/2、利用html 5 websocket做个山寨版web聊天室(手写C#服务器)http://www.cnblogs.com/dolphinX/p/3462898.html3、使用 HTML5 WebSocket 构建实时 Web 应用http://www.ibm.com/developerworks/cn/web/1112_huangxa_websocket/4、H5 websocket C# serverhttp://blog.csdn.net/for_cxc/article/details/515001855、C# signalR实现即时通信http://www.it165.net/pro/html/201503/37259.html6、基于C# Winform的简易聊天程序http://www.cnblogs.com/longwu/archive/2011/08/25/2153636.html","tags":[{"name":"HTML5","slug":"HTML5","permalink":"http://yoursite.com/tags/HTML5/"},{"name":"WebSocket","slug":"WebSocket","permalink":"http://yoursite.com/tags/WebSocket/"},{"name":"C#","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"通信","slug":"通信","permalink":"http://yoursite.com/tags/通信/"}]},{"title":"C#调用webbrowser，阻止弹出新HTML页面","date":"2016-09-08T08:29:00.000Z","path":"2016/09/08/6522040/","text":"参考资料：1、C#调用webbrowser，阻止弹出新IE窗口http://www.cnblogs.com/blindman/p/3819649.html2、【WPF】监听WPF的WebBrowser控件弹出新窗口的事件（这个教程满全的，还有案例代码提供下载）http://www.cnblogs.com/RMay/archive/2010/05/27/1745388.html3、WbBrowser的英文介绍http://www.codeproject.com/Articles/13598/Extended-NET-WebBrowser-Control","tags":[{"name":"C#","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"webbrowser","slug":"webbrowser","permalink":"http://yoursite.com/tags/webbrowser/"}]},{"title":"Visual Studio Code 使用Chrome Debug 代码","date":"2016-09-06T04:01:00.000Z","path":"2016/09/06/6522041/","text":"一、添加插件 Debugger for Chrome，点击安装，安装完成之后，启动二、配置启动参数1.按 F5，出现界面如图，选择 Chrome2.然后会打开配置文件 launch.json3.第三步需要配置本地HTTP服务器（IIS）①HTTP服务器配置教程②配置完成之后，把服务器相关配置改成如下图：4.再按F5启动，就可以启动Chrome，并且在VSC里Debug调试代码了5.如果并没有显示正确的页面，那么就重启一下服务器，清理一下Chrome的缓存，再或者多刷几次页面，就应该可以了","tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://yoursite.com/tags/VSCode/"},{"name":"Chrome Debug","slug":"Chrome-Debug","permalink":"http://yoursite.com/tags/Chrome-Debug/"}]},{"title":"【Egret】在WebStorm里使用Egret Engine 的注意点","date":"2016-09-06T01:23:00.000Z","path":"2016/09/06/6522042/","text":"1.开启代码提示2.修改egret code后，自动编译新egret code按照下图进行设置：①打开“File—settings”②③（PS：webstorm打开目录为当前项目目录）3.设置启动/运行①打开“File—settings”②打开“Run—Edit Configurations”③（PS：webstorm打开目录为当前项目目录）4.启用EXML皮肤文件语法提示http://bbs.egret.com/forum.php?mod=viewthread&amp;tid=155&amp;extra=page%3D15.Egret 命令行手册：http://developer.egret.com/cn/github/egret-docs/Engine2D/projectConfig/cmdManual/index.html","tags":[{"name":"webstorm","slug":"webstorm","permalink":"http://yoursite.com/tags/webstorm/"},{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【Egret】WebSocket 的使用说明","date":"2016-09-02T08:13:00.000Z","path":"2016/09/02/6522043/","text":"在Egret里可以使用WebSocket ，也可以使用socket.io 首先先深入了解一下 WebSocket 在Egret里的机制，看这篇文章： 主要讲解Egret里使用WebSocket和protoBuf http://www.cnblogs.com/yangxiao/p/4686729.html","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"P2物理引擎中文文档","date":"2016-08-19T08:38:00.000Z","path":"2016/08/19/6522045/","text":"P2物理引擎中文文档地址：https://github.com/schteppe/p2.js/wiki/Chinese-wiki-%E4%B8%AD%E6%96%87%E7%BB%B4%E5%9F%BA","tags":[{"name":"P2","slug":"P2","permalink":"http://yoursite.com/tags/P2/"},{"name":"物理引擎","slug":"物理引擎","permalink":"http://yoursite.com/tags/物理引擎/"}]},{"title":"微信相关功能，跳转链接","date":"2016-08-14T13:57:00.000Z","path":"2016/08/14/6522046/","text":"在微信群，好友消息，朋友圈，填写下面链接，点击链接会跳转到相应的功能 weixin://dl/profile 个人信息 weixin://dl/scan 扫一扫 weixin://dl/feedback 反馈 weixin://dl/moments 朋友圈 weixin://dl/settings 设置 weixin://dl/notifications 消息通知设置 weixin://dl/chat 聊天设置 weixin://dl/general 通用设置 weixin://dl/officialaccounts 公众号 weixin://dl/games 游戏 weixin://dl/help 帮助 weixin://dl/feedback 反馈 weixin://dl/features 功能插件","tags":[{"name":"微信","slug":"微信","permalink":"http://yoursite.com/tags/微信/"}]},{"title":"web中关于垃圾回收的一些观点","date":"2016-08-02T08:49:00.000Z","path":"2016/08/02/6522047/","text":"感觉dom大神的解惑关于引用计数法，注意引用的方向性就行。 A.addEventListner(B.func), 那么是增加了A对B的引用。如果A是不可回收的对象，比如全局的Stage，或者单例。那不移除就一定会导致B无法回收。如果A是可以回收的对象，那无所谓，这个引用无效。A.addEventListner(B.func) ，对A本身没有影响。是A引用别人了，不是别人引用A。还是那句话，注意方向性。A.addChild(B)也是同理。倒霉的都是B引用计数实际回收中其着重的情况很小，大部分是根节点遍历法起作用。主要就是看引用的方向性，一个对象反向追溯对它的所有引用，无法到达一个根节点就判定这个对象可以回收。根节点通常有stage，或者其他单例。也指一切确定无法回收的对象。就是一个对象从任何方式你都再也无法访问到它，它就能被回收。说的不是标记清除啊。v8的回收机制跟这个根节点遍历法是一个原理。拷贝整块内存到新的地方。访问不到的全都扔掉了。就是从几个根节点开始遍历。被根引用的全都无法回收，进入新内存区。旧区域整个删除。根本不考虑循环引用还是什么情况，只要从根无法到达就扔掉。大部分语言的垃圾回收器都实现了这两种机制：引用计数和根节点遍历，实际项目里的对象循环引用非常多，所以引用计数这种设计实际上一直都没怎么派上用场。大部分是根节点遍历法。V8更激进点，按照它的官方文档描述的话，就只有根节点遍历法。这篇文章也是介绍内存管理的：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Memory_Management","tags":[{"name":"Web","slug":"Web","permalink":"http://yoursite.com/tags/Web/"},{"name":"垃圾回收机制","slug":"垃圾回收机制","permalink":"http://yoursite.com/tags/垃圾回收机制/"}]},{"title":"【Egret】使用Egret开发的HTML5项目，使用本地电脑作为服务器进行移动端调试流程","date":"2016-07-28T06:02:00.000Z","path":"2016/07/28/6522048/","text":"流程： 1.先开启本机IIS服务器 具体开启流程如下：http://www.jb51.net/article/29787.htm 2.添加服务器MIME类型， 按照以下两个教程把所有的MIME类型都添加一遍， 需要添加的MIME：http://blog.csdn.net/arvin0/article/details/50857810 添加MIME的方法：http://jingyan.baidu.com/article/fa4125acb4838728ac7092bf.html 3.移动端链接本机发出的wifi，然后登录对应的网址进行测试 ps：要是想让别人通过数据流量也能访问，放在本机上的H5页面，就必须把本机IIS服务器再进行一些设置， 教程：http://jingyan.baidu.com/article/4e5b3e1973d4b191901e2434.html","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【CreateJS】WebStorm+Adobe Animate CC 搭配开发HTML5，入门教程","date":"2016-07-26T03:03:00.000Z","path":"2016/07/26/6522049/","text":"目的：动画设计师用Adobe Animate CC做好动画素材，发布好之后，交给程序员写交互代码；在WebStorm之类的ide里操纵 Animate 里面的变量，class等。 前提环境： ①安装好Adobe Animate CC ②安装好WebStorm，或者Sublime Text 2，Visual Studio Code之类的编程ide ③有个HTML5 动画（canvas 项目） 流程： 1、把动画文件从 Adobe Animate里发布出来，后有一堆文件 2、然后把发布后的文件拷贝到你在WebStorm新建的web项目文件夹里，就可以了，没有像以前flash cs和flash builder搭配的复杂，不需要在Adobe Animate里填写类路径。 主要有以下点要点： 一、如何让库中的MC动画，在html中加载，显示出来 1、新建一个view类，然后在这个类里面建一个变量 back = animate 库中的 page，然后把 back加载到view类里，代码如下图 2、把view类加载到舞台上，代码如下图 二、如何在js中控制，新建，获取MC里的变量等等 1、如下图 三、animate里发出事件，WebStorm里如何接收 1、首先是 animate 里发出事件，如图 2、然后是 WebStorm 里接收 事件并处理，如图 四、自适应 1、animate cc 提供了自适应和舞台居中的功能，具体设置如下图红框： 当然自适应，居中，缩放填充的功能，根据你自己项目需求选择。 五、预加载设置 动画较大，初始打开的时候会白屏很久，这时候选择预加载器，可以有个加载loading，当做过渡，具体如下图红框： 六、本例DEMO的完整代码 下载链接：链接：http://pan.baidu.com/s/1boXnAlL 密码：2cbj PS：目前用 adobe animate发布的文件中，mcTest.html这个文件暂时就没有作用了，现在用我新建的index.html 这个文件来代替， 等我以后再摸索看看，是否可以直接用mcTest.html。","tags":[{"name":"webstorm","slug":"webstorm","permalink":"http://yoursite.com/tags/webstorm/"},{"name":"Adobe Animate CC","slug":"Adobe-Animate-CC","permalink":"http://yoursite.com/tags/Adobe-Animate-CC/"},{"name":"CreateJS","slug":"CreateJS","permalink":"http://yoursite.com/tags/CreateJS/"}]},{"title":"【Egret】Native版本 视频播放器（android）","date":"2016-07-26T02:48:00.000Z","path":"2016/07/26/6522050/","text":"前段时间，领导说客户要一个平板版本的视频播放器，把我们做的一些视频资源放进去，要是本地的；我们部门又没有app开发程序员，正好又前段我在实验egret的app打包功能，就说用egret做(ps：本来想要air做的，后来想用新技术做)，接下来了，然后真正做的时候，发现egret的native版本video功能还没有开发完成，我又不能半啦啦放弃吧，那多丢人，后来晨哥，帮我联系了张宇大神，负责这块的，临时修了点BUG，最后加上设计上的一些规避，算是弄出来一个 native版本的视频播放器，不过是android端的，ios端的native，官方还没支持，还好客户指定三星平板；注意点：①，H5的video标签，打包navite后是没有用的，我才开始写了一版用video标签实现的（因为自带现成的播放控件），后来只好改成用egret的video了； ②，目前native版本的egret的video是没有内置播放控件的，只好写一个；关键在于在移动端上，视频是置于最顶层的，控件没有办法在视频上层，做不了浮动控件的效果，只好设计上规避，最后还好交差了。 ③，目前只支持canvas模式现在我把项目中 关于native视频播放器的代码摘出来，以及apk，希望给那些像我一样，需要做native版本视频播放器，或者想做h5，native两个版本通用的，等等情况，给个参考；毕竟直接用官方目前edn提供的案例，坑比较多；PS：希望egret的大神们，早点把video（H5，native两个版本能通用）搞定，并且能做浮动播放控件。Egret源码+android工程+apk：拿过去能直接运行的Egret引擎版本：3.1.4链接：http://pan.baidu.com/s/1jIwbrM2 密码：v7g1附送wing3的打包APP功能注意点：http://bbs.egret.com/thread-19862-1-1.html","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"},{"name":"视频播放器","slug":"视频播放器","permalink":"http://yoursite.com/tags/视频播放器/"}]},{"title":"Adobe 系列软件通用破解方式（animate cc,Photoshop cc,Flash cc）等","date":"2016-07-26T02:18:00.000Z","path":"2016/07/26/6522051/","text":"破解之前准备工作： ①：安装好 试用版的 Adobe软件 ②：下载好破解软件： amtemu.v0.9.2-painter，下载地址：链接：http://pan.baidu.com/s/1nvNR74H 密码：34w2 破解步骤： ①找到安装好后的Adobe的位置，一般是 C:\\Program Files\\Adobe\\Adobe Animate CC 2015 这个目录，或者选中桌面上的Aobde软件图标，使用右键的“打开文件位置”这个功能； ②然后把 打开 amtemu.v0.9.2-painter.exe 插件； ③ ④ ⑤ ⑥ ⑦这时候破解工作就完成了，打开软件试一下看看，如果不行，那么就按照这个流程再操作几遍，就OK了。","tags":[{"name":"Adobe Animate CC","slug":"Adobe-Animate-CC","permalink":"http://yoursite.com/tags/Adobe-Animate-CC/"},{"name":"破解","slug":"破解","permalink":"http://yoursite.com/tags/破解/"}]},{"title":"as3 操作图片，获取，设置实际像素，扣除透明区域","date":"2016-07-13T03:49:00.000Z","path":"2016/07/13/6522052/","text":"1234567891011121314151617181920212223242526272829 1 private var a:Loader = new Loader(); 2 private function test():void 3 &#123; 4 a.load(new URLRequest(\"assets/冷却液管.png\")); 5 a.contentLoaderInfo.addEventListener(Event.COMPLETE, an); 6 &#125; 7 private function an(evt:Event):void 8 &#123; 9 var hh:BitmapData = new BitmapData(a.content.width,a.content.height,false,0xcccccc);10 var kk:Bitmap = new Bitmap(hh);11 addChild(kk);12 kk.x = 200;13 14 var tu2:Bitmap=Bitmap(a.content as Bitmap);15 // addChild(tu2);16 var yan:uint;17 for (var i:uint = 0; i&lt;tu2.width; i++) 18 &#123;19 for (var j:uint = 0; j&lt;tu2.height; j++) 20 &#123;21 yan = (a.content as Bitmap).bitmapData. getPixel32 (i, j);22 if (yan&lt;=0) // 要抠取的颜色 23 &#123;24 // tu2.bitmapData. setPixel32 (i,j,0xffff0000);25 hh. setPixel (i,j,0xff0000);26 &#125;27 &#125;28 &#125; 29 &#125;","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"}]},{"title":"小游戏实现集贴","date":"2016-07-13T01:45:00.000Z","path":"2016/07/13/6522053/","text":"一、赛车类算法：http://codeincomplete.com/posts/2012/6/23/javascript_racer_v1_straight/","tags":[{"name":"游戏","slug":"游戏","permalink":"http://yoursite.com/tags/游戏/"}]},{"title":"【Egret】里使用video标签","date":"2016-06-20T09:33:00.000Z","path":"2016/06/20/6522054/","text":"egret里使用Html5的Video标签 egret里使用Html5的Video标签的demo: 链接：http://pan.baidu.com/s/1nuNyqRR 密码：x58i//——————————————————————————————————————————————//其他video实现方式参考资料H5中video属性（w3school api）http://www.w3school.com.cn/tags/tag_video.aspH5视频解决方案：http://www.cnblogs.com/wellsoho/p/3498852.htmlhtml5 对视频格式的支持，可以参考这个http://www.w3school.com.cn/html5/html_5_video.asp移动端，使用video代替序列帧动画的设想以及参考http://web.jobbole.com/83540/在canvas里添加videohttp://www.cnblogs.com/iamzhanglei/archive/2011/11/21/2256671.html","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"},{"name":"Video","slug":"Video","permalink":"http://yoursite.com/tags/Video/"}]},{"title":"【Egret】Wing3发布移动APP功能，打包APK流程以及会遇到的问题","date":"2016-06-20T02:19:00.000Z","path":"2016/06/20/6522055/","text":"流程：1.安装好wing 3，然后 插件——Egret项目工具——发布移动APP——Build android native project ![](http://img.blog.csdn.net/20160620103736595?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center) 2.配置发布环境： Android 1.egret engine 点击下载 2.android sdk mac版下载 windows版下载 3.java sdk mac版下载 windows版下载 4.ant 点击下载 5.egret-android-support 点击下载 配置图： 可能会遇到的问题： 1.问题：提示资源名字错误‘ 解决方法：所resource目录下的所有资源，包括：图片，音乐，视频，xml等不能有中文，特殊符号，空格等，必须英文命名： 2.问题：雪碧图的png图片不规范 解决方法：重新导出雪碧图，直到图片格式正确为止； 3.问题：ERROR：SWT folder “” does not exist. Please set ANDROID_SWT to point to the folder containing swt.jar for your platform 如下图错误，原因是没有正确配置JAVA的环境变量 解决方法：按照这个教程的流程走一遍就OK了,http://jingyan.baidu.com/article/f96699bb8b38e0894e3c1bef.html4.问题：d:EgretProjects/apptest/MaintainPlan2_android/MaintainPlan2/proj.android is not a valid project(AndroidManifest.xml not found)出现 如下图所示，提示缺少AndroidManifest.xml这个文件解决方法：新建一个Game项目，然后用这个项目发布一次app，成功后，再发布原理的项目，基本就会成功了。5.问题：本地有视频文件的，发布APP不成功，错误，如下图所示：解决方法：①.项目名字不能带特殊字符，不能是数字开头，如“120-media-video”，这样子不行。②.要用最新版本的Egret Engine和Egret Android Support③.egret engine 3.1.2版本的egret.video不支持webGL模式，要改成canvas模式6.问题：apk界面，固定横屏问题， 解决方法：在wing里修改屏幕横竖模式没有作用，要在发布的时候生成的android项目里改，找到AndroidManifest.xml文件，打开，修改android:screenOrientation=“landscape”，然后用eclipse打开这个android项目，编译生成apk具体参考文章：http://edn.egret.com/cn/docs/page/8207.问题：apk图标替换 解决方法：将项目中的res下和drawable有关的图片换掉就可以了8.问题：apk名字更换解决方法：首先找到对应安卓项目下的AndroidManifest.xml文件，首先确定这个xml的编码格式是 utf-8，不是的话修改成 &lt;?xml version=”1.0” encoding=”utf-8”?&gt;，不然app命名中文会出问 方法①，在AndroidManifest.xml里按照下图所示方法更改，改好之后，然后再用eclipse编译，打包apk就行了。方法 ②点击 插件——Egret项目工具——发布移动APP——Settings，修改里面的名字，如下图，不过wing3.1.1，这个功能好像有BUG，暂时修改这个没有用，方法一管用。9.问题：手动删除了对应的安卓项目，导致IDE在按照已有记录的路径去查找项目时失败。 解决方法：打开wing的项目，打开 egretProperties.json 文件，然后按下图操作","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【转】Eclipse 如何添加Android SDK","date":"2016-06-17T09:28:00.000Z","path":"2016/06/17/6522056/","text":"问题描述：如何为Eclipse编程软件添加Android SDK功能，使其能进行Android开发。解决方法：软件版本：Eclipse 3.7，installer_r18-windows.exe（Android安装包，安装好后会有Android AVD Manager和Android SDK Manager），win7 64位操作系统。首先，我们先点击installer_r18-windows安装包，按照提示将其安装好。这里的安装路径为C:\\Program Files (x86)\\Android。其次，在eclipse中，打开Install安装界面（Help-&gt;Install New Softwares…），如图1所示，在Name和Location编辑框后分别输入ADT和http://dl-ssl.google.com/android/eclipse/，其中Name的取值是随意的，只要不重复，而Location的值是android的服务获取网址，是确定的。 图1 Eclipse的Install界面然后，会出现如图2所示的情况。这时，我们就可以根据自己的需求来安装我们所需的android功能。这里，红色框中的Developer Tools中有两项是必选的，分别为：Android DDMS和Android Development Tools。图2 add repository后的Install界面 选择好相应的功能后，点击Next，然后选择Accept…，点击Finish即可。然后会弹出给对话框，提示正在为Eclipse添加Android功能。（安装的过程中，会提示Warning，选择继续安装，这时因为你还没有为Eclipse关联前面所安装的SDK的文件路径）。安装好后，我们就需要为Eclipse关联SDK的安装路径。在Eclipse中，点击Window-&gt;Preferences，会看到其中添加了Android的配置，按图3所示的操作，然后点击Apply，最后点击OK即可。 图3 为Eclipse关联AndroidPS：由于访问google服务器时得时不得，个人建议先下载android adt的最新版本（一般为解压文件），然后通过上述方法，使用本地离线安装的形式，由eclipse自动解压adt文件来加载插件。http://tools.android-studio.org/index.php/adt-bundle-plugin转载自：http://wlj250237.blog.163.com/blog/static/20997907220141195454865/","tags":[{"name":"Eclipse","slug":"Eclipse","permalink":"http://yoursite.com/tags/Eclipse/"},{"name":"Android SDK","slug":"Android-SDK","permalink":"http://yoursite.com/tags/Android-SDK/"}]},{"title":"WebStorm下载，破解，汉化，debug调试，以及会debug会出现的问题","date":"2016-06-16T02:03:00.000Z","path":"2016/06/16/6522057/","text":"### 一 、webstorm软件下载，破解1、WebStorm 10下载地址：http://download.jetbrains.8686c.com/webstorm/WebStorm-10.0.5.exe破解方式：User or company Name:EMBRACE===== LICENSE KEY=====24718-1204201000001h6wzKLpfo3gmjJ8xoTPw5mQvYYA8vwka9tH!vibaUKS4FIDIkUfy!!f3C”rQCIRbShpSlDcFT1xmJi5h0yQS6===== LICENSE END =====2、WebStorm 11下载地址：https://www.jetbrains.com/webstorm/破解方式： 2016.2.2 版本的破解方式： 安装以后，打开软件会弹出一个对话框；选择“license server” 输入：http://114.215.133.70:41017 2016.2.3 版本的破解方式： 目前最新的就是2.3版本，在打开的License Activation窗口中选择“activation code”，在输入框输入下面的注册码43B4A73YYJ-eyJsaWNlbnNlSWQiOiI0M0I0QTczWVlKIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9XSwiaGFzaCI6IjMzOTgyOTkvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-keaxIkRgXPKE4BR/ZTs7s7UkP92LBxRe57HvWamu1EHVXTcV1B4f/KNQIrpOpN6dgpjig5eMVMPmo7yMPl+bmwQ8pTZaCGFuLqCHD1ngo6ywHKIQy0nR249sAUVaCl2wGJwaO4JeOh1opUx8chzSBVRZBMz0/MGyygi7duYAff9JQqfH3p/BhDTNM8eKl6z5tnneZ8ZG5bG1XvqFTqWk4FhGsEWdK7B+He44hPjBxKQl2gmZAodb6g9YxfTHhVRKQY5hQ7KPXNvh3ikerHkoaL5apgsVBZJOTDE2KdYTnGLmqxghFx6L0ofqKI6hMr48ergMyflDk6wLNGWJvYHLWw==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==2017.2.25 激活上面的激活方式到2017-2-25日过期，don’t worry 已经找到新的激活方式。注册时，在打开的License Activation窗口中选择“License server”，在输入框输入下面的网址：http://idea.iteblog.com/key.php点击：Activate即可。===================3、WebStorm 汉化教程能解决汉化后，设置打不开问题的方法：插件下载地址：链接：http://pan.baidu.com/s/1kU723I3 密码：p449使用方法：把resources_cn.jar和setting.asp，两个文件直接复制到 WebStorm 2016.2.3\\lib 目录下，然后设置 Settings——Appearance &amp; Behavior——Appearance，勾选上 Override default fonts by (not recommended): Name:微软雅黑，然后保存，重新ws，就OK了### 二 、配置webStorm可以进行debug1、调试工具：jetbrains ide support 下载地址：链接：http://pan.baidu.com/s/1boEsZ1d 密码：2cwq安装使用教程：http://www.qttc.net/201603471.html2、如果根据教程走完之后，发现出现这个问题：①Built-in HTTP server on custom port 63342 disabled:Cannot start built-in HTTP server on custom port 63342.Please ensure that port is free（or check your firewall settings）and restart WebStom解决方法，依次试用：①关闭防火墙②换一个端口，chrome JB，WebStorm里的63342都改成别的端口号试试三、实现实时预览（live edit）如下图所示，进行设置就行了","tags":[{"name":"webstorm","slug":"webstorm","permalink":"http://yoursite.com/tags/webstorm/"}]},{"title":"【转】JSON和JSONP","date":"2016-06-15T06:06:00.000Z","path":"2016/06/15/6522058/","text":"前言 由于Sencha Touch 2这种开发模式的特性，基本决定了它原生的数据交互行为几乎只能通过AJAX来实现。 当然了，通过调用强大的PhoneGap插件然后打包，你可以实现100%的Socket通讯和本地数据库功能，又或者通过HTML5的WebSocket也可以实现与服务器的通讯和服务端推功能，但这两种方式都有其局限性，前者需要PhoneGap支持，后者要求用户设备必须支持WebSocket，因此都不能算是ST2的原生解决方案，原生的只有AJAX。 说到AJAX就会不可避免的面临两个问题，第一个是AJAX以何种格式来交换数据？第二个是跨域的需求如何解决？这两个问题目前都有不同的解决方案，比如数据可以用自定义字符串或者用XML来描述，跨域可以通过服务器端代理来解决。 但到目前为止最被推崇或者说首选的方案还是用JSON来传数据，靠JSONP来跨域。而这就是本文将要讲述的内容。 JSON(JavaScript Object Notation)和JSONP(JSON with Padding)虽然只有一个字母的差别，但其实他们根本不是一回事儿：JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。我们拿最近比较火的谍战片来打个比方，JSON是地下党们用来书写和交换情报的“暗号”，而JSONP则是把用暗号书写的情报传递给自己同志时使用的接头方式。看到没？一个是描述信息的格式，一个是信息传递双方约定的方法。 既然随便聊聊，那我们就不再采用教条的方式来讲述，而是把关注重心放在帮助开发人员理解是否应当选择使用以及如何使用上。 什么是JSON 前面简单说了一下，JSON是一种基于文本的数据交换方式，或者叫做数据描述格式，你是否该选用他首先肯定要关注它所拥有的优点。 JSON的优点： 1、基于纯文本，跨平台传递极其简单； 2、Javascript原生支持，后台语言几乎全部支持； 3、轻量级数据格式，占用字符数量极少，特别适合互联网传递； 4、可读性较强，虽然比不上XML那么一目了然，但在合理的依次缩进之后还是很容易识别的； 5、容易编写和解析，当然前提是你要知道数据结构； JSON的缺点当然也有，但在作者看来实在是无关紧要的东西，所以不再单独说明。 JSON的格式或者叫规则： JSON能够以非常简单的方式来描述数据结构，XML能做的它都能做，因此在跨平台方面两者完全不分伯仲。 1、JSON只有两种数据类型描述符，大括号{}和方括号[]，其余英文冒号:是映射符，英文逗号,是分隔符，英文双引号””是定义符。 2、大括号{}用来描述一组“不同类型的无序键值对集合”（每个键值对可以理解为OOP的属性描述），方括号[]用来描述一组“相同类型的有序数据集合”（可对应OOP的数组）。 3、上述两种集合中若有多个子项，则通过英文逗号,进行分隔。 4、键值对以英文冒号:进行分隔，并且建议键名都加上英文双引号””，以便于不同语言的解析。 5、JSON内部常用数据类型无非就是字符串、数字、布尔、日期、null 这么几个，字符串必须用双引号引起来，其余的都不用，日期类型比较特殊，这里就不展开讲述了，只是建议如果客户端没有按日期排序功能需求的话，那么把日期时间直接作为字符串传递就好，可以省去很多麻烦。 JSON实例：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// 描述一个人 var person = &#123; \"Name\": \"Bob\", \"Age\": 32, \"Company\": \"IBM\", \"Engineer\": true&#125; // 获取这个人的信息 var personAge = person.Age; // 描述几个人 var members = [ &#123; \"Name\": \"Bob\", \"Age\": 32, \"Company\": \"IBM\", \"Engineer\": true &#125;, &#123; \"Name\": \"John\", \"Age\": 20, \"Company\": \"Oracle\", \"Engineer\": false &#125;, &#123; \"Name\": \"Henry\", \"Age\": 45, \"Company\": \"Microsoft\", \"Engineer\": false &#125;] // 读取其中John的公司名称 var johnsCompany = members[1].Company; // 描述一次会议 var conference = &#123; \"Conference\": \"Future Marketing\", \"Date\": \"2012-6-1\", \"Address\": \"Beijing\", \"Members\": [ &#123; \"Name\": \"Bob\", \"Age\": 32, \"Company\": \"IBM\", \"Engineer\": true &#125;, &#123; \"Name\": \"John\", \"Age\": 20, \"Company\": \"Oracle\", \"Engineer\": false &#125;, &#123; \"Name\": \"Henry\", \"Age\": 45, \"Company\": \"Microsoft\", \"Engineer\": false &#125; ]&#125; // 读取参会者Henry是否工程师 var henryIsAnEngineer = conference.Members[2].Engineer; 关于JSON，就说这么多，更多细节请在开发过程中查阅资料深入学习。 什么是JSONP 先说说JSONP是怎么产生的： 其实网上关于JSONP的讲解有很多，但却千篇一律，而且云里雾里，对于很多刚接触的人来讲理解起来有些困难，小可不才，试着用自己的方式来阐释一下这个问题，看看是否有帮助。 1、一个众所周知的问题，Ajax直接请求普通文件存在跨域无权限访问的问题，甭管你是静态页面、动态网页、web服务、WCF，只要是跨域请求，一律不准； 2、不过我们又发现，Web页面上调用js文件时则不受是否跨域的影响（不仅如此，我们还发现凡是拥有”src”这个属性的标签都拥有跨域的能力，比如、、）； 3、于是可以判断，当前阶段如果想通过纯web端（ActiveX控件、服务端代理、属于未来的HTML5之Websocket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js格式的文件里，供客户端调用和进一步处理； 4、恰巧我们已经知道有一种叫做JSON的纯字符数据格式可以简洁的描述复杂数据，更妙的是JSON还被js原生支持，所以在客户端几乎可以随心所欲的处理这种格式的数据； 5、这样子解决方案就呼之欲出了，web客户端通过与调用脚本一模一样的方式，来调用跨域服务器上动态生成的js格式文件（一般以JSON为后缀），显而易见，服务器之所以要动态生成JSON文件，目的就在于把客户端需要的数据装入进去。 6、客户端在对JSON文件调用成功之后，也就获得了自己所需的数据，剩下的就是按照自己需求进行处理和展现了，这种获取远程数据的方式看起来非常像AJAX，但其实并不一样。 7、为了便于客户端使用数据，逐渐形成了一种非正式传输协议，人们把它称作JSONP，该协议的一个要点就是允许用户传递一个callback参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。 如果对于callback参数如何使用还有些模糊的话，我们后面会有具体的实例来讲解。 JSONP的客户端具体实现： 不管jQuery也好，ExtJs也罢，又或者是其他支持jsonp的框架，他们幕后所做的工作都是一样的，下面我来循序渐进的说明一下jsonp在客户端的实现： 1、我们知道，哪怕跨域js文件中的代码（当然指符合web脚本安全策略的），web页面也是可以无条件执行的。 远程服务器remoteserver.com根目录下有个remote.js文件代码如下：alert(‘我是远程文件’); 本地服务器localserver.com下有个jsonp.html页面代码如下：&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd“&gt;&lt;html xmlns=”http://www.w3.org/1999/xhtml“&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=”text/javascript” src=”http://remoteserver.com/remote.js“&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 毫无疑问，页面将会弹出一个提示窗体，显示跨域调用成功。 2、现在我们在jsonp.html页面定义一个函数，然后在远程remote.js中传入数据进行调用。 jsonp.html页面代码如下：&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd“&gt;&lt;html xmlns=”http://www.w3.org/1999/xhtml“&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=”text/javascript”&gt; var localHandler = function(data){ alert(‘我是本地函数，可以被跨域的remote.js文件调用，远程js带来的数据是：‘ + data.result); }; &lt;/script&gt; &lt;script type=”text/javascript” src=”http://remoteserver.com/remote.js“&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; remote.js文件代码如下：localHandler({“result”:”我是远程js带来的数据”}); 运行之后查看结果，页面成功弹出提示窗口，显示本地函数被跨域的远程js调用成功，并且还接收到了远程js带来的数据。很欣喜，跨域远程获取数据的目的基本实现了，但是又一个问题出现了，我怎么让远程js知道它应该调用的本地函数叫什么名字呢？毕竟是jsonp的服务者都要面对很多服务对象，而这些服务对象各自的本地函数都不相同啊？我们接着往下看。 3、聪明的开发者很容易想到，只要服务端提供的js脚本是动态生成的就行了呗，这样调用者可以传一个参数过去告诉服务端“我想要一段调用XXX函数的js代码，请你返回给我”，于是服务器就可以按照客户端的需求来生成js脚本并响应了。 看jsonp.html页面的代码：&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd“&gt;&lt;html xmlns=”http://www.w3.org/1999/xhtml“&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=”text/javascript”&gt; // 得到航班信息查询结果后的回调函数 var flightHandler = function(data){ alert(‘你查询的航班结果是：票价 ‘ + data.price + ‘ 元，‘ + ‘余票 ‘ + data.tickets + ‘ 张。‘); }; // 提供jsonp服务的url地址（不管是什么类型的地址，最终生成的返回值都是一段javascript代码） var url = “http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998&amp;callback=flightHandler“; // 创建script标签，设置其属性 var script = document.createElement(‘script‘); script.setAttribute(‘src‘, url); // 把script标签加入head，此时调用开始 document.getElementsByTagName(‘head‘)[0].appendChild(script); &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 这次的代码变化比较大，不再直接把远程js文件写死，而是编码实现动态查询，而这也正是jsonp客户端实现的核心部分，本例中的重点也就在于如何完成jsonp调用的全过程。 我们看到调用的url中传递了一个code参数，告诉服务器我要查的是CA1998次航班的信息，而callback参数则告诉服务器，我的本地回调函数叫做flightHandler，所以请把查询结果传入这个函数中进行调用。 OK，服务器很聪明，这个叫做flightResult.aspx的页面生成了一段这样的代码提供给jsonp.html（服务端的实现这里就不演示了，与你选用的语言无关，说到底就是拼接字符串）：flightHandler({ “code”: “CA1998”, “price”: 1780, “tickets”: 5}); 我们看到，传递给flightHandler函数的是一个json，它描述了航班的基本信息。运行一下页面，成功弹出提示窗口，jsonp的执行全过程顺利完成！ 4、到这里为止的话，相信你已经能够理解jsonp的客户端实现原理了吧？剩下的就是如何把代码封装一下，以便于与用户界面交互，从而实现多次和重复调用。 什么？你用的是jQuery，想知道jQuery如何实现jsonp调用？好吧，那我就好人做到底，再给你一段jQuery使用jsonp的代码（我们依然沿用上面那个航班信息查询的例子，假定返回jsonp结果不变）：&lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Transitional//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd“&gt; &lt;html xmlns=”http://www.w3.org/1999/xhtml“ &gt; &lt;head&gt; &lt;title&gt;Untitled Page&lt;/title&gt; &lt;script type=”text/javascript” src=jquery.min.js”&gt;&lt;/script&gt; &lt;script type=”text/javascript”&gt; jQuery(document).ready(function(){ $.ajax({ type: “get“, async: false, url: “http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998“, dataType: “jsonp“, jsonp: “callback“,//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback) jsonpCallback:“flightHandler“,//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写”?”，jQuery会自动为你处理数据 success: function(json){ alert(‘您查询到航班信息：票价： ‘ + json.price + ‘ 元，余票： ‘ + json.tickets + ‘ 张。‘); }, error: function(){ alert(‘fail‘); } }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; 是不是有点奇怪？为什么我这次没有写flightHandler这个函数呢？而且竟然也运行成功了！哈哈，这就是jQuery的功劳了，jquery在处理jsonp类型的ajax时（还是忍不住吐槽，虽然jquery也把jsonp归入了ajax，但其实它们真的不是一回事儿），自动帮你生成回调函数并把数据取出来供success属性方法来调用，是不是很爽呀？ 好啦，写到这里，我已经无力再写下去，又困又累，得赶紧睡觉。朋友们要是看这不错，觉得有启发，给点个“推荐”呗！由于实在比较简单，所以就不再提供demo源码下载了。 没想到上了博客园的头条推荐。看到大家对这篇文章的认可和评论，还是很开心的，这里针对ajax与jsonp的异同再做一些补充说明： 4月20日下午补充** 1、ajax和jsonp这两种技术在调用方式上“看起来”很像，目的也一样，都是请求一个url，然后把服务器返回的数据进行处理，因此jquery和ext等框架都把jsonp作为ajax的一种形式进行了封装； 2、但ajax和jsonp其实本质上是不同的东西。ajax的核心是通过XmlHttpRequest获取非本页内容，而jsonp的核心则是动态添加标签来调用服务器提供的js脚本。 3、所以说，其实ajax与jsonp的区别不在于是否跨域，ajax通过服务端代理一样可以实现跨域，jsonp本身也不排斥同域的数据的获取。 4、还有就是，jsonp是一种方式或者说非强制性协议，如同ajax一样，它也不一定非要用json格式来传递数据，如果你愿意，字符串都行，只不过这样不利于用jsonp提供公开服务。 总而言之，jsonp不是ajax的一个特例，哪怕jquery等巨头把jsonp封装进了ajax，也不能改变这一点！转载自：http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html","tags":[{"name":"JSON","slug":"JSON","permalink":"http://yoursite.com/tags/JSON/"},{"name":"JSONP","slug":"JSONP","permalink":"http://yoursite.com/tags/JSONP/"}]},{"title":"【转】轻应用、Web App、Native App三者分别是什么？","date":"2016-06-15T05:39:00.000Z","path":"2016/06/15/6522059/","text":"一、什么是Native appNative App是一种基于智能手机本地操作系统如IOS、Android、WP并使用原生程式编写运行的第三方应用程序,也叫地app。NativeApp因为位于平台层上方，向下访问和兼容的能力会比较好一些，可以支持在线或离线，消息推送或本地资源访问，摄像拨号功能的调取。其实也就是我们现在使用的基于本地（Andriod\\IOS\\Metro）运行的APP。Native App的优势：1.提供最佳的用户体验，最优质的用户界面，最华丽的交互2.针对不同平台提供不同体验3.可节省带宽成本4.可访问本地资源5.盈利模式明朗Native App的劣势：1.移植到不同平台上比较麻烦2.维持多个版本的成本比较高3.需要通过store或market的确认4.盈利需要与第三方分成其实，只要现在从事移动互联网的CP们，能深深体会到目前原生应用遇到的三大困境：1、虽然用户手机里的NativeAPP数量在增多，但日均启动个数却在减少；2、用户的使用时长不断向高频Native APP集中，加剧了头部效应；3、对于低频和不知名的NativeApp，则面临着更严峻的“分发”和“使用”长尾困境。这三大困境对开发者形成了较大的挑战。其中，大部分低频和不知名Native App在应用商店少人问津，无法到达用户手机。二、什么是Web appWeb无需安装，对设备碎片化的适应能力优于App，它只需要通过XHTML、CSS和JavaScript就可以在任意移动浏览器中执行。随着iPhone带来的WebKit浏览体验升级，使得专为iPhone等有WebKit浏览内核的移动设备开发的Web应用，也有了如App一般流畅的用户体验。（龙哥理解就是一种基于浏览的应用，技术咱就不管了）。Web App的优势：1.开发成本低2.适配多种移动设备成本低3.跨平台和终端4.迭代更新容易5.无需安装成本Web App的劣势：1、WebApp自身能力不全面2、无法调用语音、摄像头、定位等能力，体验比较差；3、用户很难沉淀下来，建立较为稳固的联系。针对Nativeapp 和web app的分析，应该也可以大概理解出什么是轻应用了吧！~一般在这种情况下，就会出来另外的一种概念叫融合（哈哈，这个融合是龙哥瞎编的哟！）。记得，曾经乔布斯老爷子有一次谈到这个问题，他说Web是未来，虽然现阶段Native给了用户更好的体验。如果现在的开发者不有效的利用Web技术，那他就落伍了。但如果过分依赖Web，完全不用Native那也未必就是好事。（轻‍应用出来了，登场了！~掌声响起来！~）三、什么是轻应用？轻应用是无需下载、即搜即用的全功能 App，既有媲美甚至超越native app的用户体验，又具备webapp的可被检索与智能分发的特性，将有效解决优质应用和服务与移动用户需求对接的问题。2013年 8月22日，百度在2013年百度世界大会上宣布推出“轻应用”，可实现无需下载，即搜即用和通过移动搜索智能分发。（注：其它早前360就提出过轻应用概念，更可笑的是当天老周在微博上发了这么一句话：一个认为移动互联网是酒驾的兄弟，一直找不到方向，所以跟在360屁股后面。原谅这个醉汉吧！~至少是否抄袭不是咱关心的事儿，继续捋该捋的！~~~）轻应用的特点：1、破壳检索，智能分发龙哥简单理解就是通过之前应用商店以名称进行检索的方式，现在可以更精确的通过内部内容来匹配搜索，实现长尾搜索。2、无需下载，即搜即用无需安装，节省存储空间，使用方便，简直轻得不能再轻。3、订阅推送，个性提醒帮助用户不搜即得，获得个性化服务。举个简单例子吧：你关注了龙哥‘龙行天下’自媒体，而龙哥自媒体的内容主要是针对移动互联网的，你在关注这些阅读应用自媒体的时候设置条件是移动互联网的新闻时，那龙哥的’龙行天下‘就有可能被推送。4、云端一体，能力增强提供了多种增强能力：LBS、语音输入输出、订阅推送、电话拨打、摄像头调起、分享评论等。总之，针对轻应用来说，就好比web app +native app的另一种解决方案。“轻应用”无需下载、即搜即用，既有类似Native App的用户体验，又具备Web App可被检索与智能分发的特性，可解决优质应用和服务与移动用户需求对接问题，这无疑满足了移动搜索的需求。在这里，龙哥更关注的其实是能不能通过“轻应用”，让我们这些没有预算的苦逼们，让我们那些使用率低的应用，用户无需下载就可以通过长尾搜索到相应应用，破壳精确的到达用户手机。能不能不被那些巨头app压制，形成头部效应。让我们低频的app也能崭露头脚，让我们这些cp们不用看store或market的嘴脸，来一下霸气侧露呢？！~原文转载自：http://chuansong.me/n/157077","tags":[{"name":"轻应用","slug":"轻应用","permalink":"http://yoursite.com/tags/轻应用/"},{"name":"Web App","slug":"Web-App","permalink":"http://yoursite.com/tags/Web-App/"},{"name":"Native App","slug":"Native-App","permalink":"http://yoursite.com/tags/Native-App/"}]},{"title":"【Egret】中tree组件使用案例","date":"2016-05-25T07:59:00.000Z","path":"2016/05/25/6522060/","text":"Egret中tree组件使用案例，包含（文本过多时，自动换行功能） 下面代码结合http://bbs.egret.com/forum.php?mod=viewthread&amp;tid=19028&amp;page=1#pid133680这篇文章，修改exml； private creatTree(): void { var dp: egret.gui.ObjectCollection = new egret.gui.ObjectCollection(); dp.source = { children: [{ dir: true,name: “TreeItem0”,children: [{ name: “TreeItem00大娃娃吾问无为谓\\r呜呜呜呜呜呜dawd” }, { dir: true,name: “TreeItem01”,children: [{ name: “TreeItem010” }] }] }, { dir: true,name: “TreeItem1”,children: [{ name: “TreeItem10” },{ name: “TreeItem11” }] },{ name: “TreeItem2” }] }; //设置数据源的父子关系，这样才会缩进 egret.gui.ObjectCollection.assignParent(dp.source,&quot;children&quot;,&quot;parent&quot;); //创建树 var tree: egret.gui.Tree = new egret.gui.Tree(); tree.labelField = &quot;name&quot;; tree.top = 20; tree.left = 20; tree.right = 20; tree.height = 300; tree.dataProvider = dp; tree.expandItem(dp.getItemAt(0),true); this.addChild(tree); // 还可以通过iconFunction，设置每一项前面显示的小图标： // tree.iconFunction = this.iconFunc; /*呈现项的icon筛选*/ } private iconFunc(item: any): any { if(item.dir) return &quot;tree_icon_dir_png&quot;; else return &quot;tree_icon_file_png&quot;; } 完整的项目案例：https://github.com/arvin0/EgretExamples/tree/master/GUI%20Tree","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"},{"name":"tree","slug":"tree","permalink":"http://yoursite.com/tags/tree/"}]},{"title":"【Egret】里使用iframe标签达到内嵌多个web界面","date":"2016-05-17T09:31:00.000Z","path":"2016/05/17/6522061/","text":"目的：Egret里使用iframe标签达到内嵌多个web界面，模式相当于主swf调用N个子swf的效果； 目前在做项目过程中，在使用iframe的时候，碰到了一些功能需求，以及解决方法如下： 一、.在index.html里添加iframe标签， 在index.html的标签下，添加iframe标签，包括：路径，宽，高，坐标X，Y，是否出现滚动条，等属性； 想要详细了解其意思的话，请阅读 http://www.w3school.com.cn/tags/tag_iframe.asp 有两种方法： 1. .wrapper { width:1104px; height:570px; margin:100px 30px; overflow:hidden; position:relative; } .iframe { width:1024px;height:768px; position:absolute; top:10px; left:50px; } 2. 二、添加标签完成之后，如何让iframe内容跟随主html进行缩放， 方法： 在 style 属性方法里，添加 width:100%;height:100%; 这句代码，就可以达到让iframe内容跟随主html进行缩放的效果；完整的代码如下： 三、解决缩放问题后，如何控制iframe内容刷新，更换不同的链接呢？并且是在egret里进行控制 方法如下： 在 index.html里的标签下，添加 函数，用来根据情况设定 iframe的src（可以考察：http://www.cnblogs.com/fanyf/p/3651523.html） function setPage(bool){ if(bool == false) { var bgm = document.getElementById(‘page1’); var name = “resource/assets/Html/PC/index.html?v=&lt;?=$ver?&gt;”; bgm.src = name; }else { var bgm = document.getElementById(‘page1’); var name = “resource/assets/Html/Mobile/index.html?v=&lt;?=$ver?&gt;”; bgm.src = name; }} 然后在egret代码里对这个函数进行引用，其方法如下： window“setPage”; 到这步，基本功能就完成了； 四、但是有时候想清除iframe的内容，让他为空，隐藏，该怎么做呢？ 方法如下： 需要把iframe的src设为空，页面就不会显示了，不过设为空之后，会出现一个404提示，我目前解决方法是添加一句 bgm.visible = false;不过这方法在chrome里能执行，在ie里没有效果 var bgm = document.getElementById(‘page1’);var name = “ “;bgm.src = name;bgm.visible = false;","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【转】使用VS开发 Node.js指南","date":"2016-05-12T06:15:00.000Z","path":"2016/05/12/6522062/","text":"参考：https://www.visualstudio.com/features/node-js-vs这篇文章主要介绍了使用VS开发 Node.js的方法，主要是使用NTVS（Node.js Toolsfor Visual Studio）来实现，有需要的小伙伴参考下NTVS(Node.jsToolsforVisualStudio)是一款 可以运行在VS2012、VS2013上的一个IDE工具。 使用这个插件对于我们传统.net的开发人员学习node.js无疑是一大福音！NTVS也是开源的，它支持编辑，智能感知，分析，npm，本地与远程调试，以及发布到Azure网站和云服务。NTVS下载地址装之前不用多说 先把node.js的一套东西给装齐了1·安装NTVS下载地址（直接下一步-下一步）https://github.com/Microsoft/nodejstools/releases/tag/v1.2.Alpha下载地址：2.打开VS20133.欣赏一下目录server.js（有没有很熟悉的感觉）本文转自：http://www.jb51.net/article/59509.htm","tags":[{"name":"Visual Studio","slug":"Visual-Studio","permalink":"http://yoursite.com/tags/Visual-Studio/"},{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/tags/Node-js/"}]},{"title":"【Egret】里使用audio标签达到默认播放背景音乐","date":"2016-05-09T11:50:00.000Z","path":"2016/05/09/6522063/","text":"方法一 123456789101112&lt;audio id=\"bgmMusic\" style=\"position:absolute;\" src=\"resource/assets/Sound/load.mp3?v=&lt;?=$ver?&gt;\" autoplay='autoplay' loop=\"loop\"&gt;你的浏览器不支持audio标签。&lt;/audio&gt; function setBgm(play)&#123; var bgm = document.getElementById('bgmMusic'); if(play)&#123; bgm.play(); &#125;else&#123; bgm.pause(); &#125;&#125;setBgm(true); 这段代码，写在egret项目里的index.html文件里，audio标签这句代码，写在body标签下；下面的函数写在script标签里；可以直接在这边操作函数 也可以在egret里通过 window“setBgm” 方法来控制， 方法二 在微信里，有的版本，上面的方法失效了，可以尝试一下下面的方法 //一般情况下，这样就可以自动播放了，但是一些奇葩iPhone机不可以 document.getElementById('media').play(); //必须在微信Weixin JSAPI的WeixinJSBridgeReady才能生效 document.addEventListener(\"WeixinJSBridgeReady\", function () { document.getElementById('media').play() }, false); 用此方法可以参考 http://www.css88.com/archives/6002 HTML 5 Audio属性 autoplay:唯一可选值为autoplay，出现autoplay属性并准确赋值时，音频将会自动播放 controls：唯一可选值为controls，出现controls属性并准确赋值时，音频播放控件将会显示，控件包括：播放、暂停、定位、音量、全屏切换、字幕（如果可用）、音轨（如果可用）。 loop：唯一可选值为loop，出现loop属性并准确赋值时，音频将会循环播放。 preload：可选值有auto(当页面加载后载入整个音频)、meta(当页面加载后只载入元数据)和none(当页面加载后不载入音频) 如果设置了前面的autoplay属性，那么preload将会被忽略。 src：指定音频URL地址，可以是相对的URL也可以是绝对的URL 当然还可以像第2和第3个例子一样，用source标签来指定源。 HTML5的Audio标签使用详解，参考：http://www.5icool.org/a/201306/a1907.html","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【Egret】实现web页面操作PC端本地文件操作","date":"2016-04-15T02:16:00.000Z","path":"2016/04/15/6522064/","text":"Egret 实现web页面操作PC端本地文件操作： http://edn.egret.com/cn/book/page/pid/181 //——————————————————————————————————————————————————————————// 其他html5 操作PC端本地文件的方法参考： js 探索HTML5之本地文件系统API - File System API http://www.cnblogs.com/gbin1/archive/2012/04/13/2446069.html h5 文件操作API https://www.douban.com/note/510320770/ 让ActiveXObject( “Microsoft.XmlDom “)对象在非IE浏览器下显示数据？firefox（火狐） http://blog.csdn.net/lejuo/article/details/11528243","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【转】HTML5 本地存储五种方案","date":"2016-04-15T01:20:00.000Z","path":"2016/04/15/6522065/","text":"1、LocalStorage LocalStorage就是Key-Value的简单键值对存储结构，Web Storage除了localStorage的持久性存储外，还 有针对本次回话的sessionStorage方式，一般情况下localStorage较为常用，示例代码如下： Chrome中 的存储方式是以sqlite的数据库文件形式存储。存在C:\\Users\\Username\\AppData\\Local \\Google\\Chrome\\User Data\\Default\\Local Storage 中 function save(dataModel){ var value = dataModel.serialize(); window.localStorage[‘DataModel’] = value; window.localStorage[‘DataCount’] = dataModel.size(); console.log(dataModel.size() + ‘ datas are saved’); return value; } function restore(dataModel){ var value = window.localStorage[‘DataModel’]; if(value){ dataModel.deserialize(value); console.log(window.localStorage[‘DataCount’] + ‘ datas are restored’); return value; } return ‘’; } function clear(){ if(window.localStorage[‘DataModel’]){ console.log(window.localStorage[‘DataCount’] + ‘ datas are cleared’); delete window.localStorage[‘DataModel’]; delete window.localStorage[‘DataCount’]; } } ** 2、Cookie** 这种存储方式存储内容很有限，只适合做简单信息存储，存取接口设计得极其反人类，举例如下： function getCookieValue(name) { if (document.cookie.length &gt; 0) { var start = document.cookie.indexOf(name + “=”); if (start !== -1) { start = start + name.length + 1; var end = document.cookie.indexOf(“;”, start); if (end === -1){ end = document.cookie.length; } return unescape(document.cookie.substring(start, end)); } } return ‘’; } function save(dataModel) { var value = dataModel.serialize(); document.cookie = ‘DataModel=’ + escape(value); document.cookie = ‘DataCount=’ + dataModel.size(); console.log(dataModel.size() + ‘ datas are saved’); return value; } 3、Indexed Database API IndexedDB可以存储结构对象，可构建key和index的索引方式查找，目前各浏览器的已经逐渐支持 IndexedDB的存储方式，其使用代码如下，需注意IndexedDB的很多操作接口类似NodeJS的异步回调方式， 特别是查询时连cursor的continue都是异步再次回调onsuccess函数的操作方式，因此和NodeJS一样使用上不如同步的代码容易。 function save(dataModel){ var tx = db.transaction(“meters”, “readwrite”); var store = tx.objectStore(“meters”); dataModel.each(function(data){ store.put({ id: data.getId(), tag: data.getTag(), name: data.getName(), meterValue: data.a(‘meter.value’), meterAngle: data.a(‘meter.angle’), p3: data.p3(), r3: data.r3(), s3: data.s3() }); }); tx.oncomplete = function() { console.log(dataModel.size() + ‘ datas are saved’); }; return dataModel.serialize(); } 4、FileSystem API FileSystem API相当于操作本地文件的存储方式，目前支持浏览器不多，其接口标准也在发展制定变化中 ，因此也可以动态生成图片到本地文件，然后通过 filesystem:http:* 的URL方式直接赋值给img的 html元素的src访问。 function save(dataModel) { var value = dataModel.serialize(); fs.root.getFile(‘meters.txt’, {create: true}, function (fileEntry) { console.log(fileEntry.toURL()); fileEntry.createWriter(function (fileWriter) { fileWriter.onwriteend = function () { console.log(dataModel.size() + ‘ datas are saved’); }; var blob = new Blob([value], {type: ‘text/plain’}); fileWriter.write(blob); }); }); return value; } 5、Application Cache window.applicationCache 对象是对浏览器的应用缓存的编程访问方式。其 status 属性可用于查看缓存的当前状态： var appCache = window.applicationCache; switch (appCache.status) { case appCache.UNCACHED: // UNCACHED == 0 return ‘UNCACHED’; break; case appCache.IDLE: // IDLE == 1 return ‘IDLE’; break; case appCache.CHECKING: // CHECKING == 2 return ‘CHECKING’; break; case appCache.DOWNLOADING: // DOWNLOADING == 3 return ‘DOWNLOADING’; break; case appCache.UPDATEREADY: // UPDATEREADY == 4 return ‘UPDATEREADY’; break; case appCache.OBSOLETE: // OBSOLETE == 5 return ‘OBSOLETE’; break; default: return ‘UKNOWN CACHE STATUS’; break; };","tags":[{"name":"HTML5","slug":"HTML5","permalink":"http://yoursite.com/tags/HTML5/"},{"name":"本地存储","slug":"本地存储","permalink":"http://yoursite.com/tags/本地存储/"}]},{"title":"【转】JavaScript中使用ActiveXObject操作本地文件夹的方法","date":"2016-03-30T05:22:00.000Z","path":"2016/03/30/6522066/","text":"原文链接：http://www.jb51.net/article/48538.htm","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"ActiveXObject","slug":"ActiveXObject","permalink":"http://yoursite.com/tags/ActiveXObject/"}]},{"title":"【Egret】3D 使用中的一些疑难解决技巧！","date":"2016-03-23T02:58:00.000Z","path":"2016/03/23/6522067/","text":"1.问题：目前Egret3D中，发布到手机后无法响应鼠标事件 解决方法：①打开发布后的libs/module/egret/egret.web.min.js，查找e.stopPropagation()，删掉 ②要注意 不能用MOUSE_CLICK，在移动设备上必须用TOUCH_END","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【Egret】2D 使用中的一些疑难解决技巧！","date":"2016-03-23T02:55:00.000Z","path":"2016/03/23/6522068/","text":"1.问题：声音在ios上无法播放 解决方法：①首先需要预加载一个声音 ②然后目前只有点击之后才能播放声音，不能默认播放 2.问题：滚动条问题 解决方法：①js原生方法：overflow:auto ②egret的scroller组件，但是这个组件有问题；用代码new的话，就会一松手就 会弹回初始位置；必须在eui编辑器手动添加，才不会有这个BUG； 3.问题：获取egret的canvas标签 解决方法： let containerList = document.querySelectorAll(“.egret-player”); let length = containerList.length; for (let i = 0; i &lt; length; i++) { let container = containerList[i]; let player = container[“egret-player”]; player[“canvas”] //这个就是canvas } 一般情况下这个查询结果的列表长度就是1，你只取默认的canvas就不用遍历，直接取第一个container 这个是源码里的获取方式，拿不到只有一种可能，写错了哪个属性名。 还有就是在egret初始化结束后再去拿，太早就是空的。等你的Main入口类被调用了就可以拿了 document.querySelectorAll(“.egret-player”)[0][“egret-player”][“canvas”] 直接在console输入这个打印","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"as3中强制垃圾回收","date":"2016-03-14T08:12:00.000Z","path":"2016/03/14/6522069/","text":"12345678910 private function doClearance():void &#123; // trace(\"clear\"); try&#123; new LocalConnection().connect(\"foo\"); new LocalConnection().connect(\"foo\"); &#125;catch(error : Error)&#123; &#125; &#125;","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"垃圾回收","slug":"垃圾回收","permalink":"http://yoursite.com/tags/垃圾回收/"}]},{"title":"as3中textField输入字符时，一次性过长后自动换行","date":"2016-03-14T08:12:00.000Z","path":"2016/03/14/6522070/","text":"1234567891011121314151617 1 txt_show.text = showStr; 2 3 var str:String = txt_show.text; 4 var strlen:int = str.length; 5 var len:int = 0; 6 for (var i:int = 0; i &lt; strlen; i++) 7 &#123; 8 len += txt_show.textField.getCharBoundaries(i).width; 9 if(len &gt; txt_show.textField.width - 5)10 &#123;11 var temp:String = str.charAt(i - 1) + \"\\n\";12 txt_show.textField.replaceText(i - 1, i, temp);13 len = 0;14 &#125;15 &#125;16 17 txt_show.textField.width = 210;","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"}]},{"title":"as3中去掉字符串两边的空格，换行符","date":"2016-03-14T08:12:00.000Z","path":"2016/03/14/6522071/","text":"as3 去掉字符串两边的空格，换行符，方法一 ActionScript Code 1234567891011121314151617181920 public function trim(char:String):String{ if(char == null){ return null; } return rtrim(ltrim(char)); } private function ltrim(char:String):String{ if(char == null){ return null; } var pattern:RegExp = /^\\s/; return char.replace(pattern,“”); } private function rtrim(char:String):String{ if(char == null){ return null; } var pattern:RegExp = /\\s$/; return char.replace(pattern,“”); } 去除掉空格，方法二 ActionScript Code 1 var str:String = txt_show.text.replace(/([ ]{1})/g,“”);","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"垃圾回收","slug":"垃圾回收","permalink":"http://yoursite.com/tags/垃圾回收/"}]},{"title":"【转】Flash字体嵌入方法","date":"2016-03-14T08:12:00.000Z","path":"2016/03/14/6522072/","text":"原文链接：http://www.cnblogs.com/ddw1997/archive/2011/11/13/2247546.html一、如果使用flash cs5.51.先新建一个字体fla文件，然后是文本-字体嵌入，如图然后发布swf2.导入swf，并使用字体var fontClass:Class = _loader.contentLoaderInfo.applicationDomain.getDefinition(“FontX”) as Class;Font.registerFont(fontClass);var format:TextFormat = new TextFormat();var tf:TextField = new TextField();//var fontArr:Array= Font.enumerateFonts(false);var myFont:Font = new MyFont() as Font; format.font = myFont.fontName;tf.defaultTextFormat = format;tf.embedFonts = true; tf.text = ‘ABCDefg123456,.’;二、如果使用as项目1.首先还是建立font.swfpackage{import flash.display.Sprite;import flash.text.Font;import flash.text.TextField;import flash.text.TextFormat;public class fonts extends Sprite{ [Embed(source=”font1.ttf”,fontName=”name1”,embedAsCFF=”false”,unicodeRange=”U+0020,U+0041-005A,U+0020,U+0061-007A,U+0030-0039,U+002E,U+0020-002F,U+003A-0040,U+005B-0060,U+007B-007E,U+0020-002F,U+0030-0039,U+003A-0040,U+0041-005A,U+005B-0060,U+0061-007A,U+007B-007E”)] public var FontClass1:Class; [Embed(source=”font2.ttf”,fontFamily=”Franklin Gothic Book”,embedAsCFF=”false”,unicodeRange=”U+0020,U+0041-005A,U+0020,U+0061-007A,U+0030-0039,U+002E,U+0020-002F,U+003A-0040,U+005B-0060,U+007B-007E,U+0020-002F,U+0030-0039,U+003A-0040,U+0041-005A,U+005B-0060,U+0061-007A,U+007B-007E”)] public var FontClass2:Class; public function fonts() { var fontArr:Array= Font.enumerateFonts(false); //Font.registerFont(myFont); for each(var font:Font in fontArr) trace(font.fontName, font.fontType); }}} source 指定要嵌入的字体文件路径。还可以用 systemFont指定一个系统中安装的字体。这样的话就可以不需要 source参数了。 fontName 这个实际上就是 fontFamily 的别名。 embedAsCFF 如果不提供这个参数，默认就是true。所以，如果系统你嵌入的字体用于TextField，一定要将其设置为false。 unicodeRange 要嵌入的文本的范围。见下表：嵌入字体范围： 大写字符 U+0020,U+0041-U+005A 小写字符 U+0020,U+0061-U+007A 数字 U+0030-U+0039,U+002E 标点符号 U+0020-U+002F,U+003A-U+0040,U+005B-U+0060,U+007B-U+007E 基本拉丁字符 U+0020-U+002F, U+0030-U+0039, U+003A-U+0040, U+0041-U+005A, U+005B-U+0060, U+0061-U+007A, U+007B-U+007E当然，还有中文范围等等，详细的可以找到你本机的 FlexSDK/frameworks/flash-unicode-table.xml2.导入swf，使用字体package{import flash.display.Sprite;import flash.display.Loader;import flash.events.Event;import flash.events.IOErrorEvent;import flash.events.SecurityErrorEvent;import flash.system.LoaderContext;import flash.system.ApplicationDomain;import flash.system.SecurityDomain;import flash.net.URLRequest;import flash.text.Font;import flash.text.TextFormat;import flash.text.TextField;import flash.utils.setTimeout;public class LoadEmbedFont extends Sprite{ public function LoadEmbedFont() { _loader = new Loader(); _loader.contentLoaderInfo.addEventListener(Event.COMPLETE, handler_comp); _loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, handler_error); _loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, handler_error); var loaderContext:LoaderContext = new LoaderContext(true ,new ApplicationDomain(null)); //如果自己又被父SWF载入了一次，那么应用程序域就必须设置成当前域或者是子域才行 //var loaderContext:LoaderContext = new LoaderContext(true, ApplicationDomain.currentDomain); //如果载入的字体swf与发起载入的swf不在一个网域，就需要将安全域设定为当前安全域 //var loaderContext:LoaderContext = new LoaderContext(true, ApplicationDomain.currentDomain, SecurityDomain.currentDomain); _loader.load(new URLRequest(‘myfont.swf’), loaderContext); //_loader.load(new URLRequest(‘http://10.0.0.5:5300/swf/assets/ui/fonts_local.swf‘), loaderContext); } private var _loader:Loader; private var fontObj:Font private function handler_comp($evt:Event):void { trace(‘载入字体成功’); var font: = loader.content; Font.registerFont(font.FontClass1); Font.registerFont(font.FontClass2); //也可以使用这种方式获取嵌入的字体类，类的名称是“源文件类名嵌入目标变量名称” //var fontClass:Class = _loader.contentLoaderInfo.applicationDomain.getDefinition(“fonts_FontClass1”) as Class;// trace(‘class:’,fontClass);// fontObj = new fontClass();// Font.registerFont(_fontClass); showTF(); } private function handler_error($evt:Event):void { trace($evt.toString()); } private function showTF():void { var fontArr:Array= Font.enumerateFonts(false); trace(‘AppDomain font list:’, fontArr.length); for each(var font:Font in fontArr) { trace(font.fontName, font.fontType, font.fontStyle); var tf:TextField = new TextField(); tf.name = ‘tf_’+font.fontName; tf.width = 200; var format:TextFormat = new TextFormat(); //format.font = fontObj.fontName format.font = font.fontName; tf.defaultTextFormat = format; tf.embedFonts = true; tf.text = ‘ABCDefg123456,.’; tf.x = Math.random()this.stage.stageWidth; tf.y = Math.random()*this.stage.stageHeight; addChild(tf); trace(‘tf:’, tf.name, tf.text, tf.x, __tf.y); } }}} 3.查看字体import flash.text.Font;var allFonts:Array = Font.enumerateFonts(true);allFonts.sortOn(“fontName”, Array.CASEINSENSITIVE);for(var i:uint=0;i","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"Flash","slug":"Flash","permalink":"http://yoursite.com/tags/Flash/"}]},{"title":"【转】ActionScript，Flash，Flash/Flex Builder，FlashPlayer，AIR，swf，swc，swz之间的区别","date":"2016-03-14T08:11:00.000Z","path":"2016/03/14/6522079/","text":"原文链接：http://zengrong.net/post/1295.htm### ActionScriptActionScript通常简称为AS，它是Flash平台的语言。AS编写的程序，最终可以编译成SWF、SWC。SWF就是我们常说的Flash动画。但是现在SWF已经不仅仅是动画，而是RIA的载体。ActionScript有3个版本，分别是1.0版（AS1），2.0版（AS2）和3.0版（AS3）。只有Flash Player9及以上播放器才支持AS3编译的SWF。这三个版本的差别非常大，现在最流行的版本是AS3。### Flex与MXML因为在开发RIA的时候，需要很多常用的功能，例如控件（Button,ComboBox,List……）、布局（VGroup、VBox……）等等……Adobe就开发了一套官方的框架集来实现这些功能，这套框架集就叫做Flex。为了方便程序员快速编写RIA程序界面，Adobe又实现了一种基于XML语法的语言MXML，这套语言很像HTML，可以与AS混用，MXML最终也是编译成SWF或SWC。Flex框架就是使用AS3与MXML两种语言写成的。但说白了，MXML 外加实现了MXML语法，如果你有兴趣，也可以自己实现这些。Flash和Flex，都是用AS编写，使用swf体现。### Flash现在Adobe已经将Flash其定义为一个平台（Flash Plantform），包括了Flash IDE、FlashBuilder、AIR、FlashPlayer以及更多。但我们一般讲Flash，有两个意思，一个是指Flash动画（也就是网页上扩展名为swf的动画），另一个就是FlashIDE。Flash（IDE）从4.0开始进入中国，前期一直在网页动画方面告诉发展，多被用来做网页小广告（让你CPU100%的罪魁祸首之一）和MV（showgood三国系列、小小系列、大学自习室……曾经风靡一时啊）。那时的“闪客”，主要是做动画，即使涉及到编程，也大多是用当时的AS1.0（后来FlashMX2004升级为AS2.0）写一点stop、gotoAndPlay之类的东东了。Flash（IDE）发展到8.0版本以后，才开始大量用于编程，当时比较流行的就是“Flash留言本”等等。相关历史我做了一张图来表示，括号里的数字是年份。### Flash Builder/Flex BuilderAS发展到3.0之后，由于其语法和JAVA比较像，再加上增强的性能与强类型，可以完全脱离FLA文件，使用纯文本编码，受到了许多其他程序员（尤其是JAVA程序员）的青睐。由此得以高速发展，用AS开发程序的人也越来越多。AS在视频网站、游戏行业发展迅速。但是，FlashIDE虽然是一个很好的动画制作工具，却不是一个好的开发工具。于是，Adobe又发布了FlexBuilder，一个基于Eclipse的IDE，并发布了Flex SDK，后来又开源了。有了免费的编译器，Flex得以快速发展。用FlexBuilder也可以开发纯AS项目（即所有的文件都是as文件，不包含MXML，也不包含FLA）。一个真正的程序猿，应该更愿意使用这种方式吧？FlexBuilder从4.0开始，被Adobe改名为Flash Builder。Flash Builder和Flash IDE不应该放在一起比较，它们不是一类软件。如果一定要比较一下的话，那么就是FlashIDE比较偏重于设计一点，用它做动画比较方便，当然也可以用它编写AS3程序。用FlashIDE编写的程序，会有一个FLA源文件，可能还包含多个as文件。FlashBuilder偏重于程序，用它可以开发MXML（也就是Flex）项目。也可以用它编写纯AS项目。用FlashBuilder编写的项目，都是纯文本文件（.as或者.mxml）。 对于程序流，当然偏爱FlashBuilder，而设计流比较偏爱Flash IDE。当然，IDE并非只有Adobe官方的东西，FlashDevelop就是个免费的IDE。如果你愿意，用记事本做编辑器也没什么不好（比如说zrong就正在尝试VIM），因为SDK和编译器都是免费的。### Flash Playerswf动画需要在网页上显示出来，就需要安装Flash Player。Flash Player的不同版本，其实与FlashIDE也有一定的对应关系（从上图也能看出来）。但到了AS3时代后，这个对应关系就不那么明显了。Flash Player9是能支持AS3 的最低版本（其实前面还有一个Flash Player 8.5，只是没普及就升级到9了），后面的FlashPlayer 都能支持AS3了。关于Flash Player，我写过一篇有史以来关于FlashPlayer的最详细说明，看这个就很清楚了。### AIRFlash Player再强大，也是运行在浏览器中，受浏览器约束。为了摆脱浏览器，Adobe又出奇招，发布了AIR。AIR其实就是一个Runtime，你可以把它理解成JVM。有了AIR，就可以用AS3开发桌面软件，而且开发出的软件可跨平台运行（这和JAVA的一次编译，随处运行不是如出一辙么！)。目前国内的AIR应用主要集中在网站的客户端方面，例如新浪微博AIR客户端等。### SWF SWC SWZSWFswf是我们见到的最多的Flash平台文件了。是的，它就是Flash平台的最终表现形式。前面说到了，无论是Flex、Flash还是纯AS3，最终编译出来的文件都是swf格式，浏览器中的FlashPlayer插件和独立的FlashPlayer，也只能“打开”swf文件进行播放。前面说到的AIR，它的本质也就是运行时+swf而已。其实并非所有的swf都能直接播放的。swf有3种：1. 程序SWF(application swf)：可以直接在flash player中运行的swf；2. 库SWF（library swf）：swc文件中的library.swf；3. 模块SWF（module swf）：Flex Module产生的swf文件。最终用户碰到的绝大多数都是“程序SWF”，而程序猿们碰到后面两种SWF的可能性就比较大。SWCSWC是一种库文件，通常用来发布非开源的类。程序猿们将源码编译成SWC文件，并发布API文档，我们就可以使用这些SWC提供的类库进行自己的开发。SWC并不是运行时共享的，而是在编译的时候直接加入了程序SWF中。最终的程序SWF可以脱离SWC运行。SWC本质就是一个zip文档，其中包含一个library.swf文件和一个用于描述的xml文件，你可以用zip管理器打开它查看。SWZ你可能会发现，从TLF出现以来，Flex SDK中多了一个flashx包，这个包中的功能，就是用SWZ实现的。SWZ是在运行时共享的库，你可以将其看作一个可以放在外部的SWC*。而且SWZ的共享是平台级别的（MoudleSWF的共享是浏览器级别），存在于操作系统缓存中（ModuleSWF的存在浏览器缓存），只要下载过一次SWZ，你的操作系统中所有用到这些SWZ中的地方（无论是IE、FF、Chrome还是AIR）都不用重新下载。对于程序猿，这里的关于SWC和SWZ的信息肯定是不够的，所以建议看一下smithfox的swf swc swzRSLs ant，本文的这个部分也是参照它写成的。全文完","tags":[{"name":"Flash","slug":"Flash","permalink":"http://yoursite.com/tags/Flash/"},{"name":"ActionScript","slug":"ActionScript","permalink":"http://yoursite.com/tags/ActionScript/"},{"name":"swf","slug":"swf","permalink":"http://yoursite.com/tags/swf/"},{"name":"Flash/Flex Builder","slug":"Flash-Flex-Builder","permalink":"http://yoursite.com/tags/Flash-Flex-Builder/"},{"name":"FlashPlayer","slug":"FlashPlayer","permalink":"http://yoursite.com/tags/FlashPlayer/"},{"name":"AIR","slug":"AIR","permalink":"http://yoursite.com/tags/AIR/"},{"name":"swc","slug":"swc","permalink":"http://yoursite.com/tags/swc/"},{"name":"swz","slug":"swz","permalink":"http://yoursite.com/tags/swz/"}]},{"title":"【转】FLEX中SharedObject介绍及应用","date":"2016-03-14T08:11:00.000Z","path":"2016/03/14/6522074/","text":"ShareObject介绍： 1 ShareObject,顾名思义共享对象,而通常意义上的共享，从B/S结构上来讲,无非是客户端（浏览器端）的共享和服务器端的共享了,不错,ShareObject刚好份演了这两种角色。而且ShareObject也是按此进行了两种分类,一类是LSO——Local Share Object（本地共享对象）其实类似于cookie，而另一种RSO——Remote Share Object(远程共享对象) 我感觉比较类似于JSP中的Application对象，但好象比Application更强大。 2.存储位置 以 Windows为例，目录为 C:\\Documents and Settings[ username ] \\Application Data\\Macromedia\\Flash Player\\#SharedObjects\\ [ random character directory name ] ， 在Mac OS X 上， 目录为 /Users/[ username ] /Library/Preferences/Macromedia/Flash Player/#SharedObject/ [ random character directory name ]。随机字符目录命名是为了安全考虑 下面我分别用实例代码来说两者的用法和用途： 一：LSO（本地共享对象） LSO的用法比较简单，和我们平常操作Cookie大同小异： 1．得到一个共享对象： var so:SharedObject=SharedObject.getLocal(“mydata”,”/“); 2．往共享对象里存入值： var user:Object=new Object(); user.userName=userName.text; user.passWord=passWord.text; user.isSaveLogin=(remember.selected==true?1:0); so.data.user=user; 3．清除共享对象里的值： var so:SharedObject=SharedObject.getLocal(“mydata”,”/“); if(so.data.user!=null){ so.data.user=null; } 4．读取共享对象里的值： var so:SharedObject=SharedObject.getLocal(“mydata”,”/“); if(so.data.user!=null){ userName.text=so.data.user.userName; passWord.text=so.data.user.passWord; if(so.data.user.isSaveLogin.toString()==&quot;1&quot;){ remember.selected=true; } 二：RSO（远程共享对象）： RSO是服务器端的共享对象，服务器端的数据共享可以实现多个客户端数据共享，在这里服务器我采用Flash Media Server3，FMS的使用非常简便，你只要在安装目录下找到Applications目录，并在其下新建一个子目录就可以成为你的工程或项目了。关于FMS的使用大家可以参考相关文章，本文不做介绍：利用FMS和RSO我们可以实现非常多的功能，诸如，聊天室，联机游戏，视频会议，在线视频录制和视频聊天。。。。。。 在这里我用一个简单的聊天室实例为例稍做讲解： &lt;?xml version=”1.0” encoding=”utf-8”?&gt; &lt;![CDATA[ import flash.events.SyncEvent; import flash.events.NetStatusEvent; import flash.events.MouseEvent; import flash.net.SharedObject; import flash.net.NetConnection; private var text_so:SharedObject; private var nc:NetConnection; private var rtmpGo:String; private var good:Boolean; public function TextSO ():void { button.label=&quot;Send&quot;; button.addEventListener (MouseEvent.CLICK,sendMsg);//为发送按钮添加发送事件 rtmpGo = &quot;rtmp://localhost/basicSO&quot;;//这里设置FMS服务器的连接地址,basicSO即为, //FMS安装目录下Applications下自己手动新建的一个文件夹名称,也是FMS的工程名,就是这么简洁,不可意议 nc = new NetConnection( );//产生一个连接对象 nc.connect (rtmpGo);//连接到上面的地址 nc.addEventListener (NetStatusEvent.NET_STATUS,doSO);//加入连接的监听事件,以便根据连接返回的状态做相应处理 } private function doSO (e:NetStatusEvent):void { good=e.info.code == &quot;NetConnection.Connect.Success&quot;;//判断是否为连接成功状态 //连接返回的状态有好几种,大家可以参看FMS的文档,很详尽 if (good)//如果连接成轼,执行如下操作 { text_so=SharedObject.getRemote(&quot;test&quot;,nc.uri,false);//得到远程共享对象,false属性是设置共享的数据为非持久化的, //即重启服务器后,先前的数据不会保存 text_so.connect (nc); text_so.addEventListener (SyncEvent.SYNC,checkSO); //为共享对象添加异步事件,这也是服务器同步处理多客户端最关键的地方, //一个客户端进行了什么操作,其它客户端也会有相应的变化,就是通过此事件来完成的 } } private function checkSO (e:SyncEvent):void { for (var chng:uint; chng&lt;e.changeList.length; chng++) { switch (e.changeList[chng].code) { case &quot;clear&quot; : break; case &quot;success&quot; : trace (text_so.data.msg); break; case &quot;change&quot; ://一个客户端改变数据会更新所有客户端 textArea.htmlText+=text_so.data.msg + &quot;\\n&quot;; break; } } } private function sendMsg (e:MouseEvent):void { text_so.setProperty (&quot;msg&quot;,textInput.text);//将新的信息存入共享对象 textArea.htmlText+=text_so.data.msg + &quot;\\n&quot;;//更新客户端的信息列表 } ]]&gt; &lt;/mx:Script&gt; &lt;mx:VBox&gt; &lt;mx:TextArea id=&quot;textArea&quot; width=&quot;200&quot; height=&quot;200&quot;/&gt;//信息列表框 &lt;mx:TextInput id=&quot;textInput&quot;/&gt;//消息输入框 &lt;mx:Button id=&quot;button&quot; /&gt;//发送按钮 &lt;/mx:VBox&gt;","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"ActionScript","slug":"ActionScript","permalink":"http://yoursite.com/tags/ActionScript/"}]},{"title":"【转】关于swf安全沙箱冲突：不能被本地访问","date":"2016-03-14T08:11:00.000Z","path":"2016/03/14/6522075/","text":"错误提示：SWF 文件不能被本地访问 不能访问本地只有仅限于文件系统的 SWF 文件和可信的本地 SWF 文件可以访问本地资源 错误信息：SecurityError:Error #2148: SWF 文件 D:\\demo\\demo.swf 不能访问本地资源D:\\demo\\demo\\bin-debug\\textLayout_4.0.0.10485.swf。只有仅限于文件系统的 SWF文件和可信的本地 SWF 文件可以访问本地资源。 解决方法 ： 第一种办法： 在Flash插件上右键-&gt;全局设置-&gt;高级-&gt;开发人员工具-&gt;受信任的位置设置-&gt;添加，然后添加你的文件或者文件夹即可。 说明：在本地测试期间，FlashPlayer 可以显示阻止应用程序正常运行的安全警告。您可以使用“受信任位置设置”面板将您自己的 SWF 或 FLV内容指定为可信内容，从而解决这一问题。您可以将个别文件的路径指定为可信路径，或者指定文件夹为可信文件夹。可信文件夹中的所有文件及其任何子文件夹也会受信任。使用此选项卡可指定您计算机上包含您信任的SWF 或 FLV 内容的位置。可信内容不遵循阻止内容访问 Internet和本地计算机文件系统的安全规则。 第二种方法: 在C:\\WINDOWS\\system32\\Macromed\\Flash\\FlashPlayerTrust目录下添加一个文件，比如：1.txt（文件名可任意起），文件内容为项目的路径，当然也可以设置为“D:\\” 说明： 为了让你的Flash在用户硬盘中拥有同时访问网络和本地的能力，你必须在用户计算机的FlashPlayerTrust目录中为你的Flash添加权限. FlashPlayerTrust 配置文件。这些是列出受信任路径的简单文本文件。这些文件由可执行的安装程序创建。当安装程序将 SWF 安装到用户的计算机时,它能够安装信任的配置文件并指定 SWF 是受信任的。 第三种方法： flex项目上点右键–&gt;属性–&gt;Flex编译器–&gt;附加的编译器参数 加上 “ -use-network=false ” 说明：这样虽然也能解决问题。但是swf就无法访问网络资源了。所以不建议使用。","tags":[{"name":"swf","slug":"swf","permalink":"http://yoursite.com/tags/swf/"},{"name":"安全沙箱","slug":"安全沙箱","permalink":"http://yoursite.com/tags/安全沙箱/"}]},{"title":"【转】大量实用工具类、开源包","date":"2016-03-14T08:10:00.000Z","path":"2016/03/14/6522090/","text":"原文链接：http://bbs.9ria.com/thread-248066-1-2.htmlActionScriptUtilityClass Tweener** TweeningPlatform tween24 – 一位日本人写的tween库 Tweener Audio** as3soundeditorlib ASAudio – 小巧的声音处理库 SoundAS – 实用的声音管理库 Graphic** as3-bitmap-mosaic-class graffiti Volumetrics – 一款实时光照效果库 Component** Minimalcomps – 小巧的纯AS组件库 Skinnable Minimal Components –第三方让MinimalComps支持皮肤的实现 AS3-Bloom – 轻量级用户界面 RazorComponents –一套支持皮肤的纯AS组件库 Libraui – 一款简易的flash UI组件 Span.as – 一个旋转loading样式组件 as3-date-range-picker – 一款日期选择控件 Network** Actionscript-oauth2 – 一款针对OAuth2认证服务的支持库 Quiero – URLRequests made awesomein AS3 Other CollisionDetectionKit Collision-AS3 – 一款支持Quadtree和SpatialHash Grid的碰撞检测库 Casalib doomsdayconsole TransformTool XMLSerializer – 可以将xml和as3object互相转换 FastStats – 支持Flash NativeDisplayList, ND2D 和 Starling 的 Benchmark 数据显示工具 AS3-Signals – 代替AS3原生事件的新实现库 Lua-Alchemy – Port of the Luaprogramming language for ActionScript using Alchemy fzip – 读取，修改，创建标准zip文件 SwfExplorer – 分析SWF中的元件链接名 AS3-LocaleManager – 语言管理器 AS3-VirtualKeyboard – as3实现的虚拟键盘 baseoneaslib – 包含一套Astar寻路类的一套工具库 flasheff – flash特效库 Flash PageFilp – 一款翻页效果库 PageFilp – 同上 As3Pathfinder – a non A* Grid Pathfinding algorythm Engine* Game as3isolib as3isolib_starling Ash – an entity framework forActionscript games Ard2d –国产支持Stage3D的位图动画渲染引擎 AXEL – 一款支持GPU加速的2D游戏库 CadetEngine – a component-based AS3Scene Engine supporting 2D and 3D GPU accelerated rendering,physics, custom behaviours and 3rd party library integration. CadetEditor – A 2D &amp; 3D sceneeditor, built on CadetEngine. Citrus Flixel FlixelPower Tools FlashPunk Flat2D –一款集合Box2D、Starling、Signals的2D游戏引擎 StarlingPunk – 将 Starling 和 FlashPunk整合的游戏框架 ffilmation – 强大的2.5D游戏引擎 Gear – 国人开发的一款游戏引擎 Genome2D –一款效果不错的支持stage3D的游戏引擎 ND2D OpenSpace Pixelblitz PushButton Platform StarterKit Pixas –一款等距像素引擎 Pixelizer – 一款基于实体和组件的游戏引擎 QuickB2 – A 2d physics-based gameengine for Flash. Starling – The GPU powered 2D FlashAPI Feathers –基于Starling的开源可换肤UI框架 Starling-imagebatch – An optimized Image batchclass for Starling. AcheGesture – 基于 Starling的一套手识识别库 Starling中文站 Stats –支持Starling的统计工具 TheoWorlds Physics APE Box2DFlash Flade Motor2 nape 3D Away3D Alternativa3D EasyAGAL Flare3d Five3D Minko Papervision3D Sandy3D Sophie3D Yogurt3D Zest3D Particle Partigen Flint Stardust-Particle Other RaveAI – 一款通用AI引擎 GhostCat – 一款很全面的开源工具库 as3-commons – 一套可重用组件库Framework SomaMVC robotlegs – MVC框架 MVCExpress – 快速简单的MVC基础框架 Cuke4AS3 – 行为驱动开发(Behavior-drivendevelopment)框架 GPUImage – 一款GPU处理图像的框架 UI框架** MornUI – 一款小巧简洁的游戏UI框架，带编辑器 FlexLite – 一款轻量级的游戏UI框架AIR Native Extensions PhotosAlbum ANE ANE for save image as JPEG or PNG to iOS CameraRoll DeviceFileUtil ANE ANE for open file with registered application on iOS DeviceInfoUtil ANE ANE for get some information from iOS device Distriqt Native Extensions Update ANE package update v1.12! Includes updates to the Gyroscopeextension to report raw roll, pitch and yaw values. NativeTwitter ANE Adobe AIR ANE for iOS devices that allows developers to use thenative Twitter framework added in iOS 5.0. Appirater ANE Appirater is used to display “Please rate this app” dialogs. Game Kit ANE The iOS GameKit native extension allows your game to setup realtime matches for up to 4 players, send and receive custom databetween players, and enable voice chat during gameplay. Device Identification Native Extension that provides access to device identificationdata. It is possible to read the IMEI code, IMEI SV code, DeviceSerial Number, MODEL and IMSI code. Contact Editor – AddressBook NativeExtension Native Extension for iOS and Android enabling AddressBookaccess iCloudANE iCloudANE is a native extension that enables the use of iCloudstorage service. NativeExtension iOS Microphone Recorder iOS native extension to the capture and voice recording in iOS ANE StoreKit Native extension that allows the use of in-app purchasecapabilities. Even though StoreKit is a framework originallydeveloped for iOS, the extension allows the use of its features onAndroid as well. Chartboost ANE Air Native Extension for Chartboost (iOS + Android) ANE TestFlight TestFlight is a service that makes the testing process of anapplication a much easier task.Software Design MarkMan – 马克鳗 TexturePacker –一款跨平台的SpriteSheet制作软件 DragonBones – 一款骨骼动画工具 Spriter –一款跨平台的骨骼动画编辑器，支持Flixel、Starling等 Flump – 可以将fla文件导出为 Starling,Sparrow和 Flambe 等框架可用的位图序列+XML(JSON)的工具 Drawscript –Illustrator的扩展面板，可以生成图形绘制代码 shporter –一款Flash扩展工具，可以将动画生成供其他框架使用的格式 Development IDE** FlashDevelop Assetpack – 一款打包资源的插件 FlashBuilder SourceMate FDT CodeDrive – 基于 Visual Studio 2010的AS3开发插件 UML4AS –可以将设计好的UML转换成AS代码 UsefulTools** DeMonsterDebugger – Monster Debugger is anopen source debugger for Adobe Flash, Flex and AIR. FlashFireBug – FlashFirebug gives youthe ability to debug any AS3 Flash on the web. Pngcrush – PNG去掉Alpha通道工具 SWFWireDecompiler –An open source library written in ActionScript 3 for reading andwriting swfs. SWFWireDebugger – An open source AIRapplication for INTENSE ActionScript 3 debugging. TheMiner –Profiler工具，可以结合FlashDevelop实现自定义Profiler PhysicsEditor – Box2D多边形自动缓制工具 FlashTracer –Flash调试工具，支持各种浏览器及IDE Swift-Tool –Swfit可以帮助你把图片、字体、声音、二进制数据等资源打包成一个swf文件 SWiXFree – Easy to use XML-basededitor for SWF debugging and updating CleanSWF –移除swf中的时间戳小工具，可以避免编译器每次编译往SWF里加入时间戳导致生成的MD5每次都不一样的问题 SWFScoutEnabler –开启SWF的Scout调试功能 Encryption Tokaos 一款as混淆软件 Doswf –国产加密软件 Amayeta kindi Flasm SwfProtector Obfuscator – 一款用java写的简单的混淆工具 JPEXSFree Flash Decompiler – JPEXS Free FlashDecompiler FlashDecompiler Trillix – 一款很强大的Flash反编译工具 SWFID – 一款小巧强大的SWF解密工具 * secureSWF – 保护SWF文件 References 优化Flash平台性能（官方PDF中文版） ActionScript3参考手册* Flex SDK 编码和最佳实践 (Flex SDK coding conventions and bestpractices） Website* PixelBender中文站 Flash&amp;Math – 老牌Flash教程站 FlashPlayer 市场份额统计","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"工具类库","slug":"工具类库","permalink":"http://yoursite.com/tags/工具类库/"}]},{"title":"swfobject.js加载swf，关于是否加加载完成；","date":"2016-03-14T08:10:00.000Z","path":"2016/03/14/6522088/","text":"这几个帖子可以参考下http://bbs.9ria.com/forum.php?mod=viewthread&amp;page=1&amp;tid=38913http://bbs.9ria.com/thread-405243-1-1.html","tags":[{"name":"swf","slug":"swf","permalink":"http://yoursite.com/tags/swf/"},{"name":"swfobject.js","slug":"swfobject-js","permalink":"http://yoursite.com/tags/swfobject-js/"}]},{"title":"Flash加载ini文件！","date":"2016-03-14T08:10:00.000Z","path":"2016/03/14/6522089/","text":"这个帖子里有解决方案；http://bbs.9ria.com/thread-405128-1-1.html","tags":[{"name":"Flash","slug":"Flash","permalink":"http://yoursite.com/tags/Flash/"},{"name":"ini","slug":"ini","permalink":"http://yoursite.com/tags/ini/"}]},{"title":"【转】AS3多种天气预报调用代码分享","date":"2016-03-14T08:10:00.000Z","path":"2016/03/14/6522087/","text":"今天我们来介绍利用weather.com.cn上的天气预报功能，这里介绍了大家常用的，其它的大家可以自己去下载。我们这里的天气预览不需要js来调用，只要用iframe就可以了，更不需要ASP/‘ target=’_blank’class=’infotextkey’&gt;asp.net之类的来操作了。http://m.weather.com.cn/m/pn1/weather.htm“ width=”235” height=”20” marginwidth=”0” marginheight=”0”hspace=”0” vspace=”0”frameborder=”0” scrolling=”no”&gt;调用代码二1. 2. “ width=”180”height=”20” marginwidth=”0” marginheight=”0” hspace=”0”vspace=”0” 3. frameborder=”0”scrolling=”no”&gt;复制代码调用代码三1. 2. “ width=”225”height=”20” marginwidth=”0” marginheight=”0” hspace=”0”vspace=”0” 3. frameborder=”0”scrolling=”no”&gt;复制代码调用代码四1. 2. “ width=”160”height=”20” marginwidth=”0” marginheight=”0” hspace=”0”vspace=”0” 3. frameborder=”0”scrolling=”no”&gt;复制代码原文链接： http://www.002pc.com/master/College/26996.html","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"天气预报","slug":"天气预报","permalink":"http://yoursite.com/tags/天气预报/"}]},{"title":"【Egret】Lakeshore 使用中的一些疑难解决技巧！","date":"2016-03-14T05:29:00.000Z","path":"2016/03/14/6522093/","text":"用Lakeshore 1.2.1版本发布的html，会出现一些用户不想要的东西，下面讲讲如何去掉：一、问题：游戏或者动画在PC端也能跟随游览器自适应。 解决方法：①找到发布文件下的 egret_loader.js 文件，然后用dw或者记事本打开。 ② 然后找到如图所示： 把红框处的 NO_SCALE 改成 SHOW_ALL ，就可以了，记得保存。二、问题：去除自带的二维码 解决方法：①找到发布文件下的 index.html 文件，然后用dw或者记事本打开。 ②然后找到如图所示： 把红框内的内容全部删掉，切记红框外的别删，然后保存，就可以去掉二维码了。三、问题：去除或者换掉 加载界面的 白鹭logo图片 解决方法：①找到发布文件，然后resource\\assets文件夹下的 egret_icon.png 文件，替换此图片就可以了","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【Egret】3d 服务器配置","date":"2016-03-11T09:34:00.000Z","path":"2016/03/11/6522094/","text":"在服务器MIME里添加这些类型就可以了：","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"判断是否是IE（包含IE11）","date":"2016-03-10T07:05:00.000Z","path":"2016/03/10/6522098/","text":"判断是否是IE（包含IE11） if(!!window[“ActiveXObject”] || “ActiveXObject” in window) { alert(“ie”); }else { alert(“不是ie”); } //——————————————————————————————————————————————————————————————————————————//$(function(){ varSys={}; var ua= navigator.userAgent.toLowerCase(); var s; (s= ua.match(/rv:([\\d.]+)) like gecko/))?Sys.ie= s[1]: (s= ua.match(/msie ([\\d.]+)/))?Sys.ie= s[1]: (s= ua.match(/firefox\\/([\\d.]+)/))?Sys.firefox= s[1]: (s= ua.match(/chrome\\/([\\d.]+)/))?Sys.chrome= s[1]: (s= ua.match(/opera.([\\d.]+)/))?Sys.opera= s[1]: (s= ua.match(/version\\/([\\d.]+).*safari/))?Sys.safari= s[1]:0; if(Sys.ie) $(&apos;span&apos;).text(&apos;IE: &apos; +Sys.ie); if(Sys.firefox) $(‘span’).text(‘Firefox: ‘ +Sys.firefox); if(Sys.chrome) $(‘span’).text(‘Chrome: ‘ +Sys.chrome); if(Sys.opera) $(‘span’).text(‘Opera: ‘ +Sys.opera); if(Sys.safari) $(‘span’).text(‘Safari: ‘ +Sys.safari);});","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"是否是IE","slug":"是否是IE","permalink":"http://yoursite.com/tags/是否是IE/"}]},{"title":"【转】HTML5 API --- 页面可见性改变(visibilitychange)事件","date":"2016-03-08T10:00:00.000Z","path":"2016/03/08/6522099/","text":"[摘要：[本文属本创，若有转载，请说明出处http://blog.csdn.net/yl02520/article/] visibilitychange事情是扫瞄器新增加的一个事情，当扫瞄器的某个标签页切换到背景，或从背景切换到前台时便会触收该] visibilitychange事件是浏览器新添加的一个事件，当浏览器的某个标签页切换到后台，或从后台切换到前台时就会触发该消息，现在主流的浏览器都支持该消息了，例如Chrome, Firefox, IE10等。虽然这只是一个简单的功能，但是能够广大的采用HTML5开发游戏的开发者提供方便，比如用户正在玩游戏时，突然切换到后台去发一条短信或打一个电话，再切换到游戏，那么开发者就需要捕捉对这些突发情形进行处理，当游戏切换到后台时就暂停游戏，从后台切换回来时，又能允许用户继续游戏。 下面是一个简单的实例代码，当应用程序或浏览器标签页切换到后台时就停止播放音乐，从后台切换回来时又开始播放音乐。 Browser can’t support Audio tag.var audioElement = document.getElementById(“audio_id”);function onVisibilityChanged(event) { var hidden = event.target.webkitHidden; if (hidden) audioElement.pause(); else audioElement.play();}function load() { audioElement.play(); audioElement.loop = true; document.addEventListener(“webkitvisibilitychange”, onVisibilityChanged, false);} 注意：现在某些浏览器还保留了visibilitychange的前缀，例如Chrome浏览器还保留着webkit前缀，不过该事件已经趋于稳定，在Chrome 33及以后就去掉了前缀，直接使用visibilitychange，这里只是一个简单的实例程序，大家可以针对这个程序做简单修改，兼容更多的浏览器。","tags":[{"name":"HTML5","slug":"HTML5","permalink":"http://yoursite.com/tags/HTML5/"}]},{"title":"【Egret】web版本报错：XMLHttpRequest cannot load","date":"2016-02-17T09:41:00.000Z","path":"2016/02/17/6522101/","text":"[Egret] web发行版本报错：XMLHttpRequest cannot load [ file:///C:/Users/PX/Documents/EgretProjects/Xt1/resource/default.res.json] (http://bbs.egret.com/file:///C:/Users/PX/Documents/EgretProjects/Xt1/resource/default.res.json) 不能加载图片等资源，原因是IIS服务器没有开启asp和.json类型； 解决方法：http://bbs.egret.com/thread-1772-1-1.html [ http://blog.eroad.info/iis-suport-json/](http://blog.eroad.info/iis-suport-json/)","tags":[{"name":"Egret","slug":"Egret","permalink":"http://yoursite.com/tags/Egret/"}]},{"title":"【转】flash air中读取本地文件的三种方法","date":"2016-02-02T07:13:00.000Z","path":"2016/02/02/6522102/","text":"actionscript中读取本地文件操作有两种代码如下 1.使用File和FileStream两个类，FileStream负责读取数据的所以操作：（同步操作） var stream:FileStream = new FileStream();var file:File = new File(‘E:/test.txt’);//绑定一个文件stream.open(file,FileMode.READ);//读取文件trace(stream.readMultiByte(stream.bytesAvailable,’utf-8’));stream.close();稍微需要注意的一点是我们的File()函数里传的路径字符串，里面全都使用的是正斜杠，如果使用了反斜杠，你就会收到来自程序的错误。2.仅File类（异步操作）private var file:File;public function Tracer(){ file =new File(‘E:/daili.txt’);//绑定一个文件 file.addEventListener(Event.COMPLETE,onComplete); file.load();//执行读取操作}private function onComplete(event:Event):void{ vardata:ByteArray = file.data; trace(data.readMultiByte(data.bytesAvailable,’utf-8’));}3.使用File和FileStream（异步操作）var sourceFile:File = File.documentsDirectory.resolvePath(“Apollo Test/test.txt”);var stream:FileStream = new FileStream();stream.addEventListener(Event.COMPLETE, readBytes);stream.openAsync(sourceFile, FileMode.READ);function readBytes(e:Event):void { varbytes:ByteArray = newByteArray(); trace(“position 0:”, stream.position);// 0 bytes[0] = stream.readByte(); trace(“position 1:”, stream.position);// 1 fileStream.readBytes(bytes, stream.position,4); trace(“position 2:”, stream.position);// 5 stream.close();}原文：http://www.cnblogs.com/crkay/archive/2011/10/25/2223726.html","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"Flash","slug":"Flash","permalink":"http://yoursite.com/tags/Flash/"},{"name":"读取本地文件","slug":"读取本地文件","permalink":"http://yoursite.com/tags/读取本地文件/"}]},{"title":"【转】JS判断SWF,JPG加载完毕、兼容（Activex,plugIn）所有浏览器","date":"2014-07-29T02:38:00.000Z","path":"2014/07/29/6522103/","text":"## JS判断SWF,JPG加载完毕、兼容（Activex,plugIn）所有浏览器这里主要说下监听SWF的加载。网上流传已久的监听方法，只能在IE（Activex插件下）下实现。在使用plugin的浏览器下无法监听。首先贴张 chrome下载图这里提供一个可以监听所有浏览器的方式:原作者在这里：http://blog.sebastian-martens.de/2010/05/preload-assets-with-javascript-load-complete-callback-for-single-assets-include-swfflash/我修改后方便阅读使用的使用的版本：（20140718更新了以下失效链接）http://pan.baidu.com/s/1sjLhJIH注意我加载的SWF在我的空间，跨域以及本地都无法调用。请自行修改HTML中加载SWF的路径，并不要使用 file://来访问。你可以在我的网站查看效果http://luoee.com/lab/jsloadswf/ 本人小站暂时关闭原理说明：看了下作者的文件简单来说：还是使用了JS与一个loader的swf来完成监听的。通过JS将要加载的文件地址传输给这个事先制作好的loader,通过这个swf来加载文件，同时监听加载完成时，调用JS来抛出事件。这个demo不会显示出swf，只是用来监听使用。如果你的网站有很多swf(小游戏网站)，那么你可以这样来实现：1 制作一个loading等待的图片（可以是广告图等）2 等到监听到加载完毕时，关闭loading ,再重新使用你自己的代码来加载SWF并显示。（这时将会从缓存读取，注意safari最大缓存的单个文件是5M 至少目前是这么大）也许你要问为什么不直接用它的方式来显示呢？当让你需要修改它的代码，这个对很多人来说有一点难度吧，另外如果你加载SWF与页面有数据交互的话使用它的方式可能会失效！如果你对FLASH和js都有一定了解，那么你也可以自己写一个loader,来实现这些功能。当然你在制作这个loader的时候可以跟具你自己的需求来自定义，这样就不需要再有上面的第2步了。我在这里就不在新制作一个了。如果公司后期有需求，我再制作一下！并共享出来！","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"Flash","slug":"Flash","permalink":"http://yoursite.com/tags/Flash/"}]},{"title":"【转】AS3操作XML，增加、删除、修改","date":"2014-07-29T02:38:00.000Z","path":"2014/07/29/6522104/","text":"var i:Number=0;//用于下面循环 var webcontent:String=”Sontin’s Blog Welcome to 终吾一生“;var myXML:XML= {webcontent} 1000 百度一下，就知道 500 100; trace(“————————–初始XML————————————–”);trace(myXML); //先查找吧，下面操作都让XML变样了。trace(“————————–查找一————————————–”);//双点号(..)，又称为后裔访问符(the descendent accessor),访问当前元素的所有子元素trace(“找到[description]个数：”+myXML..description.length());trace(myXML..description); //myXML.site[0]..description; 这样同样正常的 trace(“————————–查找二————————————–”);//通配符()trace(“通配符：”+myXML.site[0].@.toXMLString()); //查第一个节点的所有属性trace(“site节点的所有属性：”);trace(myXML.site.@*.toXMLString()); //查所有 site节点的所有属性 trace(“————————–查找三————————————–”);//大于 &gt;，小于&lt;，等于 == (双等哦，要不变修改了)trace(myXML.site.(pagebyte==500));trace(myXML.site.(pagebyte&gt;500));//**必须每个site节点下都有pagebyte元素//把中间的括号去了看看，会有新发现哦。 trace(“————————–查找四————————————–”);//查属性trace(myXML.site.(@name==”谷歌”));//**必须每个site节点下都有name属性 trace(“————————–查找五，正则————————————–”);trace(myXML.site.(pagebyte.match(/^1\\d+/))); //查找pagebyte第一个字符是 1的trace(“name中第一个字母是S的：”+myXML.site.(@name.match(/^S\\w+/)));//**必须每个site节点下都有pagebyte元素，正则我也不太会用基础的表示一下好了。呵呵 //添加myXML.site[0].author=new XML();//添加一个空白节点(其实不用new也同样可以执行添加)myXML.site[0].author.@name=”子锡”;//添加一个属性myXML.site[0].author.@email=”sontin@qq.com”;//添加邮箱属性myXML.site[0].author.school=”社会大学”;//添加一个子节点//还有一些API 这就不提了，主要也就4项/appendChild(child:Object):XML 在当前子元素列表之后添加prependChild(child:Object):XML 在当前子元素列表之前添加insertChildAfter(child1:Object,child2:Object): 在子元素child1之后添加insertChildBefore(child1:Object,child2:Object):* 在子元素child1之前添加 */ //修改myXML.site.description[0]=myXML.site.description[0]+” 摆正心态，做好自己。”;myXML.site.@name[1]=myXML.site.@name[1]+”一下”; //删除(很简单，其实就是修改)delete myXML.site[1].@url; //删除节点属性delete myXML.site[1].description; //删除节点指定子元素//myXML.site[1]=””;//删除其下所有子节点(元素)//delete myXML.site[1];//删除该节点，包括其下子节点(元素) //myXML=null; //删除整个XML呢？null就好了，但下面要判断哦; if (myXML!=null) { trace(“———————-显示指定节点内容，没有输出空串————————–”); trace(myXML.site.description[0]); trace(myXML.site[0].description);//建议 trace(&quot;---------------------循环显示site-------------------------------------------&quot;); //.length()为统计个数 for (i=0; i&lt;myXML.site.length(); i++) { trace(&quot;第&quot; + i + &quot;个：&quot; + myXML.site[i]); } trace(&quot;----------------------循环显示site.name------------------------------------------&quot;); trace(myXML.site.@name); //.length()为统计个数 for (i=0; i&lt;myXML.site.@name.length(); i++) { trace(&quot;第&quot; + i + &quot;个name：&quot; + myXML.site.@name[i]); } //这样也可以(建议使用，这样更能体现对象的意义) trace(&quot;---这样也可以：&quot;); for (i=0; i&lt;myXML.site.length(); i++) { trace(&quot;第&quot; + i + &quot;个name：&quot; + myXML.site[i].@name); } trace(&quot;--------------------------最终的site--------------------------------------&quot;); trace(myXML.site); trace(&quot;--------------------------最终的XML--------------------------------------&quot;); trace(myXML); } 原文链接：http://bbs.9ria.com/blog-229904-21550.html","tags":[{"name":"XML","slug":"XML","permalink":"http://yoursite.com/tags/XML/"},{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"}]},{"title":"【转】一个小工具类，利用shareObject把数据缓存","date":"2014-07-29T02:37:00.000Z","path":"2014/07/29/6522111/","text":"原文链接：http://bbs.9ria.com/thread-284082-1-2.html之前做一个数据缓存，就顺便把写入缓存，清除缓存，获取缓存都整理了一下，其中也做了些参考，个人水平有限，有需要的就拿去改改用吧。上代码：package{ importflash.net.SharedObject; importflash.system.Security; importflash.system.SecurityPanel; public classcookie { private varso:SharedObject; private var_name:String publicfunction cookie(file_name:String) { //constructor code so =SharedObject.getLocal(file_name,”/“); _name=file_name } publicfunction flushData(key:String,value:):void { //添加数据 if(so.data.cookie == null) { varobj:Object = {}; obj[key] =value; so.data.cookie= obj; }else { so.data.cookie[key]= value; } trace(key+”:”+so.data.cookie[key]); flush(); } publicfunction deleteData(key:String):void { //删除数据值 if(judge(key)) { deleteso.data.cookie[key]; flush(); } } publicfunction getName():String { //获取数据名 return_name } publicfunction getData(key:String): { //获取数据值 if(judge(key)) { returnso.data.cookie[key]; }else { returnnull; } } publicfunction clearData():void { //清除缓存 so.clear(); } publicfunction judge(key:String):Boolean { //判断数据是否存在 returnso.data.cookie != undefined &amp;&amp; so.data.cookie[key] !=undefined } privatefunction flush():void { //写入 if(so) { try { so.flush(); } catch(e:Error) { Security.showSettings(); Security.showSettings( SecurityPanel.LOCAL_STORAGE ); } } } }}标注的都比较清楚，直接实例化，调用方法可以了，附件为cookie.as文件","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"本地存储","slug":"本地存储","permalink":"http://yoursite.com/tags/本地存储/"},{"name":"ShareObject","slug":"ShareObject","permalink":"http://yoursite.com/tags/ShareObject/"}]},{"title":"【转】PV3D的小练习~太阳系八大行星","date":"2014-07-29T02:37:00.000Z","path":"2014/07/29/6522109/","text":"转自：http://hi.baidu.com/boycy/item/70d1ba53bc8c3a958c12eddfhttp://www.cnblogs.com/flash3d/archive/2012/01/30/2331902.html## PV3D的小练习~太阳系八大行星动画地址：http://hong-ming.cn/flash/8star.swf有2M多，下载可能有点慢~多等等吧O(∩∩)O~~不知道为什么，在这里拖动舞台好像有点问题，直接点击下面的链接可以查看完整的功能点击右边的几个按钮 可以跟踪查看所选的物体 然后点击左边的自由查看按钮后可以鼠标拖动屏幕同时按方向键和CS感觉类似~其他就不多说了，玩玩就知道！以下是这个动画的源代码 以后还会对注释进行加精，有问题欢迎留言！（今天实在是太困了==）stop();//进入有代码的帧一般习惯停止下，以防止动画循环导致代码重复运行stage.scaleMode=StageScaleMode.SHOWALL;//舞台的显示模式设置为全部显示不扭曲import org.papervision3d.lights.PointLight3D;importorg.papervision3d.materials.shadematerials.FlatShadeMaterial;import org.papervision3d.objects.DisplayObject3D;import org.papervision3d.objects.primitives.Sphere;import org.papervision3d.view.Viewport3D;import org.papervision3d.render.BasicRenderEngine;import org.papervision3d.scenes.Scene3D;import org.papervision3d.materials.utils.MaterialsList;import org.papervision3d.cameras.Camera3D;importorg.papervision3d.materials.BitmapMaterial;//以上是导入PV3D的相关类var sunM:sunP=new sunP(100,100);var MercuryM:MercuryP=new MercuryP(100,100);var VenusM:VenusP=new VenusP(100,100);var earthM:earthP=new earthP(100,100);var MarsM:MarsP=new MarsP(100,100);var JupiterM:JupiterP=new JupiterP(100,100);var SaturnM:SaturnP=new SaturnP(100,100);var UranusM:UranusP=new UranusP(100,100);var NeptuneM:NeptuneP=newNeptuneP(100,100);//以上的sunM等等都是事先导入到库里面的位图，然后现在我们把它链接出来后进行实例化，以便我们在代码中能够使用这些位图，这里的位图数据做模型的贴图用var size:Number=0.01;//这个是全局的大小参数，和实际数据是乘除关系，控制星球的半径（太阳除外）var speed:Number=365;//这个是速度参数，也是乘除关系var distance:Number=1000;//这个是星球间的距离参数，乘除关系，同时也控制着太阳的半径var look:int=-1;//应该是个索引参数，0代表第一个行星的索引，1代表第二个……var ifplay:Boolean=true;//播放的时候值设为true，暂停的时候反之var iffree:Boolean=false;//自由查看状态的时候值为true，否则反之var star:Array=new Array();var sun:Array=new Array();sun.push({R:0.05,T:365,map:sunM});//把太阳的参数保存在数组里，R是半径，T是自转周期，map是贴图star.push({R:0.38,T:87.70,a:7.0,r:2440,t:58.65,map:MercuryM,con:null,ball:null});star.push({R:0.72,T:224.701,a:3.4,r:6051.8,t:-243.02,map:VenusM,con:null,ball:null});star.push({R:1.00,T:365.2422,a:7.25,r:6378.15,t:1,map:earthM,con:null,ball:null});star.push({R:1.52,T:686.98,a:1.8,r:3398,t:1.026,map:MarsM,con:null,ball:null});star.push({R:5.20,T:4332.589,a:0,r:71492,t:0.41,map:JupiterM,con:null,ball:null});star.push({R:9.54,T:10759.5,a:2.5,r:60268,t:0.426,map:SaturnM,con:null,ball:null});star.push({R:19.23,T:30799,a:0.772,r:25559,t:0.646,map:UranusM,con:null,ball:null});star.push({R:30.06,T:60152,a:1.769,r:24766,t:0.917,map:NeptuneM,con:null,ball:null});//以上是各星球的参数，R轨道半径，T公转周期，a轨道倾角，r星球半径，t自转周期，map贴图，con星球的容器对象，ball星球对象，另外关于AS3中数组的用法请参考帮助文档var viewport:Viewport3D;//定义视窗var scene:Scene3D;//定义3D场景var camera:Camera3D;//定义摄像机var renderer:BasicRenderEngine;//定义渲染引起，以上四个是建立一个基本的3D场景的四要素viewport=new Viewport3D(1024,768);//用Viewport3D的构造函数建立一个1024768大小的视窗scene=new Scene3D();//构造一个3D场景camera=newCamera3D();//构造一个摄像机，这里说明一下，为什么四要素要定义还要构造呢，定义可以理解为是开辟一块适合的空间用于构造，构造才是往这个空间里填充实质性的东西renderer= new BasicRenderEngine();//构造一个渲染引擎camera.z=-150;//将摄像机位置的Z坐标设为-150，在PV3D里面默认视角下，水平右方向是X正方向，竖直向上是Y正方向，垂直向里是Z正方向stage.addChild(viewport);//这个工作是必须的，PV3D的内容全部在视窗里显示，所以要想看到PV3D的内容前提是必须可以看到视窗，所以必须把视窗添加到舞台的显示列表，显示列表的概念可以参考帮助文档var sunS:Sphere;//定义一个球形物体，这个物体是用来当做太阳的var sunMaterial:BitmapMaterial;//定义一个贴图，用来做太阳的贴图sunMaterial=newBitmapMaterial(sun[0].map);//构造太阳的贴图，贴图的构造函数的参数是个BitmapData类型，这里的sun[0].map就是从我们库里面链接出来并创建的位图sunS=newSphere(sunMaterial,sun[0].Rdistance,15,15);//在这里解释下球体的构造函数参数，第一个是贴图数据类型，也就是上面刚刚构建的那个，第二个参数是半径，第三第四个分别是水平和竖直方向的段数，段数越高球体越圆越精细，当然对CPU的要求也就越高scene.addChild(sunS);//把太阳球体添加到3D场景里面for (var n:int=0; n&lt;8; n++) {//这里用一个八次的循环一次性创建八个行星star[n].con=newDisplayObject3D();//这里创建一个当做容器用的DisplayObject3D类，这个类，我们可以把它理解成是物质，球体摄像机包括还有正方体等等都是物质，所以DisplayObject3D类就是他们的父类，他们有共同的旋转，移动等等方法，这里为什么会要当做容器，主要是后面的公转方便star[n].ball=new Sphere(newBitmapMaterial(star[n].map),star[0].rsize,15,15);//这里创建球体的方法和创建太阳一样，根据数组的索引我们可以访问每组星球的参数，从而可以用循环创建不同的球体star[n].con.addChild(star[n].ball);//这里把球体加入到容器里面star[n].ball.z=-star[n].Rdistance;//然后球体相对于容器的Z坐标设置成公转轨道的半径star[n].con.rotationX+=star[n].a;//对容器绕着X旋转一个倾角（轨道倾角）star[n].con.rotationY+=Math.random()*360;//对容器绕着Y旋转一个随机角度，因为查了很多资料都不知道现在星球的初始状态，索性给它随机初始化^^scene.addChild(star[n].con);//把容易添加到场景（这个时候球体在容易里面，就好比是影片剪辑的嵌套原理一样，应该可以理解吧）}addEventListener(Event.ENTER_FRAME,process);//当进入帧的事件下发生函数process，实际上只要影片播放，Event.ENTER_FRAME这个事件就会被不断触发，于是process函数就会被不断反复执行，这个也是为什么画面可以动起来的原因了function process(evt:Event):void {if (ifplay) {//在播放情况下执行下面代码 sunS.rotationY-=speed/sun[0].T;//太阳自转 for (n=0; n=0) { camera.lookAt(star[look].ball);//根据索引选择跟踪查看的对象 } else{ camera.lookAt(sunS);//跟踪查看太阳 } }}renderer.renderScene(scene,camera,viewport);//不断进行渲染，要是不渲染画面就停住了（类似于刷新）}bs.addEventListener(MouseEvent.CLICK,bsg);//点击太阳按钮，进行相应的设置function bsg(event:MouseEvent):void {camera.z=-150;camera.x=0;camera.y=0;//以上是摄像机坐标设置，把相机挪到一个合适的视角speed=365;//对全局速度进行设置look=-1;//跟踪视角的索引，表示跟踪太阳iffree=false;//设置为非自由视角txt.text=”太陽是距離地球最近的恆星，是太陽系的中心天體。太陽系質量的99.87%都集中在太陽。太陽系中的八大行星、小行星、流星、彗星、外海王星天體以及星際塵埃等，都圍繞著太陽運行（公轉）。”;//下面显示的文字内容}b0.addEventListener(MouseEvent.CLICK,b0g);//下面的设置和太阳差不多，目的就是调节相机的位置和运行速度之类的function b0g(event:MouseEvent):void {camera.z=-500;camera.x=0;camera.y=0;speed=365;look=0;iffree=false;txt.text=”水星最接近太陽，是太陽系中最小最輕的行星。水星在直徑上小於木衛三和土衛六。”;}b1.addEventListener(MouseEvent.CLICK,b1g);function b1g(event:MouseEvent):void {camera.z=-800;camera.x=0;camera.y=0;speed=365;look=1;iffree=false;txt.text=”八大行星之一，中國古代稱之為太白或太白金星。它有時是晨星，黎明前出現在東方天空，被稱為“啟明”；有時是昏星，黃昏後出現在西方天空，被稱為“長庚”。金星是全天中除太陽和月亮外最亮的星，猶如一顆耀眼的鑽石，於是古希臘人稱它為阿佛洛狄忒–愛與美的女神，而羅馬人則稱它為維納斯–美神。”;}b2.addEventListener(MouseEvent.CLICK,b2g);function b2g(event:MouseEvent):void {camera.z=-1050;camera.x=0;camera.y=0;speed=365;look=2;iffree=false;txt.text=”地球是距太陽第三顆，也是第五大行星”;}b3.addEventListener(MouseEvent.CLICK,b3g);function b3g(event:MouseEvent):void {camera.z=-1600;camera.x=0;camera.y=0;speed=365;look=3;iffree=false;txt.text=”火星為距太陽第四遠，也是太陽系中第七大行星”;}b4.addEventListener(MouseEvent.CLICK,b4g);function b4g(event:MouseEvent):void {camera.z=-5300;camera.x=0;camera.y=0;speed=3650;look=4;iffree=false;txt.text=”木星是離太陽第五顆行星，而且是最大的一顆，比所有其他的行星的合質量大2倍（地球的318倍）。被稱為“行星之王”。”;}b5.addEventListener(MouseEvent.CLICK,b5g);function b5g(event:MouseEvent):void {camera.z=-9700;camera.x=0;camera.y=0;speed=14600;look=5;iffree=false;txt.text=”土星是離太陽第六遠的行星，也是八大行星中第二大的行星”;}b6.addEventListener(MouseEvent.CLICK,b6g);function b6g(event:MouseEvent):void {camera.z=-19280;camera.x=0;camera.y=0;speed=29200;look=6;iffree=false;txt.text=”天王星是太陽系中離太陽第七遠行星，從直徑來看，是太陽系中第三大行星。天王星的體積比海王星大，質量卻比其小。”;}b7.addEventListener(MouseEvent.CLICK,b7g);function b7g(event:MouseEvent):void {camera.z=-30100;camera.x=0;camera.y=0;speed=58400;look=7;iffree=false;txt.text=”海王星是環繞太陽運行的第八顆行星，也是太陽系中第四大天體（直徑上）。海王星在直徑上小於天王星，但質量比它大。”;}st.addEventListener(MouseEvent.CLICK,stg);//点击播放按钮function stg(event:MouseEvent):void {//播放参数为真ifplay=true;}pu.addEventListener(MouseEvent.CLICK,pug);//暂停function pug(event:MouseEvent):void {ifplay=false;}editor.addEventListener(MouseEvent.CLICK,editorg);//显示作者按钮function editorg(event:MouseEvent):void {txt.text=”陳鋆”;}seefree.addEventListener(MouseEvent.CLICK,seefreeg);//点击自由视角按钮，进入自由查看模式function seefreeg(event:MouseEvent):void {iffree=true;//自由查看设为真txt.text=”自由視角操作提示：按方向上下鍵可以前進後退，鼠標按住再移動可以改變視角”;}stage.addEventListener(MouseEvent.MOUSE_DOWN,MouseDown);//在舞台上按下鼠标的时候发生MouseDown函数stage.addEventListener(MouseEvent.MOUSE_MOVE,MouseMove);//鼠标在舞台上移动发生MouseMove函数stage.addEventListener(MouseEvent.MOUSE_UP,MouseUp);//鼠标在舞台上放开发生函数MouseUpvar roll:Boolean=false;//是否处于拖动状态的参数var previousMouseX:Number=0;var previousMouseY:Number=0;//临时储存鼠标的上一个位置function MouseDown(event:MouseEvent):void {//按下鼠标的时候if (iffree) {//当然要在自由查看的状态下 roll = true;//拖动被允许 previousMouseX =event.stageX; previousMouseY =event.stageY;//获取按下鼠标的位置}}function MouseUp(event:MouseEvent):void {//当鼠标放开的时候if (iffree) { roll = false;//拖动被禁止}}function MouseMove(event:MouseEvent):void {//当移动鼠标的时候if (iffree) {//在自由查看的状态下 var differenceX:Number =event.stageX - previousMouseX; var differenceY:Number =event.stageY - previousMouseY;//鼠标新位置和上一时刻的位置的差值，其实就是鼠标坐标的增量 if (roll) {//在可拖动的状态下 camera.rotationY+=differenceX; camera.rotationX+=differenceY;//镜头往鼠标移动的方向移动 previousMouseX = event.stageX; previousMouseY = event.stageY;//临时储存新的鼠标位置 }}}stage.addEventListener(KeyboardEvent.KEY_DOWN,keydown);//键盘有按键按下的情况发生keydownstage.addEventListener(KeyboardEvent.KEY_UP,keyup);//键盘有按键放开的情况下发生keyupstage.addEventListener(Event.ENTER_FRAME,go);//这个事件是上面讲过的连续发生事件，这里再连续发生govar movt:Boolean=false;//向前移动参数var movb:Boolean=false;//向后移动参数var s:Number=0;function keydown(event:KeyboardEvent):void {//有键盘按键按下if (iffree) {//在自由查看的情况下 if (event.keyCode==38){//如果按下去的键的键控代码值为38，也即是按下方向键的向上 movt=true;//那么向前移动被允许 movb=false;//向后移动被禁止 } else if (event.keyCode==40){//如果按下方向键向后 movt=false;//向前移动被禁止 movb=true;//向后移动被允许 }}}function keyup(event:KeyboardEvent):void {//按键被松开if (iffree) {//在自由查看的前提下 movt=false; movb=false;//先前向后均被禁止 s=0;}}function go(event:Event):void {//这个事件是被不断触发的if (iffree) {//在自由查看的前提下 if (movt) {//如果先前移动被允许 camera.moveForward(s++);//那么相机就向前移动 } else if (movb){//否则如果向后移动被允许 camera.moveBackward(s++);//那么相机向后移动 }}}","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"PV3D","slug":"PV3D","permalink":"http://yoursite.com/tags/PV3D/"}]},{"title":"【转】Android常用工具类","date":"2014-07-29T02:37:00.000Z","path":"2014/07/29/6522116/","text":"主要介绍总结的Android开发中常用的工具类，大部分同样适用于Java。目前包括HttpUtils、DownloadManagerPro、ShellUtils、PackageUtils、PreferencesUtils、JSONUtils、FileUtils、ResourceUtils、StringUtils、ParcelUtils、RandomUtils、ArrayUtils、ImageUtils、ListUtils、MapUtils、ObjectUtils、SerializeUtils、SystemUtils、TimeUtils。The English version of this article see：Android Common Utils所有代码都在TrineaAndroidCommon@Github中，欢迎Star或Fork^_，除这些工具类外此项目还包括缓存、下拉ListView等。详细接口介绍可见TrineaAndroidCommon API Guide。具体使用：可直接引入TrineaAndroidCommon作为你项目的library(如何拉取代码及添加公共库)，或是自己抽取其中的部分使用。1、HttpUtilsHttp网络工具类，主要包括httpGet、httpPost以及http参数相关方法，以httpGet为例：static HttpResponse httpGet(HttpRequest request)static HttpResponse httpGet(java.lang.String httpUrl)static String httpGetString(String httpUrl)包含以上三个方法，默认使用gzip压缩，使用bufferedReader提高读取速度。HttpRequest中可以设置url、timeout、userAgent等其他http参数HttpResponse中可以获取返回内容、http响应码、http过期时间(Cache-Control的max-age和expires)等前两个方法可以进行高级参数设置及丰富内容返回，第三个方法可以简单的传入url获取返回内容，httpPost类似。更详细的设置可以直接使用HttpURLConnection或apache的HttpClient。源码可见HttpUtils.java，更多方法及更详细参数介绍可见HttpUtils Api Guide。2、DownloadManagerProAndroid系统下载管理DownloadManager增强方法，可用于包括获取下载相关信息，如：getStatusById(long) 得到下载状态getDownloadBytes(long) 得到下载进度信息getBytesAndStatus(long) 得到下载进度信息和状态getFileName(long) 得到下载文件路径getUri(long) 得到下载urigetReason(long) 得到下载失败或暂停原因getPausedReason(long) 得到下载暂停原因getErrorCode(long) 得到下载错误码源码可见DownloadManagerPro.java，更多方法及更详细参数介绍可见DownloadManagerPro Api Guide。关于AndroidDownManager使用可见DownManager Demo。3、ShellUtilsAndroid Shell工具类，可用于检查系统root权限，并在shell或root用户下执行shell命令。如：checkRootPermission() 检查root权限execCommand(String[] commands, boolean isRoot, booleanisNeedResultMsg) shell环境执行命令，第二个参数表示是否root权限执行execCommand(String command, boolean isRoot) shell环境执行命令源码可见ShellUtils.java，更多方法及更详细参数介绍可见ShellUtils Api Guide。关于静默安装可见apk-root权限静默安装。4、PackageUtilsAndroid包相关工具类，可用于(root)安装应用、(root)卸载应用、判断是否系统应用等，如：install(Context, String) 安装应用，如果是系统应用或已经root，则静默安装，否则一般安装uninstall(Context, String) 卸载应用，如果是系统应用或已经root，则静默卸载，否则一般卸载isSystemApplication(Context, String) 判断应用是否为系统应用源码可见PackageUtils.java，更多方法及更详细参数介绍可见ShellUtils Api Guide。关于静默安装可见apk-root权限静默安装。5、PreferencesUtilsAndroidSharedPreferences相关工具类，可用于方便的向SharedPreferences中读取和写入相关类型数据，如：putString(Context, String, String) 保存string类型数据putInt(Context, String, int) 保存int类型数据getString(Context, String) 获取string类型数据getInt(Context, String) 获取int类型数据可通过修改PREFERENCE_NAME变量修改preference name源码可见PreferencesUtils.java，更多方法及更详细参数介绍可见PreferencesUtils Api Guide。6、JSONUtilsJSONUtils工具类，可用于方便的向Json中读取和写入相关类型数据，如：String getString(JSONObject jsonObject, String key, StringdefaultValue) 得到string类型valueString getString(String jsonData, String key, String defaultValue)得到string类型value表示从json中读取某个String类型key的值getMap(JSONObject jsonObject, String key) 得到mapgetMap(String jsonData, String key) 得到map表示从json中读取某个Map类型key的值源码可见JSONUtils.java，更多方法及更详细参数介绍可见JSONUtils Api Guide。7、FileUtils文件工具类，可用于读写文件及对文件进行操作。如：readFile(String filePath) 读文件writeFile(String filePath, String content, boolean append)写文件getFileSize(String path) 得到文件大小deleteFile(String path) 删除文件源码可见FileUtils.java，更多方法及更详细参数介绍可见FileUtils Api Guide。8、ResourceUtilsAndroid Resource工具类，可用于从android资源目录的raw和assets目录读取内容，如：geFileFromAssets(Context context, String fileName)得到assets目录下某个文件内容geFileFromRaw(Context context, int resId) 得到raw目录下某个文件内容源码可见ResourceUtils.java，更多方法及更详细参数介绍可见ResourceUtils Api Guide。9、StringUtilsString工具类，可用于常见字符串操作，如：isEmpty(String str) 判断字符串是否为空或长度为0isBlank(String str) 判断字符串是否为空或长度为0 或由空格组成utf8Encode(String str) 以utf-8格式编码capitalizeFirstLetter(String str) 首字母大写源码可见StringUtils.java，更多方法及更详细参数介绍可见StringUtils Api Guide。10、ParcelUtilsAndroid Parcel工具类，可用于从parcel读取或写入特殊类型数据，如：readBoolean(Parcel in) 从pacel中读取boolean类型数据readHashMap(Parcel in, ClassLoader loader) 从pacel中读取map类型数据writeBoolean(boolean b, Parcel out) 向parcel中写入boolean类型数据writeHashMap(Map map, Parcel out, int flags)向parcel中写入map类型数据源码可见ParcelUtils.java，更多方法及更详细参数介绍可见ParcelUtils Api Guide。11、RandomUtils随机数工具类，可用于获取固定大小固定字符内的随机数，如：getRandom(char[] sourceChar, int length) 生成随机字符串，所有字符均在某个字符串内getRandomNumbers(int length) 生成随机数字源码可见RandomUtils.java，更多方法及更详细参数介绍可见RandomUtils Api Guide。12、ArrayUtils数组工具类，可用于数组常用操作，如：isEmpty(V[] sourceArray) 判断数组是否为空或长度为0getLast(V[] sourceArray, V value, V defaultValue, boolean isCircle)得到数组中某个元素前一个元素，isCircle表示是否循环getNext(V[] sourceArray, V value, V defaultValue, boolean isCircle)得到数组中某个元素下一个元素，isCircle表示是否循环源码可见ArrayUtils.java，更多方法及更详细参数介绍可见ArrayUtils Api Guide。13、ImageUtils图片工具类，可用于Bitmap, byte array,Drawable之间进行转换以及图片缩放，目前功能薄弱，后面会进行增强。如：bitmapToDrawable(Bitmap b) bimap转换为drawabledrawableToBitmap(Drawable d) drawable转换为bitmapdrawableToByte(Drawable d) drawable转换为bytescaleImage(Bitmap org, float scaleWidth, float scaleHeight)缩放图片源码可见ImageUtils.java，更多方法及更详细参数介绍可见ImageUtils Api Guide。14、ListUtilsList工具类，可用于List常用操作，如：isEmpty(List sourceList) 判断List是否为空或长度为0join(List list, String separator) List转换为字符串，并以固定分隔符分割addDistinctEntry(List sourceList, V entry) 向list中添加不重复元素源码可见ListUtils.java，更多方法及更详细参数介绍可见ListUtils Api Guide。15、MapUtilsMap工具类，可用于Map常用操作，如：isEmpty(Map sourceMap) 判断map是否为空或长度为0parseKeyAndValueToMap(String source, String keyAndValueSeparator,String keyAndValuePairSeparator, boolean ignoreSpace)字符串解析为maptoJson(Map map) map转换为json格式源码可见MapUtils.java，更多方法及更详细参数介绍可见MapUtils Api Guide。16、ObjectUtilsObject工具类，可用于Object常用操作，如：isEquals(Object actual, Object expected) 比较两个对象是否相等compare(V v1, V v2) 比较两个对象大小transformIntArray(int[]source) Integer 数组转换为int数组源码可见ObjectUtils.java，更多方法及更详细参数介绍可见ObjectUtils Api Guide。17、SerializeUtils序列化工具类，可用于序列化对象到文件或从文件反序列化对象，如：deserialization(String filePath) 从文件反序列化对象serialization(String filePath, Object obj) 序列化对象到文件源码可见SerializeUtils.java，更多方法及更详细参数介绍可见SerializeUtils Api Guide。18、SystemUtils系统信息工具类，可用于得到线程池合适的大小，目前功能薄弱，后面会进行增强。如：getDefaultThreadPoolSize() 得到跟系统配置相符的线程池大小源码可见SystemUtils.java，更多方法及更详细参数介绍可见SystemUtils Api Guide。19、TimeUtils*时间工具类，可用于时间相关操作，如：getCurrentTimeInLong() 得到当前时间getTime(long timeInMillis, SimpleDateFormat dateFormat)将long转换为固定格式时间字符串源码可见TimeUtils.java，更多方法及更详细参数介绍可见TimeUtils Api Guide。来自：EOE","tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"工具类","slug":"工具类","permalink":"http://yoursite.com/tags/工具类/"}]},{"title":"【转】AS3画板工具类，可直接套用","date":"2014-07-29T02:37:00.000Z","path":"2014/07/29/6522110/","text":"原文链接：http://bbs.9ria.com/thread-212711-1-16.html今天项目需求做一个画板，要有橡皮擦。自己懒不想写，在网上搜了半天都是习作，没有拿来就能用的又不爱看。只好自己写了一个。既然写了就跟大家分享了吧，造福跟我一样懒的= =。直接实例化添加显示列表，属性和方法在类里边有注释， DrawBoard.zip","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"},{"name":"画板","slug":"画板","permalink":"http://yoursite.com/tags/画板/"}]},{"title":"【转】air调用windows自带的虚拟键盘","date":"2014-07-29T02:36:00.000Z","path":"2014/07/29/6522127/","text":"# 原文：http://bbs.9ria.com/blog-73243-19560.html最近在做一个东西，需要用到虚拟键盘。刚开始准备用as3开发一套，结果突然想起来windows有个自带的虚拟键盘（osk.exe），而且air是支持调用本地程序的，所以就写了个程序来调用。刚开始直接调用C:/Windows/System32/osk.exe 发现是行不通的，调用的时候会报错。而后想了下，或许osk.exe这个东西更应该是属于bat类型文件，而NativeProcess是不能直接调用bat文件的，要用的话需要先调用cmd，然后给cmd参数来调用osk。试了下，果然行了。先上代码package{ importflash.desktop.NativeApplication; importflash.desktop.NativeProcess; importflash.desktop.NativeProcessStartupInfo; import flash.display.Sprite; importflash.display.StageDisplayState; import flash.events.Event; import flash.events.MouseEvent; import flash.filesystem.File; import flash.text.TextField; importflash.text.TextFieldType; public class VirtualKeyBoard extendsSprite { private varfile:File; private varnativeProcessStartupInfo:NativeProcessStartupInfo; private varprocess:NativeProcess; private vartextField:TextField; public functionVirtualKeyBoard() { this.stage.displayState =StageDisplayState.FULL_SCREEN_INTERACTIVE; this.stage.nativeWindow.alwaysInFront = true; process =new NativeProcess(); file = newFile(); NativeApplication.nativeApplication.autoExit=true; file=file.resolvePath(“C:/Windows/System32/cmd.exe”); varprocessArg:Vector. = new Vector.(); processArg[0] = “/c”;// 加上/c，表示是cmd的参数 processArg[1] =”C:/Windows/System32/osk.exe”;//bat的路径，建议用绝对路径，如果是相对的，可以用File转一下 nativeProcessStartupInfo = newNativeProcessStartupInfo(); nativeProcessStartupInfo.executable = file; nativeProcessStartupInfo.arguments = processArg; textField= new TextField(); textField.width = 300; textField.y = 30; textField.x = 30; addChild(textField); textField.border = true; textField.type = TextFieldType.INPUT; textField.addEventListener(MouseEvent.CLICK,onTextFieldActivateHandler); } private functiononTextFieldActivateHandler(evt:Event):void { if(process.running)return; process.start(nativeProcessStartupInfo); } }}注意下中间 processArg[0] = “/c”;// 加上/c，表示是cmd的参数processArg[1] =”C:/Windows/System32/osk.exe”;//bat的路径，建议用绝对路径，如果是相对的，可以用File转一下这两行代码就行，是给调用的程序添加参数。另外，可以把osk.exe拷贝到任何地方使用。","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"window虚拟键盘","slug":"window虚拟键盘","permalink":"http://yoursite.com/tags/window虚拟键盘/"}]},{"title":"FB,Flash,as3 Bug集","date":"2014-07-29T02:35:00.000Z","path":"2014/07/29/6522139/","text":"一、Flash builder 报错 当导入3.0的项目时运行出现如下错误：进程已终止，没有建立到调试器的连接。error while loading initial content启动命令详细信息: “C:\\Program Files\\Adobe\\Adobe Flash Builder4\\sdks\\flex_sdk_4.5.0.19786\\bin\\adl.exe” -runtime “C:\\ProgramFiles\\Adobe\\Adobe Flash Builder4\\sdks\\flex_sdk_4.5.0.19786\\runtimes\\air\\win” “D:\\fb4workspace\\sadf\\bin-debug\\sadf-app.xml” “D:\\fb4workspace\\sadf\\bin-debug” 解决方法：版本不一样所致。air-app.xml 配置文件flex sdk 3.0.0的改成 1.0flex sdk 3.2 的改成 1.5以后的版本也是同样方法applicationxmlns=&quot;http://ns.adobe.com/air/application/1.5&quot;二、Flash Builder在Debug时出现的问题：Flash Builder 找不到所需的Adobe FlashPlayer调试器版本解决方法：1. 进入Flash Builder的安装目录 C:\\Program Files\\Adobe\\Adobe FlashBuilder 4.6\\player\\win\\11.12. 安装flashplayer_11_plugin_debug.exe，下载地址：http://www.adobe.com/support/flashplayer/downloads.html三、在FlashCS6里textfield里输入不了汉字flash player 11.2，textfiel里输入不了汉字；用微软雅黑，设备字体；并加一句代码：flash.system.IME.enabled = true;四、textfield文字输入限制： my_txt.restrict = “A-Z 0-9”; //仅允许在文本字段中输入大写字符、空格和数字 my_txt.restrict = “^a-z”;//包含除小写字母之外的所有字符 my_txt.restrict = “\\-\\^”; //这段代码只包含短划线 (-) 和尖号 (^) my_txt.restrict = “A-Z^Q”; //这段代码只包含除大写字母 Q 之外的大写字母 my_txt.restrict = “ -~”;//只包含从 ASCII 32（空格）到 ASCII 126（代字号）之间的字符 my_txt.restrict = “a-zA-Z\\u4e00-\\u9fa5” //这样是代表只能够输入大小写的英文字母和中文 my_txt.restrict =”^\\/“; //禁止”/“; my_txt.restrict =”^\\\\\\“; //禁止”\\”,要6个”\\”;","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"Flash","slug":"Flash","permalink":"http://yoursite.com/tags/Flash/"},{"name":"Flash Builder","slug":"Flash-Builder","permalink":"http://yoursite.com/tags/Flash-Builder/"},{"name":"BUG","slug":"BUG","permalink":"http://yoursite.com/tags/BUG/"}]},{"title":"【转】译—游戏开发者应该如何应用Git和GitHub","date":"2014-07-29T02:35:00.000Z","path":"2014/07/29/6522140/","text":"原文地址：http://bbs.9ria.com/thread-259587-1-2.html”我确信Git是强大的，但是它看起来很复杂——我依然会坚持我当前的工作流“就像说“我也敢肯定像FlashDevelop 和SublimeText也是非常强大的，但是他们看起来也是很复杂——所以我仍然坚持用Notepad”。当然，学习这个确实要走些弯路，但是你的生活中确实有不可以缺少它，这看起来很愚蠢。在这篇文章中，我会解释为什么Git（还有GitHub）会这么伟大，还有会为你演示如何让你快速入门。笔记：我在这里说得最多的是关于苹果系统上的版本控制，像Subversion，当然还有很受欢迎的Git，如果你有这样的选着自由的话，我推荐你选择它！到底Git能为你做些什么Git对于所有的游戏开发者来说都是有好处的，无论是独立开发还是团队开发。现在先让我们看一看最大的好处：Git能够让回撤销所有你做过的改变最重要的一点是，当你请求这个游戏的工作目录时，Git能让你获取到这样的一个”快照“，你还可以随时都可以恢复到任何的快照中。这和那些当你为你的游戏生成一个新的版本时就为你弄一个整个文件的副本不一样，它相对来说更好。或者以电子邮件的形式给你发送一段带有描述的代码，这样的话你就不会丢失他！另外，你还不被局限在同一条线上进行撤销和重做;你可以将你的整个项目分成一个树状结构的快照，你可以随意根据自己的意愿去将会不同分支的快照。意思就是你可以在你的1.1版本中添加一个新的特性，然后将它恢复到1.0版本，这样就能完成一个Bug的修复;或者你也可以用来试验你的特性，如果它让你不满意，你可以将它报废掉;或者让你的手机和平板项目虽然在一起，但是却相对对立开来！Git不仅仅能够让你注释你的代码，它还能够让你注释你的作品！事实上，Git并不是让你能够为你的代码添加注释——它是鼓励你去做这样的事情，甚至是要求你这样做！基本上，无论什么时候你保存一个快照，你就已经为你的上一个快照的改变写了一个注释。下面是有关Tiled的几个示例注释，这是一个我们之前提到的关卡编辑器： 除了让你能够更加容易地在你的项目中找到一个特定的点(这个通常能够帮助你追踪到Bug产生的原因)，还能让你养成一个良好的开发习惯：你会发现你会将自己的工作分厂很多小任务，这样做能够让你为每个部分都做个通过一个简短的注释就能完整地描述到它，比同时在8个不同的事情之间工作好多了！Git能够让你更好地访问到其它的项目到目前位置，我一直在谈论的是Git，它只是一个想ZIP或者email或FTP的软件。对比一下GitHub，它是一个能够让你保存你的快照的网站(或者是你整个的项目)。其实还有其它保存Git的网址，当然还有一种可能就是你用你自己的服务器去保存你的Git项目的快照，但是到目前为止，GitHub是最好的。你可以认为他像Gmail：它可能并不是唯一基于Web的电子邮件应用程序，但是对于很多人来说它是。有很多游戏或者是游戏工具都在GitHub在开源的，例如想Tiled（这个我之前提到过）还有Starling的框架（这个我们之前也提到过）。这意味着你不仅可以下载到最新版本的Starling框架的一个zip的文件和可以将它提取到你的项目中，你也可以将它导入到你的项目中，这样它就会在它有变化的时候自动更新。你也可以在问题建议中提出某些建议或者反映一些bug: 或者你也可以对这个项目弄一个本地的副本（通过”fork”）,你可以在这个项目中添加你自己的功能或者修正某些bug，你可以提交这个自己项目给项目原本的持有者，并建议他合并成为主要版本。(你会发现很多我们放到GitHub上的源文件都是从Tuts上读取到的-这样做的主要原因是为什么呢？)Git能够让你更好地与其他的开发者进行协作以上的所有理由使得Git对所有的独立开发者来说都是非常宝贵的！但是这些好处对团队开发来说本来也是非常方便的： 相对于通过邮件附件共享所有东西或者Dropbox，在团队里面利用Git(无lung是通过GitHub的高端私人计划或者是其它托管方法)会使交流更加的简单。 由于每个被添加到项目中的快照都带有一个附上注释和作者的标记，所以这样很容易追踪到是谁做了些什么。* 每个在团队中的人都能修改他们自己的代码，当你觉得你的代码可以的时候你可以将它提交到你的主项目中（从而能够避免破坏项目）。Git也有一个功能让你能够合并不同的代码在一起，它能够让你很好地去处理冲突而不是盲目地覆盖项目的某些部分。Git的搭建过去安装Git和搭建它是一件很复杂的事情，因为涉及到要使用一些列的命令行去生成“SSH键”或者“ugh”。但是现在确实非常简单：你所要做的是就只用想在GitHub forWindows 或者 GitHub forMac。当让，我知道我曾经告诉过你GitHub是一个在网络托管Git的快照的网站，但是这里我只是告诉你通过安装GitHub去使用Git。这就会让人疑惑：GitHub应用是一个让你安装到Git并为你提供一个良好的接口的软件，它同时也提供另外一个选择让你能够在网页上托管你的快照。其实不用太过担心这个问题。你只需要更具你的系统去下载并且安装它就可以了！除非你是使用Linux，这样的话我恐怕你要走一个相当复杂的过程开始使用Git我将会教你如何为你最近的游戏或者项目搭建Git，这样你就能真正地用到它，并不是随便的一些假的练习。我现在正在使用的GitHub的Windows版本，但是这些步骤和Mac上的版本有很多的相似之处。我现在假设bfxr就是我现在在用的工作项目，当然其实这并不是真的。打开GitHub，然后点击创建开始创建一个新的”repo“(是”repository的简写“，这个是为你的游戏或者项目存储快照的地方)。你要为你的项目输入一个名字和描述，然后使用默认的路径就可以了（你不需要把它放到特定的目录中），最后要注意的是不要勾选Pushto github。 双击你新创建的知识库就可以在应用程序中打开它： 你会看到它会提示你有两个文件需要”提交“(这个将会以一个快照的形象添加到知识库中);这里还有Git的配置文件，所以要为它在CommitMessage 框中键入一个简单的注释并点击 Commit： 现在点击 tools(工具)&gt;open inexplorer(从资源管理器中打开)，然后就能打开这个项目的Git工作目录。那里除了两个配置文件之外什么都没有(还会隐藏一个后缀为.git的文件，这个文件或许你会看不到)： 然后将你的项目全部都复制进这个文件夹里面（虽然看起来很乱，起码这样可以让你放心，因为如果你某些东西出错的时候你还存有一个备份）。 现在我们回到Windows的GitHub——它会通知你有新的文件出现了： 将这些代码都提交，这样你就搭建了你的第一个基础知识库了！现在在你的项目中改变某个文件，你可以添加一个新的文件或者修改已经存在的文件： 现在又回到Windows版本的GitHub，然后它就会检测到这些文件。提交这些改变，从unsyncedcommits(为同步提交)列表中点击revertcommit(恢复提交)。你现在会有一个新的注释，这个注释是从之前的注释中恢复的——这些开起来可能有点让人迷惑，但是这以为这你现在能跟踪到每一个你所做出的改变！ 检查一下你这是项目中的文件夹：你的新文件(或者是你其他文件的改动)已经没有了。如果你喜欢的话，你可以恢复这个恢复，仍然会在你的注释列表中添加一条注释，或者会滚到之前你在列表中它被移除的位置。总结*就这些？虽然是，但是事实上也不是。我将这篇文章的素材都放到GitHub上了,所以你可以在这个网址上做一些“增强”练习(建议你添加一下你想添加的东西),记录一些“bugs”(例如似乎这篇文章的问题).如果你确实很喜欢冒险，你可以尝试一下将这篇文章“保存”到你的电脑上，然后添加你自己的东西，然后提交一个添加的请求让它添加到这个网站上…如果这些对你来说不感兴趣，不用担心，下一个版本将会包含更多的细节。原文链接：http://gamedev.tutsplus.com/tutorials/business/git-and-github-for-game-developers/翻译词数：1409Git_and_GitHub_for_Game_Developers_FullDir.jpg (24.03KB, 下载次数: 2)","tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"【转】一个工具类（可以控制多层嵌套的movieClip)","date":"2014-07-29T02:35:00.000Z","path":"2014/07/29/6522136/","text":"好多人也应该遇到和我一样的问题，当设计师给了我们一个多层嵌套的movieClip时，我们在写代码时无法将movieClip完全停止掉，主要是基于好多movieClip有深层嵌套，主时间轴不在最上层导致的，所以基于这个原因写了下面的类。看代码：（有很详细的注释）1. package com.sina.utils 2. {3. import flash.display.MovieClip;4. 5.6. public class MovieClipManage 7. {8. private var_target:MovieClip;9. private var_type:String;10. 11.12. public functionMovieClipManage(mc:MovieClip = null) 13. {14. _target =mc;15. }16. 17. private functiongoto(mc:MovieClip, frame:int = 0):void18. {19. if(!(mc isMovieClip))20. {21. throw new Error(“MovieClipManage:::目标不是movieClip”);22. return;23. }24. frame &gt;0 ? mc_type: mc_type;25. 26. if(mc.numChildren &gt; 0)27. {28. for (var i:int = 0; i &lt; mc.numChildren; i++) 29. {30. if (mc.getChildAt(i) asMovieClip)31. {32. goto(mc.getChildAt(i) as MovieClip, frame);33. }34. }35. } 36. 37. }38. 39. //——————–API———————————40.41. public functionpause(target:MovieClip = null):void42. {43. _type =”stop”;44. target =target || _target;45. goto(target);46. }47. 48.49. public functionplay(target:MovieClip = null):void50. {51. _type =”play”;52. target =target || _target;53. goto(target);54. }55. 56.57. public functionstop(target:MovieClip = null):void58. {59. _type =”gotoAndStop”;60. target =target || _target;61. goto(target, 1);62. }63. 64.65. public functionreplay(target:MovieClip = null):void66. {67. _type =”gotoAndPlay”;68. target =target || _target;69. goto(target, 1);70. }71. }72. 73. }复制代码//———————————————————————实现原理：主要用到了递归的原理来循环找到底层的movieClip原件，然后执行相应的操作来达到将所有嵌套的原件*暂停，重播等功能。原文地址：http://www.99ria.com/blog/?p=230","tags":[{"name":"ActionScript 3.0","slug":"ActionScript-3-0","permalink":"http://yoursite.com/tags/ActionScript-3-0/"}]},{"title":"【转】如何实现Flex页面跳转","date":"2014-07-29T02:35:00.000Z","path":"2014/07/29/6522134/","text":"其实对于这个题目是不恰当的，因为flex中是没有页面这个概念的，页面在flex里面其实就是一个个的Canvas，vbox，hbox等等之类的东西，看到的不同页面的切换，就是这些元素一层层的堆积，或者替换，但是为了好理解，还是称之为”页面跳转”。其实我们可以对比传统的C/S开发模式，没页面跳转，只有窗体和元件的显示和隐藏。 那么怎么实现Flex页面跳转呢，我总结了下，主要有一下几种方式：第一种，使用ViewStack组件，具体代码如下所示：把要跳转的页新建成MXMLComponent,然后通过ViewStack组件把这些页包含进来 然后再用别的组件切换这些页，比如用Button 第二种，使用navigateToURL，主要方式如下：var url:String=”http://localhost:8080/Flex_J2eeDemo/bin/Welcome.html“;var request:URLRequest=newURLRequest(url);navigateToURL(request,”_blank”);但是这个方法很郁闷就是页面切换总是弹出新的页面，而不是只变换url第三种，也是我采用的方法，就是引用flash中的importflash.external.ExternalInterface这个接口，他能提供像jsp中window.location.href方法一样方便，Flex页面跳转主要代码为： ExternalInterface.call(“function(){window.location.href=’http://localhost:8080/Flex_J2eeDemo/bin/Welcome.html&#39;;}“);4、使用组件技术，把不通的页面做成component，然后通过TabNavigator等进行切换，通过使用state实现跳转。 原文链接：http://news.9ria.com/2013/1011/33121.html","tags":[{"name":"Flex","slug":"Flex","permalink":"http://yoursite.com/tags/Flex/"},{"name":"页面跳转","slug":"页面跳转","permalink":"http://yoursite.com/tags/页面跳转/"}]}]